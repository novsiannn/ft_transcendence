(()=>{"use strict";var e={274:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.btn=void 0,t.btn=document.createElement("button")},436:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.mainWrapper=void 0,t.mainWrapper=document.createElement("div")},624:function(e,t,n){var o=this&&this.__createBinding||(Object.create?function(e,t,n,o){void 0===o&&(o=n);var r=Object.getOwnPropertyDescriptor(t,n);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,o,r)}:function(e,t,n,o){void 0===o&&(o=n),e[o]=t[n]}),r=this&&this.__exportStar||function(e,t){for(var n in e)"default"===n||Object.prototype.hasOwnProperty.call(t,n)||o(t,e,n)};Object.defineProperty(t,"__esModule",{value:!0}),r(n(274),t),r(n(436),t)},156:function(e,t,n){var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),(0,o(n(468)).default)()},258:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(){const e=document.querySelector("#score-info"),t=document.getElementById("game-board"),n=document.querySelector("#restart-btn");let o;const r=null==t?void 0:t.getContext("2d"),i=t.width,c=t.height,a="w",l="s",s="ArrowUp",u="ArrowDown",d=25,f=120,y=13;let p=5,b=0,x=0;const m={x:i-d,y:c-f};let g=Object.assign({},{x:0,y:0}),v=Object.assign({},m);const h={x:i/2,y:c/2};let _=Object.assign({},h);const w={x:0,y:0};function O(e,t,n){r.fillStyle=n,r.fillRect(e,t,d,f)}function j(){r.beginPath(),r.fillStyle="white",r.arc(_.x,_.y,y,0,2*Math.PI),r.fill()}function M(){return Math.random()<.5}function P(){M()?w.x=1:w.x=-1,M()?w.y=1:w.y=-1}function k(){_.x+=p*w.x,_.y+=p*w.y,function(){const e=_.y<=y,t=_.y>=c-y;(e||t)&&(w.y*=-1)}(),function(){const e=function(){const e=_.x<=g.x+y+d,t=_.y>=g.y&&_.y<=g.y+f;return e&&t}(),t=function(){const e=_.x>=v.x-y,t=_.y>=v.y&&_.y<=v.y+f;return e&&t}();(e||t)&&(p*=1.07,w.x*=-1,e?_.x=g.x+d+y:t&&(_.x=v.x-y))}(),function(){const e=_.x>i,t=_.x<0;(e||t)&&(e&&b++,t&&x++,S(),_=Object.assign({},h),P(),j(),p=5)}()}function S(){e.textContent=`${b} : ${x}`}function W(e){console.log("heeree");const n=e.key===a,o=e.key===l,r=e.key===s,i=e.key===u,c=g.y>0,d=g.y<t.height-f,y=v.y>0,p=v.y<t.height-f;n&&c?g.y-=40:o&&d?g.y+=40:r&&y?v.y-=40:i&&p&&(v.y+=40)}function E(){r.fillStyle="black",r.fillRect(0,0,i,c),O(g.x,g.y,"yellow"),O(v.x,v.y,"blue"),k(),j()}function L(){b=0,x=0,clearInterval(o),p=5,_=Object.assign({},h),g=Object.assign({},g),v=Object.assign({},v),D()}function D(){S(),P(),window.addEventListener("keydown",W),o=setInterval(E,20),n.addEventListener("click",L)}window.addEventListener("load",D)}},468:function(e,t,n){var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(){document.body.append(r.mainWrapper);for(const e in c)location.pathname===e&&(r.mainWrapper.removeAttribute("id"),r.mainWrapper.className="",document.body.className="",r.mainWrapper.innerHTML=c[e](),"/game"===location.pathname&&(r.mainWrapper.id="game-container",r.mainWrapper.classList.add("h-screen","flex","flex-col","gap-2.5","justify-center","items-center"),window.addEventListener("DOMContentLoaded",(()=>{(0,i.default)()}))))};const r=n(624),i=o(n(258)),c={"/":function(){return'<div class="flex flex-col items-center justify-center min-h-screen bg-gradient-to-t from-black via-black to-gray-800 space-y-8">\n                <button class="px-6 py-3 text-white bg-blue-500 rounded-lg text-xl hover:bg-blue-700 focus:outline-none">\n                    START\n                </button>\n            </div>'},"/game":function(){return document.body.style.margin="0",document.body.style.padding="0",'\n        <canvas id="game-board" width="800" height="500"></canvas>\n        <p id="score-info" class="text-4xl" > Score </p>\n        <button id="restart-btn" class="px-3 py-1 border-2 border-crimson rounded-[10px] bg-gray-500 text-white text-[25px]"> Restart </button>'}}}},t={};!function n(o){var r=t[o];if(void 0!==r)return r.exports;var i=t[o]={exports:{}};return e[o].call(i.exports,i,i.exports,n),i.exports}(156)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,