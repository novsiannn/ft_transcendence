/*! For license information please see script.js.LICENSE.txt */
(()=>{"use strict";var n={137:function(n,e,t){var r=this&&this.__createBinding||(Object.create?function(n,e,t,r){void 0===r&&(r=t);var o=Object.getOwnPropertyDescriptor(e,t);o&&!("get"in o?!e.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(n,r,o)}:function(n,e,t,r){void 0===r&&(r=t),n[r]=e[t]}),o=this&&this.__exportStar||function(n,e){for(var t in n)"default"===t||Object.prototype.hasOwnProperty.call(e,t)||r(e,n,t)};Object.defineProperty(e,"__esModule",{value:!0}),o(t(2750),e),o(t(4020),e)},145:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.getColorFromUsername=void 0,e.getColorFromUsername=n=>{const e=["bg-red-500","bg-blue-500","bg-green-500","bg-yellow-500","bg-purple-500","bg-pink-500","bg-indigo-500","bg-teal-500","bg-orange-500","bg-cyan-500","bg-lime-500","bg-rose-500","bg-emerald-500","bg-violet-500","bg-sky-500"];return n?e[n.trim().toLowerCase().charCodeAt(0)%e.length]:e[0]}},540:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},644:(n,e,t)=>{t.r(e),t.d(e,{default:()=>f});var r=t(5072),o=t.n(r),a=t(7825),i=t.n(a),s=t(7659),l=t.n(s),c=t(5056),d=t.n(c),A=t(540),u=t.n(A),g=t(1113),p=t.n(g),h=t(1017),C={};C.styleTagTransform=p(),C.setAttributes=d(),C.insert=l().bind(null,"head"),C.domAPI=i(),C.insertStyleElement=u(),o()(h.A,C);const f=h.A&&h.A.locals?h.A.locals:void 0},693:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.navigation=function(){return`\n\t\t<nav class="top-0 left-0 bg-black text-white h-16 w-full fixed flex items-center justify-between px-6 select-none">\n    \t\t<img src="https://img.icons8.com/plasticine/100/ping-pong--v1.png" draggable="false" alt="Logo" class="h-12 w-12 object-cover" id=imgLogoNavi>\n\n\t\t\t${o.store.getAuth()?'<div class="flex-1 flex justify-center space-x-8">\n       \t\t\t<button class=" h-5 focus:outline-none transition delay-100 hover:text-green-500" id="naviBtn"> Home </button>\n        \t\t<button class=" h-5 focus:outline-none transition delay-100 hover:text-green-500" id="naviBtn"> Game </button>\n    \t\t</div>':""}\n\n\t\t\t<div class="relative">\n\t\t\t\t${o.store.getAuth()?a():i()}\n        \t\t\n\n\t\t\t\t${o.store.getAuth()?'<div id="dropdownMenu" class="absolute right-0 mt-2 w-48 bg-white text-black shadow-lg rounded-lg p-2 hidden">\n            \t\t<a class="block px-4 py-2 hover:bg-gray-200 focus:outline-none">Profile</a>\n\t\t\t\t\t<a class="block px-4 py-2 hover:bg-gray-200 focus:outline-none">Game</a>\n\t\t\t\t\t<a class="block px-4 py-2 hover:bg-gray-200 focus:outline-none">Leaderboard</a>\n            \t\t<a class="block px-4 py-2 hover:bg-gray-200 focus:outline-none">Settings</a>\n\t\t\t\t\t<a class="block px-4 py-2 hover:bg-gray-200 focus:outline-none">Friends</a>\n            \t\t<p class="flex px-4 py-2 text-red-600 hover:bg-gray-200 gap-2" id="logoutBtn">Logout</p>':""}\n        \t\t</div>\n    \t\t</div>\n\t\t</nav>\n\t\t`};const r=t(145),o=t(807),a=()=>{const n=o.store.getUser().avatar,e=(0,r.getColorFromUsername)(o.store.getUser().username),t=o.store.getUser().username.charAt(0).toUpperCase();return n?`<img id="profileIcon" draggable="false" src="${o.API_URL+n}" alt="Profile" class="w-12 h-12 rounded-full cursor-pointer object-cover">`:`<div id="profileIcon" alt="Profile" class="flex text-white font-bold text-s justify-center items-center content-center w-12 h-12 ${e} rounded-full cursor-pointer">${t}</div>`},i=()=>"/signUp"!==location.pathname?'<div id="registBtn" alt="Profile" class="w-full select-none text-black font-thin rounded-md p-2 h-8 cursor-pointer bg-gray-100 flex items-center">\n\t\t\t<h1>Sign Up</h1>\n\t</div>':'<div id="signInBtn" alt="Profile" class="w-full select-none text-black font-thin rounded-md p-2 h-8 cursor-pointer bg-gray-100 flex items-center">\n\t\t\t<h1>Sign In</h1>\n\t</div>'},807:function(n,e,t){var r=this&&this.__awaiter||function(n,e,t,r){return new(t||(t=Promise))((function(o,a){function i(n){try{l(r.next(n))}catch(n){a(n)}}function s(n){try{l(r.throw(n))}catch(n){a(n)}}function l(n){var e;n.done?o(n.value):(e=n.value,e instanceof t?e:new t((function(n){n(e)}))).then(i,s)}l((r=r.apply(n,e||[])).next())}))},o=this&&this.__importDefault||function(n){return n&&n.__esModule?n:{default:n}};Object.defineProperty(e,"__esModule",{value:!0}),e.store=e.API_URL=void 0;const a=o(t(6425)),i=o(t(2479)),s=o(t(1253)),l=t(5941),c=t(1237),d=t(7002),A=o(t(5076));e.API_URL="http://localhost:3000",e.store=new class{constructor(){this.state={auth:{user:{},isAuth:!1,isLoading:!1,allUsers:[]}},this.setAuth=n=>{this.state.auth.isAuth=n},this.setUser=n=>{this.state.auth.user=n},this.getUser=()=>this.state.auth.user,this.setLoading=n=>{this.state.auth.isLoading=n},this.getAuth=()=>this.state.auth.isAuth,this.getState=()=>this.state,this.setAllUsers=n=>{this.state.auth.allUsers=n},this.getAllUsers=()=>this.state.auth.allUsers,this.login=(n,e)=>r(this,void 0,void 0,(function*(){var t;try{const t=yield i.default.login(n,e);return 200===t.status?(localStorage.setItem("token",t.data.accessToken),this.setAuth(!0),this.setUser(t.data.user),yield this.checkAuth(),(0,l.navigateTo)("/"),(0,c.handleModalSuccess)("You have successfully logged in!")):401===t.status&&t.data.requiresTwoFactor&&(0,d.handleModalInput)("2fa/login","Code for 2FA",t.data.userId),t}catch(n){throw new Error(null===(t=n.response)||void 0===t?void 0:t.data)}})),this.registration=(n,e,t)=>r(this,void 0,void 0,(function*(){var r;try{201===(yield i.default.registration(n,e,t)).status&&((0,l.navigateTo)("/activate"),(0,c.handleModalSuccess)("You have successfully created an account"))}catch(n){throw new Error(null===(r=n.response)||void 0===r?void 0:r.data)}})),this.logout=()=>r(this,void 0,void 0,(function*(){var n;try{const n=yield i.default.logout();return localStorage.removeItem("token"),this.setAuth(!1),this.setUser({}),console.log(n),n}catch(e){console.log(null===(n=e.response)||void 0===n?void 0:n.data)}})),this.enableTwoFactor=()=>r(this,void 0,void 0,(function*(){var n;try{const n=yield i.default.enableTwoFactor();return console.log(n),n.data}catch(e){console.log(null===(n=e.response)||void 0===n?void 0:n.data)}})),this.verifyTwoFactor=n=>r(this,void 0,void 0,(function*(){var e;try{const e=yield i.default.verifyTwoFactor(n);return yield this.checkAuth(),e}catch(n){return console.log(null===(e=n.response)||void 0===e?void 0:e.data),n.response}})),this.disableTwoFactor=n=>r(this,void 0,void 0,(function*(){var e;try{const e=yield i.default.disableTwoFactor(n);return yield this.checkAuth(),e}catch(n){console.log(null===(e=n.response)||void 0===e?void 0:e.data)}})),this.loginWithTwoFactor=(n,e)=>r(this,void 0,void 0,(function*(){try{const t=yield i.default.loginWithTwoFactor(n,e);return 200===t.status&&(localStorage.setItem("token",t.data.accessToken),this.setAuth(!0),this.setUser(t.data.user),yield this.checkAuth(),(0,l.navigateTo)("/"),(0,c.handleModalSuccess)("You have successfully logged in!")),t}catch(n){return n}})),this.getAllUsersRequest=()=>r(this,void 0,void 0,(function*(){let n=yield s.default.get(`${e.API_URL}/users`);return this.setAllUsers(n.data),n.data})),this.getAllFriends=()=>r(this,void 0,void 0,(function*(){return yield A.default.getFriends()})),this.getUserRequest=()=>r(this,void 0,void 0,(function*(){const n=yield s.default.get(`${e.API_URL}/user/profile`);200===n.status&&this.setUser(n.data.user)})),this.sendFriendRequest=n=>r(this,void 0,void 0,(function*(){const e=yield A.default.sendFriendRequest(n);return 201===e.status&&(0,c.handleModalSuccess)("You have successfully sent a friend request"),e.status})),this.getPendingFriendsRequests=()=>r(this,void 0,void 0,(function*(){return(yield A.default.getPendingFriendsRequests()).data})),this.getIncomingFriendRequest=()=>r(this,void 0,void 0,(function*(){return(yield A.default.getIncomingFriendRequest()).data})),this.cancelPendingFriendRequest=n=>r(this,void 0,void 0,(function*(){const e=yield A.default.cancelPendingFriendRequest(n);return 204===e.status&&(0,c.handleModalSuccess)("You have successfully cancelled a friend request"),e.status})),this.deleteFriend=n=>r(this,void 0,void 0,(function*(){return yield A.default.deleteFriend(n)})),this.acceptFriendship=n=>r(this,void 0,void 0,(function*(){const e=yield A.default.acceptFriendship(n);return console.log(e),e})),this.checkAuth=()=>r(this,void 0,void 0,(function*(){var n;if(this.setLoading(!0),localStorage.getItem("token"))return this.setAuth(!0),yield this.getUserRequest(),yield this.getAllUsersRequest(),void this.setLoading(!1);try{const n=yield a.default.get(`${e.API_URL}/refresh`,{withCredentials:!0});localStorage.setItem("token",n.data.accessToken),console.log("New token set from checkAuth = "+n.data.accessToken),this.setAuth(!0),this.setUser(n.data.user)}catch(e){console.log(null===(n=e.response)||void 0===n?void 0:n.data)}finally{this.setLoading(!1)}}))}}},852:function(n,e,t){var r=this&&this.__awaiter||function(n,e,t,r){return new(t||(t=Promise))((function(o,a){function i(n){try{l(r.next(n))}catch(n){a(n)}}function s(n){try{l(r.throw(n))}catch(n){a(n)}}function l(n){var e;n.done?o(n.value):(e=n.value,e instanceof t?e:new t((function(n){n(e)}))).then(i,s)}l((r=r.apply(n,e||[])).next())}))},o=this&&this.__importDefault||function(n){return n&&n.__esModule?n:{default:n}};Object.defineProperty(e,"__esModule",{value:!0}),e.handleSettings=function(){(0,s.navigationHandle)();const{username:n,email:e,firstName:t,lastName:o,isTwoFactorEnabled:d}=l.store.getState().auth.user,A=[t,o,n,e],u=document.querySelectorAll(".inputUserInfo"),g=document.querySelector("#profileIcon");document.querySelector("#saveChangesSettings"),u.forEach(((n,e)=>{A[e]&&A[e].length>0?n.value=A[e]:n.value="Empty"}));const p=document.querySelector("#profileImg"),h=document.querySelector("#uploadImgInput"),C=document.querySelector("#enableTwoFactorBtn"),f=document.querySelector("#disableTwoFactorBtn"),v=n=>{n?(C.disabled=!0,null==C||C.classList.add("opacity-25"),f.disabled=!1,null==f||f.classList.remove("opacity-25")):(f.disabled=!0,null==f||f.classList.add("opacity-25"),C.disabled=!1,null==C||C.classList.remove("opacity-25"))};v(d),null==C||C.addEventListener("click",(()=>r(this,void 0,void 0,(function*(){yield(0,i.handleModalTwoFactor)(v)})))),null==f||f.addEventListener("click",(()=>r(this,void 0,void 0,(function*(){yield(0,a.handleModalInput)("2fa/disable","Disable 2FA","0",v)})))),(()=>{r(this,void 0,void 0,(function*(){try{const n=(yield c.default.get("/user/profile")).data;n.user.avatar?(p.src=`${l.API_URL}${n.user.avatar}`,p.style.display="block"):p.src="https://cdn.pixabay.com/photo/2020/07/01/12/58/icon-5359553_1280.png"}catch(n){console.error("Failed to load avatar:",n),p&&(p.src="https://cdn.pixabay.com/photo/2020/07/01/12/58/icon-5359553_1280.png")}}))})(),h.addEventListener("change",(n=>r(this,void 0,void 0,(function*(){var e;const t=null===(e=n.target.files)||void 0===e?void 0:e[0];if(t&&t.type.startsWith("image/"))try{const n=new FormData;n.append("avatar",t);const e=yield c.default.post("/user/avatar",n,{headers:{"Content-Type":"multipart/form-data"}});if(200==e.status){const n=e.data;yield l.store.getUserRequest(),p&&n.avatar&&(g.src=`${l.API_URL}${n.avatar}`,p.src=`${l.API_URL}${n.avatar}`,p.style.display="block")}}catch(n){console.error("Error uploading avatar:",n)}}))));const w=document.querySelector("#imgDropdownMenu"),m=document.querySelector("#changePhotoBtn");p&&w&&(p.addEventListener("click",(()=>{w.classList.toggle("hidden")})),document.addEventListener("click",(n=>{const e=n.target;p&&!p.contains(e)&&(null==w||w.classList.add("hidden"))}))),null==m||m.addEventListener("click",(()=>{h.click()}))};const a=t(7002),i=t(1095),s=t(2135),l=t(807),c=o(t(1253))},1017:(n,e,t)=>{t.d(e,{A:()=>s});var r=t(1354),o=t.n(r),a=t(6314),i=t.n(a)()(o());i.push([n.id,'/*! tailwindcss v4.1.4 | MIT License | https://tailwindcss.com */\n@layer properties;\n@layer theme, base, components, utilities;\n@layer theme {\n  :root, :host {\n    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",\n      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";\n    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",\n      "Courier New", monospace;\n    --color-red-300: oklch(80.8% 0.114 19.571);\n    --color-red-500: oklch(63.7% 0.237 25.331);\n    --color-red-600: oklch(57.7% 0.245 27.325);\n    --color-red-700: oklch(50.5% 0.213 27.518);\n    --color-red-800: oklch(44.4% 0.177 26.899);\n    --color-red-900: oklch(39.6% 0.141 25.723);\n    --color-orange-500: oklch(70.5% 0.213 47.604);\n    --color-yellow-400: oklch(85.2% 0.199 91.936);\n    --color-yellow-500: oklch(79.5% 0.184 86.047);\n    --color-lime-500: oklch(76.8% 0.233 130.85);\n    --color-green-100: oklch(96.2% 0.044 156.743);\n    --color-green-500: oklch(72.3% 0.219 149.579);\n    --color-green-600: oklch(62.7% 0.194 149.214);\n    --color-green-700: oklch(52.7% 0.154 150.069);\n    --color-emerald-500: oklch(69.6% 0.17 162.48);\n    --color-teal-500: oklch(70.4% 0.14 182.503);\n    --color-cyan-500: oklch(71.5% 0.143 215.221);\n    --color-sky-500: oklch(68.5% 0.169 237.323);\n    --color-blue-300: oklch(80.9% 0.105 251.813);\n    --color-blue-400: oklch(70.7% 0.165 254.624);\n    --color-blue-500: oklch(62.3% 0.214 259.815);\n    --color-blue-600: oklch(54.6% 0.245 262.881);\n    --color-blue-700: oklch(48.8% 0.243 264.376);\n    --color-blue-800: oklch(42.4% 0.199 265.638);\n    --color-blue-900: oklch(37.9% 0.146 265.522);\n    --color-indigo-500: oklch(58.5% 0.233 277.117);\n    --color-violet-500: oklch(60.6% 0.25 292.717);\n    --color-purple-500: oklch(62.7% 0.265 303.9);\n    --color-purple-900: oklch(38.1% 0.176 304.987);\n    --color-pink-500: oklch(65.6% 0.241 354.308);\n    --color-rose-500: oklch(64.5% 0.246 16.439);\n    --color-gray-100: oklch(96.7% 0.003 264.542);\n    --color-gray-200: oklch(92.8% 0.006 264.531);\n    --color-gray-300: oklch(87.2% 0.01 258.338);\n    --color-gray-400: oklch(70.7% 0.022 261.325);\n    --color-gray-500: oklch(55.1% 0.027 264.364);\n    --color-gray-600: oklch(44.6% 0.03 256.802);\n    --color-gray-700: oklch(37.3% 0.034 259.733);\n    --color-gray-800: oklch(27.8% 0.033 256.848);\n    --color-gray-900: oklch(21% 0.034 264.665);\n    --color-black: #000;\n    --color-white: #fff;\n    --spacing: 0.25rem;\n    --container-xs: 20rem;\n    --container-sm: 24rem;\n    --text-xs: 0.75rem;\n    --text-xs--line-height: calc(1 / 0.75);\n    --text-sm: 0.875rem;\n    --text-sm--line-height: calc(1.25 / 0.875);\n    --text-base: 1rem;\n    --text-base--line-height: calc(1.5 / 1);\n    --text-lg: 1.125rem;\n    --text-lg--line-height: calc(1.75 / 1.125);\n    --text-xl: 1.25rem;\n    --text-xl--line-height: calc(1.75 / 1.25);\n    --text-2xl: 1.5rem;\n    --text-2xl--line-height: calc(2 / 1.5);\n    --text-3xl: 1.875rem;\n    --text-3xl--line-height: calc(2.25 / 1.875);\n    --text-4xl: 2.25rem;\n    --text-4xl--line-height: calc(2.5 / 2.25);\n    --text-5xl: 3rem;\n    --text-5xl--line-height: 1;\n    --text-7xl: 4.5rem;\n    --text-7xl--line-height: 1;\n    --text-9xl: 8rem;\n    --text-9xl--line-height: 1;\n    --font-weight-thin: 100;\n    --font-weight-medium: 500;\n    --font-weight-semibold: 600;\n    --font-weight-bold: 700;\n    --font-weight-black: 900;\n    --radius-md: 0.375rem;\n    --radius-lg: 0.5rem;\n    --radius-xl: 0.75rem;\n    --radius-2xl: 1rem;\n    --radius-3xl: 1.5rem;\n    --animate-spin: spin 1s linear infinite;\n    --default-transition-duration: 150ms;\n    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n    --default-font-family: var(--font-sans);\n    --default-mono-font-family: var(--font-mono);\n  }\n}\n@layer base {\n  *, ::after, ::before, ::backdrop, ::file-selector-button {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n    border: 0 solid;\n  }\n  html, :host {\n    line-height: 1.5;\n    -webkit-text-size-adjust: 100%;\n    -moz-tab-size: 4;\n      -o-tab-size: 4;\n         tab-size: 4;\n    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");\n    font-feature-settings: var(--default-font-feature-settings, normal);\n    font-variation-settings: var(--default-font-variation-settings, normal);\n    -webkit-tap-highlight-color: transparent;\n  }\n  hr {\n    height: 0;\n    color: inherit;\n    border-top-width: 1px;\n  }\n  abbr:where([title]) {\n    -webkit-text-decoration: underline dotted;\n    text-decoration: underline dotted;\n  }\n  h1, h2, h3, h4, h5, h6 {\n    font-size: inherit;\n    font-weight: inherit;\n  }\n  a {\n    color: inherit;\n    -webkit-text-decoration: inherit;\n    text-decoration: inherit;\n  }\n  b, strong {\n    font-weight: bolder;\n  }\n  code, kbd, samp, pre {\n    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);\n    font-feature-settings: var(--default-mono-font-feature-settings, normal);\n    font-variation-settings: var(--default-mono-font-variation-settings, normal);\n    font-size: 1em;\n  }\n  small {\n    font-size: 80%;\n  }\n  sub, sup {\n    font-size: 75%;\n    line-height: 0;\n    position: relative;\n    vertical-align: baseline;\n  }\n  sub {\n    bottom: -0.25em;\n  }\n  sup {\n    top: -0.5em;\n  }\n  table {\n    text-indent: 0;\n    border-color: inherit;\n    border-collapse: collapse;\n  }\n  :-moz-focusring {\n    outline: auto;\n  }\n  progress {\n    vertical-align: baseline;\n  }\n  summary {\n    display: list-item;\n  }\n  ol, ul, menu {\n    list-style: none;\n  }\n  img, svg, video, canvas, audio, iframe, embed, object {\n    display: block;\n    vertical-align: middle;\n  }\n  img, video {\n    max-width: 100%;\n    height: auto;\n  }\n  button, input, select, optgroup, textarea, ::file-selector-button {\n    font: inherit;\n    font-feature-settings: inherit;\n    font-variation-settings: inherit;\n    letter-spacing: inherit;\n    color: inherit;\n    border-radius: 0;\n    background-color: transparent;\n    opacity: 1;\n  }\n  :where(select:is([multiple], [size])) optgroup {\n    font-weight: bolder;\n  }\n  :where(select:is([multiple], [size])) optgroup option {\n    padding-inline-start: 20px;\n  }\n  ::file-selector-button {\n    margin-inline-end: 4px;\n  }\n  ::-moz-placeholder {\n    opacity: 1;\n  }\n  ::placeholder {\n    opacity: 1;\n  }\n  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {\n    ::-moz-placeholder {\n      color: currentcolor;\n      @supports (color: color-mix(in lab, red, red)) {\n        color: color-mix(in oklab, currentcolor 50%, transparent);\n      }\n    }\n    ::placeholder {\n      color: currentcolor;\n      @supports (color: color-mix(in lab, red, red)) {\n        color: color-mix(in oklab, currentcolor 50%, transparent);\n      }\n    }\n  }\n  textarea {\n    resize: vertical;\n  }\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n  ::-webkit-date-and-time-value {\n    min-height: 1lh;\n    text-align: inherit;\n  }\n  ::-webkit-datetime-edit {\n    display: inline-flex;\n  }\n  ::-webkit-datetime-edit-fields-wrapper {\n    padding: 0;\n  }\n  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {\n    padding-block: 0;\n  }\n  :-moz-ui-invalid {\n    box-shadow: none;\n  }\n  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {\n    -webkit-appearance: button;\n       -moz-appearance: button;\n            appearance: button;\n  }\n  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {\n    height: auto;\n  }\n  [hidden]:where(:not([hidden="until-found"])) {\n    display: none !important;\n  }\n}\n@layer utilities {\n  .invisible {\n    visibility: hidden;\n  }\n  .sr-only {\n    position: absolute;\n    width: 1px;\n    height: 1px;\n    padding: 0;\n    margin: -1px;\n    overflow: hidden;\n    clip: rect(0, 0, 0, 0);\n    white-space: nowrap;\n    border-width: 0;\n  }\n  .absolute {\n    position: absolute;\n  }\n  .fixed {\n    position: fixed;\n  }\n  .relative {\n    position: relative;\n  }\n  .static {\n    position: static;\n  }\n  .inset-0 {\n    inset: calc(var(--spacing) * 0);\n  }\n  .top-0 {\n    top: calc(var(--spacing) * 0);\n  }\n  .right-0 {\n    right: calc(var(--spacing) * 0);\n  }\n  .left-0 {\n    left: calc(var(--spacing) * 0);\n  }\n  .z-10 {\n    z-index: 10;\n  }\n  .z-\\[9999\\] {\n    z-index: 9999;\n  }\n  .col-span-2 {\n    grid-column: span 2 / span 2;\n  }\n  .col-span-4 {\n    grid-column: span 4 / span 4;\n  }\n  .col-span-6 {\n    grid-column: span 6 / span 6;\n  }\n  .col-start-2 {\n    grid-column-start: 2;\n  }\n  .col-start-4 {\n    grid-column-start: 4;\n  }\n  .col-start-5 {\n    grid-column-start: 5;\n  }\n  .col-start-6 {\n    grid-column-start: 6;\n  }\n  .row-span-2 {\n    grid-row: span 2 / span 2;\n  }\n  .row-start-1 {\n    grid-row-start: 1;\n  }\n  .row-start-3 {\n    grid-row-start: 3;\n  }\n  .container {\n    width: 100%;\n    @media (width >= 40rem) {\n      max-width: 40rem;\n    }\n    @media (width >= 48rem) {\n      max-width: 48rem;\n    }\n    @media (width >= 64rem) {\n      max-width: 64rem;\n    }\n    @media (width >= 80rem) {\n      max-width: 80rem;\n    }\n    @media (width >= 96rem) {\n      max-width: 96rem;\n    }\n  }\n  .m-1 {\n    margin: calc(var(--spacing) * 1);\n  }\n  .m-2 {\n    margin: calc(var(--spacing) * 2);\n  }\n  .m-12 {\n    margin: calc(var(--spacing) * 12);\n  }\n  .mx-auto {\n    margin-inline: auto;\n  }\n  .my-5 {\n    margin-block: calc(var(--spacing) * 5);\n  }\n  .me-2 {\n    margin-inline-end: calc(var(--spacing) * 2);\n  }\n  .mt-2 {\n    margin-top: calc(var(--spacing) * 2);\n  }\n  .mt-3 {\n    margin-top: calc(var(--spacing) * 3);\n  }\n  .mt-4 {\n    margin-top: calc(var(--spacing) * 4);\n  }\n  .mt-10 {\n    margin-top: calc(var(--spacing) * 10);\n  }\n  .mt-12 {\n    margin-top: calc(var(--spacing) * 12);\n  }\n  .mt-24 {\n    margin-top: calc(var(--spacing) * 24);\n  }\n  .mt-28 {\n    margin-top: calc(var(--spacing) * 28);\n  }\n  .mt-64 {\n    margin-top: calc(var(--spacing) * 64);\n  }\n  .mb-2 {\n    margin-bottom: calc(var(--spacing) * 2);\n  }\n  .mb-3 {\n    margin-bottom: calc(var(--spacing) * 3);\n  }\n  .mb-4 {\n    margin-bottom: calc(var(--spacing) * 4);\n  }\n  .ml-2 {\n    margin-left: calc(var(--spacing) * 2);\n  }\n  .block {\n    display: block;\n  }\n  .flex {\n    display: flex;\n  }\n  .grid {\n    display: grid;\n  }\n  .hidden {\n    display: none;\n  }\n  .inline {\n    display: inline;\n  }\n  .h-1\\/2 {\n    height: calc(1/2 * 100%);\n  }\n  .h-1\\/5 {\n    height: calc(1/5 * 100%);\n  }\n  .h-2\\/3 {\n    height: calc(2/3 * 100%);\n  }\n  .h-3\\/5 {\n    height: calc(3/5 * 100%);\n  }\n  .h-4 {\n    height: calc(var(--spacing) * 4);\n  }\n  .h-4\\/5 {\n    height: calc(4/5 * 100%);\n  }\n  .h-5 {\n    height: calc(var(--spacing) * 5);\n  }\n  .h-8 {\n    height: calc(var(--spacing) * 8);\n  }\n  .h-8\\/10 {\n    height: calc(8/10 * 100%);\n  }\n  .h-10 {\n    height: calc(var(--spacing) * 10);\n  }\n  .h-12 {\n    height: calc(var(--spacing) * 12);\n  }\n  .h-16 {\n    height: calc(var(--spacing) * 16);\n  }\n  .h-24 {\n    height: calc(var(--spacing) * 24);\n  }\n  .h-36 {\n    height: calc(var(--spacing) * 36);\n  }\n  .h-48 {\n    height: calc(var(--spacing) * 48);\n  }\n  .h-52 {\n    height: calc(var(--spacing) * 52);\n  }\n  .h-128 {\n    height: calc(var(--spacing) * 128);\n  }\n  .h-full {\n    height: 100%;\n  }\n  .h-screen {\n    height: 100vh;\n  }\n  .min-h-1\\/3 {\n    min-height: calc(1/3 * 100%);\n  }\n  .min-h-screen {\n    min-height: 100vh;\n  }\n  .w-1\\/2 {\n    width: calc(1/2 * 100%);\n  }\n  .w-1\\/3 {\n    width: calc(1/3 * 100%);\n  }\n  .w-1\\/4 {\n    width: calc(1/4 * 100%);\n  }\n  .w-2\\/3 {\n    width: calc(2/3 * 100%);\n  }\n  .w-2\\/5 {\n    width: calc(2/5 * 100%);\n  }\n  .w-3\\/4 {\n    width: calc(3/4 * 100%);\n  }\n  .w-3\\/5 {\n    width: calc(3/5 * 100%);\n  }\n  .w-4 {\n    width: calc(var(--spacing) * 4);\n  }\n  .w-4\\/5 {\n    width: calc(4/5 * 100%);\n  }\n  .w-5\\/5 {\n    width: calc(5/5 * 100%);\n  }\n  .w-8 {\n    width: calc(var(--spacing) * 8);\n  }\n  .w-10 {\n    width: calc(var(--spacing) * 10);\n  }\n  .w-12 {\n    width: calc(var(--spacing) * 12);\n  }\n  .w-18 {\n    width: calc(var(--spacing) * 18);\n  }\n  .w-36 {\n    width: calc(var(--spacing) * 36);\n  }\n  .w-48 {\n    width: calc(var(--spacing) * 48);\n  }\n  .w-60 {\n    width: calc(var(--spacing) * 60);\n  }\n  .w-80 {\n    width: calc(var(--spacing) * 80);\n  }\n  .w-128 {\n    width: calc(var(--spacing) * 128);\n  }\n  .w-full {\n    width: 100%;\n  }\n  .max-w-sm {\n    max-width: var(--container-sm);\n  }\n  .max-w-xs {\n    max-width: var(--container-xs);\n  }\n  .min-w-0 {\n    min-width: calc(var(--spacing) * 0);\n  }\n  .flex-1 {\n    flex: 1;\n  }\n  .flex-shrink-0 {\n    flex-shrink: 0;\n  }\n  .-translate-y-full {\n    --tw-translate-y: -100%;\n    translate: var(--tw-translate-x) var(--tw-translate-y);\n  }\n  .translate-y-0 {\n    --tw-translate-y: calc(var(--spacing) * 0);\n    translate: var(--tw-translate-x) var(--tw-translate-y);\n  }\n  .transform {\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);\n  }\n  .animate-spin {\n    animation: var(--animate-spin);\n  }\n  .cursor-default {\n    cursor: default;\n  }\n  .cursor-pointer {\n    cursor: pointer;\n  }\n  .grid-cols-5 {\n    grid-template-columns: repeat(5, minmax(0, 1fr));\n  }\n  .grid-cols-8 {\n    grid-template-columns: repeat(8, minmax(0, 1fr));\n  }\n  .grid-cols-10 {\n    grid-template-columns: repeat(10, minmax(0, 1fr));\n  }\n  .grid-rows-4 {\n    grid-template-rows: repeat(4, minmax(0, 1fr));\n  }\n  .grid-rows-5 {\n    grid-template-rows: repeat(5, minmax(0, 1fr));\n  }\n  .flex-col {\n    flex-direction: column;\n  }\n  .place-items-center {\n    place-items: center;\n  }\n  .content-center {\n    align-content: center;\n  }\n  .items-center {\n    align-items: center;\n  }\n  .justify-between {\n    justify-content: space-between;\n  }\n  .justify-center {\n    justify-content: center;\n  }\n  .gap-2 {\n    gap: calc(var(--spacing) * 2);\n  }\n  .gap-2\\.5 {\n    gap: calc(var(--spacing) * 2.5);\n  }\n  .gap-4 {\n    gap: calc(var(--spacing) * 4);\n  }\n  .gap-6 {\n    gap: calc(var(--spacing) * 6);\n  }\n  .space-y-4 {\n    :where(& > :not(:last-child)) {\n      --tw-space-y-reverse: 0;\n      margin-block-start: calc(calc(var(--spacing) * 4) * var(--tw-space-y-reverse));\n      margin-block-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-y-reverse)));\n    }\n  }\n  .space-y-8 {\n    :where(& > :not(:last-child)) {\n      --tw-space-y-reverse: 0;\n      margin-block-start: calc(calc(var(--spacing) * 8) * var(--tw-space-y-reverse));\n      margin-block-end: calc(calc(var(--spacing) * 8) * calc(1 - var(--tw-space-y-reverse)));\n    }\n  }\n  .space-x-4 {\n    :where(& > :not(:last-child)) {\n      --tw-space-x-reverse: 0;\n      margin-inline-start: calc(calc(var(--spacing) * 4) * var(--tw-space-x-reverse));\n      margin-inline-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-x-reverse)));\n    }\n  }\n  .space-x-8 {\n    :where(& > :not(:last-child)) {\n      --tw-space-x-reverse: 0;\n      margin-inline-start: calc(calc(var(--spacing) * 8) * var(--tw-space-x-reverse));\n      margin-inline-end: calc(calc(var(--spacing) * 8) * calc(1 - var(--tw-space-x-reverse)));\n    }\n  }\n  .truncate {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n  }\n  .overflow-hidden {\n    overflow: hidden;\n  }\n  .rounded {\n    border-radius: 0.25rem;\n  }\n  .rounded-2xl {\n    border-radius: var(--radius-2xl);\n  }\n  .rounded-3xl {\n    border-radius: var(--radius-3xl);\n  }\n  .rounded-\\[10px\\] {\n    border-radius: 10px;\n  }\n  .rounded-full {\n    border-radius: calc(infinity * 1px);\n  }\n  .rounded-lg {\n    border-radius: var(--radius-lg);\n  }\n  .rounded-md {\n    border-radius: var(--radius-md);\n  }\n  .rounded-xl {\n    border-radius: var(--radius-xl);\n  }\n  .rounded-l-lg {\n    border-top-left-radius: var(--radius-lg);\n    border-bottom-left-radius: var(--radius-lg);\n  }\n  .rounded-r-lg {\n    border-top-right-radius: var(--radius-lg);\n    border-bottom-right-radius: var(--radius-lg);\n  }\n  .border {\n    border-style: var(--tw-border-style);\n    border-width: 1px;\n  }\n  .border-2 {\n    border-style: var(--tw-border-style);\n    border-width: 2px;\n  }\n  .border-4 {\n    border-style: var(--tw-border-style);\n    border-width: 4px;\n  }\n  .border-blue-700 {\n    border-color: var(--color-blue-700);\n  }\n  .border-red-500 {\n    border-color: var(--color-red-500);\n  }\n  .border-white {\n    border-color: var(--color-white);\n  }\n  .bg-black {\n    background-color: var(--color-black);\n  }\n  .bg-blue-300 {\n    background-color: var(--color-blue-300);\n  }\n  .bg-blue-500 {\n    background-color: var(--color-blue-500);\n  }\n  .bg-blue-700 {\n    background-color: var(--color-blue-700);\n  }\n  .bg-cyan-500 {\n    background-color: var(--color-cyan-500);\n  }\n  .bg-emerald-500 {\n    background-color: var(--color-emerald-500);\n  }\n  .bg-gray-100 {\n    background-color: var(--color-gray-100);\n  }\n  .bg-gray-500 {\n    background-color: var(--color-gray-500);\n  }\n  .bg-gray-800 {\n    background-color: var(--color-gray-800);\n  }\n  .bg-green-100 {\n    background-color: var(--color-green-100);\n  }\n  .bg-green-500 {\n    background-color: var(--color-green-500);\n  }\n  .bg-green-700 {\n    background-color: var(--color-green-700);\n  }\n  .bg-indigo-500 {\n    background-color: var(--color-indigo-500);\n  }\n  .bg-lime-500 {\n    background-color: var(--color-lime-500);\n  }\n  .bg-orange-500 {\n    background-color: var(--color-orange-500);\n  }\n  .bg-pink-500 {\n    background-color: var(--color-pink-500);\n  }\n  .bg-purple-500 {\n    background-color: var(--color-purple-500);\n  }\n  .bg-red-500 {\n    background-color: var(--color-red-500);\n  }\n  .bg-red-700 {\n    background-color: var(--color-red-700);\n  }\n  .bg-rose-500 {\n    background-color: var(--color-rose-500);\n  }\n  .bg-sky-500 {\n    background-color: var(--color-sky-500);\n  }\n  .bg-teal-500 {\n    background-color: var(--color-teal-500);\n  }\n  .bg-violet-500 {\n    background-color: var(--color-violet-500);\n  }\n  .bg-white {\n    background-color: var(--color-white);\n  }\n  .bg-yellow-500 {\n    background-color: var(--color-yellow-500);\n  }\n  .bg-gradient-to-r {\n    --tw-gradient-position: to right in oklab;\n    background-image: linear-gradient(var(--tw-gradient-stops));\n  }\n  .bg-gradient-to-t {\n    --tw-gradient-position: to top in oklab;\n    background-image: linear-gradient(var(--tw-gradient-stops));\n  }\n  .from-black {\n    --tw-gradient-from: var(--color-black);\n    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));\n  }\n  .from-blue-500 {\n    --tw-gradient-from: var(--color-blue-500);\n    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));\n  }\n  .from-purple-900 {\n    --tw-gradient-from: var(--color-purple-900);\n    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));\n  }\n  .via-black {\n    --tw-gradient-via: var(--color-black);\n    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);\n    --tw-gradient-stops: var(--tw-gradient-via-stops);\n  }\n  .via-purple-500 {\n    --tw-gradient-via: var(--color-purple-500);\n    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);\n    --tw-gradient-stops: var(--tw-gradient-via-stops);\n  }\n  .to-blue-900 {\n    --tw-gradient-to: var(--color-blue-900);\n    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));\n  }\n  .to-gray-800 {\n    --tw-gradient-to: var(--color-gray-800);\n    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));\n  }\n  .to-pink-500 {\n    --tw-gradient-to: var(--color-pink-500);\n    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));\n  }\n  .bg-clip-text {\n    -webkit-background-clip: text;\n            background-clip: text;\n  }\n  .fill-gray-600 {\n    fill: var(--color-gray-600);\n  }\n  .object-cover {\n    -o-object-fit: cover;\n       object-fit: cover;\n  }\n  .p-1 {\n    padding: calc(var(--spacing) * 1);\n  }\n  .p-2 {\n    padding: calc(var(--spacing) * 2);\n  }\n  .p-3 {\n    padding: calc(var(--spacing) * 3);\n  }\n  .p-4 {\n    padding: calc(var(--spacing) * 4);\n  }\n  .p-6 {\n    padding: calc(var(--spacing) * 6);\n  }\n  .p-7 {\n    padding: calc(var(--spacing) * 7);\n  }\n  .p-8 {\n    padding: calc(var(--spacing) * 8);\n  }\n  .p-10 {\n    padding: calc(var(--spacing) * 10);\n  }\n  .px-2 {\n    padding-inline: calc(var(--spacing) * 2);\n  }\n  .px-3 {\n    padding-inline: calc(var(--spacing) * 3);\n  }\n  .px-4 {\n    padding-inline: calc(var(--spacing) * 4);\n  }\n  .px-5 {\n    padding-inline: calc(var(--spacing) * 5);\n  }\n  .px-6 {\n    padding-inline: calc(var(--spacing) * 6);\n  }\n  .py-1 {\n    padding-block: calc(var(--spacing) * 1);\n  }\n  .py-2 {\n    padding-block: calc(var(--spacing) * 2);\n  }\n  .py-2\\.5 {\n    padding-block: calc(var(--spacing) * 2.5);\n  }\n  .py-3 {\n    padding-block: calc(var(--spacing) * 3);\n  }\n  .py-8 {\n    padding-block: calc(var(--spacing) * 8);\n  }\n  .text-center {\n    text-align: center;\n  }\n  .text-left {\n    text-align: left;\n  }\n  .font-mono {\n    font-family: var(--font-mono);\n  }\n  .text-2xl {\n    font-size: var(--text-2xl);\n    line-height: var(--tw-leading, var(--text-2xl--line-height));\n  }\n  .text-3xl {\n    font-size: var(--text-3xl);\n    line-height: var(--tw-leading, var(--text-3xl--line-height));\n  }\n  .text-4xl {\n    font-size: var(--text-4xl);\n    line-height: var(--tw-leading, var(--text-4xl--line-height));\n  }\n  .text-5xl {\n    font-size: var(--text-5xl);\n    line-height: var(--tw-leading, var(--text-5xl--line-height));\n  }\n  .text-7xl {\n    font-size: var(--text-7xl);\n    line-height: var(--tw-leading, var(--text-7xl--line-height));\n  }\n  .text-9xl {\n    font-size: var(--text-9xl);\n    line-height: var(--tw-leading, var(--text-9xl--line-height));\n  }\n  .text-base {\n    font-size: var(--text-base);\n    line-height: var(--tw-leading, var(--text-base--line-height));\n  }\n  .text-lg {\n    font-size: var(--text-lg);\n    line-height: var(--tw-leading, var(--text-lg--line-height));\n  }\n  .text-sm {\n    font-size: var(--text-sm);\n    line-height: var(--tw-leading, var(--text-sm--line-height));\n  }\n  .text-xl {\n    font-size: var(--text-xl);\n    line-height: var(--tw-leading, var(--text-xl--line-height));\n  }\n  .text-xs {\n    font-size: var(--text-xs);\n    line-height: var(--tw-leading, var(--text-xs--line-height));\n  }\n  .text-\\[25px\\] {\n    font-size: 25px;\n  }\n  .font-black {\n    --tw-font-weight: var(--font-weight-black);\n    font-weight: var(--font-weight-black);\n  }\n  .font-bold {\n    --tw-font-weight: var(--font-weight-bold);\n    font-weight: var(--font-weight-bold);\n  }\n  .font-medium {\n    --tw-font-weight: var(--font-weight-medium);\n    font-weight: var(--font-weight-medium);\n  }\n  .font-semibold {\n    --tw-font-weight: var(--font-weight-semibold);\n    font-weight: var(--font-weight-semibold);\n  }\n  .font-thin {\n    --tw-font-weight: var(--font-weight-thin);\n    font-weight: var(--font-weight-thin);\n  }\n  .text-black {\n    color: var(--color-black);\n  }\n  .text-blue-500 {\n    color: var(--color-blue-500);\n  }\n  .text-gray-200 {\n    color: var(--color-gray-200);\n  }\n  .text-gray-400 {\n    color: var(--color-gray-400);\n  }\n  .text-gray-500 {\n    color: var(--color-gray-500);\n  }\n  .text-gray-600 {\n    color: var(--color-gray-600);\n  }\n  .text-gray-700 {\n    color: var(--color-gray-700);\n  }\n  .text-gray-800 {\n    color: var(--color-gray-800);\n  }\n  .text-gray-900 {\n    color: var(--color-gray-900);\n  }\n  .text-green-500 {\n    color: var(--color-green-500);\n  }\n  .text-red-500 {\n    color: var(--color-red-500);\n  }\n  .text-red-600 {\n    color: var(--color-red-600);\n  }\n  .text-transparent {\n    color: transparent;\n  }\n  .text-white {\n    color: var(--color-white);\n  }\n  .text-yellow-400 {\n    color: var(--color-yellow-400);\n  }\n  .opacity-0 {\n    opacity: 0%;\n  }\n  .opacity-25 {\n    opacity: 25%;\n  }\n  .opacity-100 {\n    opacity: 100%;\n  }\n  .shadow-lg {\n    --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));\n    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);\n  }\n  .shadow-md {\n    --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));\n    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);\n  }\n  .outline-transparent {\n    outline-color: transparent;\n  }\n  .backdrop-brightness-25 {\n    --tw-backdrop-brightness: brightness(25%);\n    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);\n    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);\n  }\n  .transition {\n    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter;\n    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));\n    transition-duration: var(--tw-duration, var(--default-transition-duration));\n  }\n  .transition-all {\n    transition-property: all;\n    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));\n    transition-duration: var(--tw-duration, var(--default-transition-duration));\n  }\n  .transition-colors {\n    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;\n    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));\n    transition-duration: var(--tw-duration, var(--default-transition-duration));\n  }\n  .transition-transform {\n    transition-property: transform, translate, scale, rotate;\n    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));\n    transition-duration: var(--tw-duration, var(--default-transition-duration));\n  }\n  .delay-100 {\n    transition-delay: 100ms;\n  }\n  .duration-200 {\n    --tw-duration: 200ms;\n    transition-duration: 200ms;\n  }\n  .duration-300 {\n    --tw-duration: 300ms;\n    transition-duration: 300ms;\n  }\n  .duration-500 {\n    --tw-duration: 500ms;\n    transition-duration: 500ms;\n  }\n  .select-none {\n    -webkit-user-select: none;\n    -moz-user-select: none;\n         user-select: none;\n  }\n  .hover\\:scale-105 {\n    &:hover {\n      @media (hover: hover) {\n        --tw-scale-x: 105%;\n        --tw-scale-y: 105%;\n        --tw-scale-z: 105%;\n        scale: var(--tw-scale-x) var(--tw-scale-y);\n      }\n    }\n  }\n  .hover\\:bg-blue-600 {\n    &:hover {\n      @media (hover: hover) {\n        background-color: var(--color-blue-600);\n      }\n    }\n  }\n  .hover\\:bg-blue-700 {\n    &:hover {\n      @media (hover: hover) {\n        background-color: var(--color-blue-700);\n      }\n    }\n  }\n  .hover\\:bg-blue-800 {\n    &:hover {\n      @media (hover: hover) {\n        background-color: var(--color-blue-800);\n      }\n    }\n  }\n  .hover\\:bg-gray-100 {\n    &:hover {\n      @media (hover: hover) {\n        background-color: var(--color-gray-100);\n      }\n    }\n  }\n  .hover\\:bg-gray-200 {\n    &:hover {\n      @media (hover: hover) {\n        background-color: var(--color-gray-200);\n      }\n    }\n  }\n  .hover\\:bg-gray-700 {\n    &:hover {\n      @media (hover: hover) {\n        background-color: var(--color-gray-700);\n      }\n    }\n  }\n  .hover\\:bg-green-600 {\n    &:hover {\n      @media (hover: hover) {\n        background-color: var(--color-green-600);\n      }\n    }\n  }\n  .hover\\:bg-red-800 {\n    &:hover {\n      @media (hover: hover) {\n        background-color: var(--color-red-800);\n      }\n    }\n  }\n  .hover\\:text-green-500 {\n    &:hover {\n      @media (hover: hover) {\n        color: var(--color-green-500);\n      }\n    }\n  }\n  .hover\\:underline {\n    &:hover {\n      @media (hover: hover) {\n        text-decoration-line: underline;\n      }\n    }\n  }\n  .focus\\:ring-2 {\n    &:focus {\n      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);\n      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);\n    }\n  }\n  .focus\\:ring-4 {\n    &:focus {\n      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(4px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);\n      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);\n    }\n  }\n  .focus\\:ring-blue-300 {\n    &:focus {\n      --tw-ring-color: var(--color-blue-300);\n    }\n  }\n  .focus\\:ring-blue-400 {\n    &:focus {\n      --tw-ring-color: var(--color-blue-400);\n    }\n  }\n  .focus\\:ring-red-300 {\n    &:focus {\n      --tw-ring-color: var(--color-red-300);\n    }\n  }\n  .focus\\:outline-none {\n    &:focus {\n      --tw-outline-style: none;\n      outline-style: none;\n    }\n  }\n  .md\\:w-1\\/2 {\n    @media (width >= 48rem) {\n      width: calc(1/2 * 100%);\n    }\n  }\n  .md\\:w-3\\/4 {\n    @media (width >= 48rem) {\n      width: calc(3/4 * 100%);\n    }\n  }\n  .md\\:flex-row {\n    @media (width >= 48rem) {\n      flex-direction: row;\n    }\n  }\n  .lg\\:w-2\\/3 {\n    @media (width >= 64rem) {\n      width: calc(2/3 * 100%);\n    }\n  }\n  .dark\\:bg-blue-600 {\n    @media (prefers-color-scheme: dark) {\n      background-color: var(--color-blue-600);\n    }\n  }\n  .dark\\:bg-red-600 {\n    @media (prefers-color-scheme: dark) {\n      background-color: var(--color-red-600);\n    }\n  }\n  .dark\\:fill-gray-300 {\n    @media (prefers-color-scheme: dark) {\n      fill: var(--color-gray-300);\n    }\n  }\n  .dark\\:text-gray-600 {\n    @media (prefers-color-scheme: dark) {\n      color: var(--color-gray-600);\n    }\n  }\n  .dark\\:hover\\:bg-blue-700 {\n    @media (prefers-color-scheme: dark) {\n      &:hover {\n        @media (hover: hover) {\n          background-color: var(--color-blue-700);\n        }\n      }\n    }\n  }\n  .dark\\:hover\\:bg-red-700 {\n    @media (prefers-color-scheme: dark) {\n      &:hover {\n        @media (hover: hover) {\n          background-color: var(--color-red-700);\n        }\n      }\n    }\n  }\n  .dark\\:focus\\:ring-blue-800 {\n    @media (prefers-color-scheme: dark) {\n      &:focus {\n        --tw-ring-color: var(--color-blue-800);\n      }\n    }\n  }\n  .dark\\:focus\\:ring-red-900 {\n    @media (prefers-color-scheme: dark) {\n      &:focus {\n        --tw-ring-color: var(--color-red-900);\n      }\n    }\n  }\n}\n@property --tw-translate-x {\n  syntax: "*";\n  inherits: false;\n  initial-value: 0;\n}\n@property --tw-translate-y {\n  syntax: "*";\n  inherits: false;\n  initial-value: 0;\n}\n@property --tw-translate-z {\n  syntax: "*";\n  inherits: false;\n  initial-value: 0;\n}\n@property --tw-rotate-x {\n  syntax: "*";\n  inherits: false;\n}\n@property --tw-rotate-y {\n  syntax: "*";\n  inherits: false;\n}\n@property --tw-rotate-z {\n  syntax: "*";\n  inherits: false;\n}\n@property --tw-skew-x {\n  syntax: "*";\n  inherits: false;\n}\n@property --tw-skew-y {\n  syntax: "*";\n  inherits: false;\n}\n@property --tw-space-y-reverse {\n  syntax: "*";\n  inherits: false;\n  initial-value: 0;\n}\n@property --tw-space-x-reverse {\n  syntax: "*";\n  inherits: false;\n  initial-value: 0;\n}\n@property --tw-border-style {\n  syntax: "*";\n  inherits: false;\n  initial-value: solid;\n}\n@property --tw-gradient-position {\n  syntax: "*";\n  inherits: false;\n}\n@property --tw-gradient-from {\n  syntax: "<color>";\n  inherits: false;\n  initial-value: #0000;\n}\n@property --tw-gradient-via {\n  syntax: "<color>";\n  inherits: false;\n  initial-value: #0000;\n}\n@property --tw-gradient-to {\n  syntax: "<color>";\n  inherits: false;\n  initial-value: #0000;\n}\n@property --tw-gradient-stops {\n  syntax: "*";\n  inherits: false;\n}\n@property --tw-gradient-via-stops {\n  syntax: "*";\n  inherits: false;\n}\n@property --tw-gradient-from-position {\n  syntax: "<length-percentage>";\n  inherits: false;\n  initial-value: 0%;\n}\n@property --tw-gradient-via-position {\n  syntax: "<length-percentage>";\n  inherits: false;\n  initial-value: 50%;\n}\n@property --tw-gradient-to-position {\n  syntax: "<length-percentage>";\n  inherits: false;\n  initial-value: 100%;\n}\n@property --tw-font-weight {\n  syntax: "*";\n  inherits: false;\n}\n@property --tw-shadow {\n  syntax: "*";\n  inherits: false;\n  initial-value: 0 0 #0000;\n}\n@property --tw-shadow-color {\n  syntax: "*";\n  inherits: false;\n}\n@property --tw-shadow-alpha {\n  syntax: "<percentage>";\n  inherits: false;\n  initial-value: 100%;\n}\n@property --tw-inset-shadow {\n  syntax: "*";\n  inherits: false;\n  initial-value: 0 0 #0000;\n}\n@property --tw-inset-shadow-color {\n  syntax: "*";\n  inherits: false;\n}\n@property --tw-inset-shadow-alpha {\n  syntax: "<percentage>";\n  inherits: false;\n  initial-value: 100%;\n}\n@property --tw-ring-color {\n  syntax: "*";\n  inherits: false;\n}\n@property --tw-ring-shadow {\n  syntax: "*";\n  inherits: false;\n  initial-value: 0 0 #0000;\n}\n@property --tw-inset-ring-color {\n  syntax: "*";\n  inherits: false;\n}\n@property --tw-inset-ring-shadow {\n  syntax: "*";\n  inherits: false;\n  initial-value: 0 0 #0000;\n}\n@property --tw-ring-inset {\n  syntax: "*";\n  inherits: false;\n}\n@property --tw-ring-offset-width {\n  syntax: "<length>";\n  inherits: false;\n  initial-value: 0px;\n}\n@property --tw-ring-offset-color {\n  syntax: "*";\n  inherits: false;\n  initial-value: #fff;\n}\n@property --tw-ring-offset-shadow {\n  syntax: "*";\n  inherits: false;\n  initial-value: 0 0 #0000;\n}\n@property --tw-backdrop-blur {\n  syntax: "*";\n  inherits: false;\n}\n@property --tw-backdrop-brightness {\n  syntax: "*";\n  inherits: false;\n}\n@property --tw-backdrop-contrast {\n  syntax: "*";\n  inherits: false;\n}\n@property --tw-backdrop-grayscale {\n  syntax: "*";\n  inherits: false;\n}\n@property --tw-backdrop-hue-rotate {\n  syntax: "*";\n  inherits: false;\n}\n@property --tw-backdrop-invert {\n  syntax: "*";\n  inherits: false;\n}\n@property --tw-backdrop-opacity {\n  syntax: "*";\n  inherits: false;\n}\n@property --tw-backdrop-saturate {\n  syntax: "*";\n  inherits: false;\n}\n@property --tw-backdrop-sepia {\n  syntax: "*";\n  inherits: false;\n}\n@property --tw-duration {\n  syntax: "*";\n  inherits: false;\n}\n@property --tw-scale-x {\n  syntax: "*";\n  inherits: false;\n  initial-value: 1;\n}\n@property --tw-scale-y {\n  syntax: "*";\n  inherits: false;\n  initial-value: 1;\n}\n@property --tw-scale-z {\n  syntax: "*";\n  inherits: false;\n  initial-value: 1;\n}\n@keyframes spin {\n  to {\n    transform: rotate(360deg);\n  }\n}\n@layer properties {\n  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {\n    *, ::before, ::after, ::backdrop {\n      --tw-translate-x: 0;\n      --tw-translate-y: 0;\n      --tw-translate-z: 0;\n      --tw-rotate-x: initial;\n      --tw-rotate-y: initial;\n      --tw-rotate-z: initial;\n      --tw-skew-x: initial;\n      --tw-skew-y: initial;\n      --tw-space-y-reverse: 0;\n      --tw-space-x-reverse: 0;\n      --tw-border-style: solid;\n      --tw-gradient-position: initial;\n      --tw-gradient-from: #0000;\n      --tw-gradient-via: #0000;\n      --tw-gradient-to: #0000;\n      --tw-gradient-stops: initial;\n      --tw-gradient-via-stops: initial;\n      --tw-gradient-from-position: 0%;\n      --tw-gradient-via-position: 50%;\n      --tw-gradient-to-position: 100%;\n      --tw-font-weight: initial;\n      --tw-shadow: 0 0 #0000;\n      --tw-shadow-color: initial;\n      --tw-shadow-alpha: 100%;\n      --tw-inset-shadow: 0 0 #0000;\n      --tw-inset-shadow-color: initial;\n      --tw-inset-shadow-alpha: 100%;\n      --tw-ring-color: initial;\n      --tw-ring-shadow: 0 0 #0000;\n      --tw-inset-ring-color: initial;\n      --tw-inset-ring-shadow: 0 0 #0000;\n      --tw-ring-inset: initial;\n      --tw-ring-offset-width: 0px;\n      --tw-ring-offset-color: #fff;\n      --tw-ring-offset-shadow: 0 0 #0000;\n      --tw-backdrop-blur: initial;\n      --tw-backdrop-brightness: initial;\n      --tw-backdrop-contrast: initial;\n      --tw-backdrop-grayscale: initial;\n      --tw-backdrop-hue-rotate: initial;\n      --tw-backdrop-invert: initial;\n      --tw-backdrop-opacity: initial;\n      --tw-backdrop-saturate: initial;\n      --tw-backdrop-sepia: initial;\n      --tw-duration: initial;\n      --tw-scale-x: 1;\n      --tw-scale-y: 1;\n      --tw-scale-z: 1;\n    }\n  }\n}\n',"",{version:3,sources:["webpack://./src/output.css"],names:[],mappings:"AAAA,gEAAgE;AAChE,iBAAiB;AACjB,yCAAyC;AACzC;EACE;IACE;6DACyD;IACzD;8BAC0B;IAC1B,0CAA0C;IAC1C,0CAA0C;IAC1C,0CAA0C;IAC1C,0CAA0C;IAC1C,0CAA0C;IAC1C,0CAA0C;IAC1C,6CAA6C;IAC7C,6CAA6C;IAC7C,6CAA6C;IAC7C,2CAA2C;IAC3C,6CAA6C;IAC7C,6CAA6C;IAC7C,6CAA6C;IAC7C,6CAA6C;IAC7C,6CAA6C;IAC7C,2CAA2C;IAC3C,4CAA4C;IAC5C,2CAA2C;IAC3C,4CAA4C;IAC5C,4CAA4C;IAC5C,4CAA4C;IAC5C,4CAA4C;IAC5C,4CAA4C;IAC5C,4CAA4C;IAC5C,4CAA4C;IAC5C,8CAA8C;IAC9C,6CAA6C;IAC7C,4CAA4C;IAC5C,8CAA8C;IAC9C,4CAA4C;IAC5C,2CAA2C;IAC3C,4CAA4C;IAC5C,4CAA4C;IAC5C,2CAA2C;IAC3C,4CAA4C;IAC5C,4CAA4C;IAC5C,2CAA2C;IAC3C,4CAA4C;IAC5C,4CAA4C;IAC5C,0CAA0C;IAC1C,mBAAmB;IACnB,mBAAmB;IACnB,kBAAkB;IAClB,qBAAqB;IACrB,qBAAqB;IACrB,kBAAkB;IAClB,sCAAsC;IACtC,mBAAmB;IACnB,0CAA0C;IAC1C,iBAAiB;IACjB,uCAAuC;IACvC,mBAAmB;IACnB,0CAA0C;IAC1C,kBAAkB;IAClB,yCAAyC;IACzC,kBAAkB;IAClB,sCAAsC;IACtC,oBAAoB;IACpB,2CAA2C;IAC3C,mBAAmB;IACnB,yCAAyC;IACzC,gBAAgB;IAChB,0BAA0B;IAC1B,kBAAkB;IAClB,0BAA0B;IAC1B,gBAAgB;IAChB,0BAA0B;IAC1B,uBAAuB;IACvB,yBAAyB;IACzB,2BAA2B;IAC3B,uBAAuB;IACvB,wBAAwB;IACxB,qBAAqB;IACrB,mBAAmB;IACnB,oBAAoB;IACpB,kBAAkB;IAClB,oBAAoB;IACpB,uCAAuC;IACvC,oCAAoC;IACpC,kEAAkE;IAClE,uCAAuC;IACvC,4CAA4C;EAC9C;AACF;AACA;EACE;IACE,sBAAsB;IACtB,SAAS;IACT,UAAU;IACV,eAAe;EACjB;EACA;IACE,gBAAgB;IAChB,8BAA8B;IAC9B,gBAAW;MAAX,cAAW;SAAX,WAAW;IACX,2JAA2J;IAC3J,mEAAmE;IACnE,uEAAuE;IACvE,wCAAwC;EAC1C;EACA;IACE,SAAS;IACT,cAAc;IACd,qBAAqB;EACvB;EACA;IACE,yCAAyC;IACzC,iCAAiC;EACnC;EACA;IACE,kBAAkB;IAClB,oBAAoB;EACtB;EACA;IACE,cAAc;IACd,gCAAgC;IAChC,wBAAwB;EAC1B;EACA;IACE,mBAAmB;EACrB;EACA;IACE,gJAAgJ;IAChJ,wEAAwE;IACxE,4EAA4E;IAC5E,cAAc;EAChB;EACA;IACE,cAAc;EAChB;EACA;IACE,cAAc;IACd,cAAc;IACd,kBAAkB;IAClB,wBAAwB;EAC1B;EACA;IACE,eAAe;EACjB;EACA;IACE,WAAW;EACb;EACA;IACE,cAAc;IACd,qBAAqB;IACrB,yBAAyB;EAC3B;EACA;IACE,aAAa;EACf;EACA;IACE,wBAAwB;EAC1B;EACA;IACE,kBAAkB;EACpB;EACA;IACE,gBAAgB;EAClB;EACA;IACE,cAAc;IACd,sBAAsB;EACxB;EACA;IACE,eAAe;IACf,YAAY;EACd;EACA;IACE,aAAa;IACb,8BAA8B;IAC9B,gCAAgC;IAChC,uBAAuB;IACvB,cAAc;IACd,gBAAgB;IAChB,6BAA6B;IAC7B,UAAU;EACZ;EACA;IACE,mBAAmB;EACrB;EACA;IACE,0BAA0B;EAC5B;EACA;IACE,sBAAsB;EACxB;EACA;IACE,UAAU;EACZ;EAFA;IACE,UAAU;EACZ;EACA;IACE;MACE,mBAAmB;MACnB;QACE,yDAAyD;MAC3D;IACF;IALA;MACE,mBAAmB;MACnB;QACE,yDAAyD;MAC3D;IACF;EACF;EACA;IACE,gBAAgB;EAClB;EACA;IACE,wBAAwB;EAC1B;EACA;IACE,eAAe;IACf,mBAAmB;EACrB;EACA;IACE,oBAAoB;EACtB;EACA;IACE,UAAU;EACZ;EACA;IACE,gBAAgB;EAClB;EACA;IACE,gBAAgB;EAClB;EACA;IACE,0BAAkB;OAAlB,uBAAkB;YAAlB,kBAAkB;EACpB;EACA;IACE,YAAY;EACd;EACA;IACE,wBAAwB;EAC1B;AACF;AACA;EACE;IACE,kBAAkB;EACpB;EACA;IACE,kBAAkB;IAClB,UAAU;IACV,WAAW;IACX,UAAU;IACV,YAAY;IACZ,gBAAgB;IAChB,sBAAsB;IACtB,mBAAmB;IACnB,eAAe;EACjB;EACA;IACE,kBAAkB;EACpB;EACA;IACE,eAAe;EACjB;EACA;IACE,kBAAkB;EACpB;EACA;IACE,gBAAgB;EAClB;EACA;IACE,+BAA+B;EACjC;EACA;IACE,6BAA6B;EAC/B;EACA;IACE,+BAA+B;EACjC;EACA;IACE,8BAA8B;EAChC;EACA;IACE,WAAW;EACb;EACA;IACE,aAAa;EACf;EACA;IACE,4BAA4B;EAC9B;EACA;IACE,4BAA4B;EAC9B;EACA;IACE,4BAA4B;EAC9B;EACA;IACE,oBAAoB;EACtB;EACA;IACE,oBAAoB;EACtB;EACA;IACE,oBAAoB;EACtB;EACA;IACE,oBAAoB;EACtB;EACA;IACE,yBAAyB;EAC3B;EACA;IACE,iBAAiB;EACnB;EACA;IACE,iBAAiB;EACnB;EACA;IACE,WAAW;IACX;MACE,gBAAgB;IAClB;IACA;MACE,gBAAgB;IAClB;IACA;MACE,gBAAgB;IAClB;IACA;MACE,gBAAgB;IAClB;IACA;MACE,gBAAgB;IAClB;EACF;EACA;IACE,gCAAgC;EAClC;EACA;IACE,gCAAgC;EAClC;EACA;IACE,iCAAiC;EACnC;EACA;IACE,mBAAmB;EACrB;EACA;IACE,sCAAsC;EACxC;EACA;IACE,2CAA2C;EAC7C;EACA;IACE,oCAAoC;EACtC;EACA;IACE,oCAAoC;EACtC;EACA;IACE,oCAAoC;EACtC;EACA;IACE,qCAAqC;EACvC;EACA;IACE,qCAAqC;EACvC;EACA;IACE,qCAAqC;EACvC;EACA;IACE,qCAAqC;EACvC;EACA;IACE,qCAAqC;EACvC;EACA;IACE,uCAAuC;EACzC;EACA;IACE,uCAAuC;EACzC;EACA;IACE,uCAAuC;EACzC;EACA;IACE,qCAAqC;EACvC;EACA;IACE,cAAc;EAChB;EACA;IACE,aAAa;EACf;EACA;IACE,aAAa;EACf;EACA;IACE,aAAa;EACf;EACA;IACE,eAAe;EACjB;EACA;IACE,wBAAwB;EAC1B;EACA;IACE,wBAAwB;EAC1B;EACA;IACE,wBAAwB;EAC1B;EACA;IACE,wBAAwB;EAC1B;EACA;IACE,gCAAgC;EAClC;EACA;IACE,wBAAwB;EAC1B;EACA;IACE,gCAAgC;EAClC;EACA;IACE,gCAAgC;EAClC;EACA;IACE,yBAAyB;EAC3B;EACA;IACE,iCAAiC;EACnC;EACA;IACE,iCAAiC;EACnC;EACA;IACE,iCAAiC;EACnC;EACA;IACE,iCAAiC;EACnC;EACA;IACE,iCAAiC;EACnC;EACA;IACE,iCAAiC;EACnC;EACA;IACE,iCAAiC;EACnC;EACA;IACE,kCAAkC;EACpC;EACA;IACE,YAAY;EACd;EACA;IACE,aAAa;EACf;EACA;IACE,4BAA4B;EAC9B;EACA;IACE,iBAAiB;EACnB;EACA;IACE,uBAAuB;EACzB;EACA;IACE,uBAAuB;EACzB;EACA;IACE,uBAAuB;EACzB;EACA;IACE,uBAAuB;EACzB;EACA;IACE,uBAAuB;EACzB;EACA;IACE,uBAAuB;EACzB;EACA;IACE,uBAAuB;EACzB;EACA;IACE,+BAA+B;EACjC;EACA;IACE,uBAAuB;EACzB;EACA;IACE,uBAAuB;EACzB;EACA;IACE,+BAA+B;EACjC;EACA;IACE,gCAAgC;EAClC;EACA;IACE,gCAAgC;EAClC;EACA;IACE,gCAAgC;EAClC;EACA;IACE,gCAAgC;EAClC;EACA;IACE,gCAAgC;EAClC;EACA;IACE,gCAAgC;EAClC;EACA;IACE,gCAAgC;EAClC;EACA;IACE,iCAAiC;EACnC;EACA;IACE,WAAW;EACb;EACA;IACE,8BAA8B;EAChC;EACA;IACE,8BAA8B;EAChC;EACA;IACE,mCAAmC;EACrC;EACA;IACE,OAAO;EACT;EACA;IACE,cAAc;EAChB;EACA;IACE,uBAAuB;IACvB,sDAAsD;EACxD;EACA;IACE,0CAA0C;IAC1C,sDAAsD;EACxD;EACA;IACE,0GAA0G;EAC5G;EACA;IACE,8BAA8B;EAChC;EACA;IACE,eAAe;EACjB;EACA;IACE,eAAe;EACjB;EACA;IACE,gDAAgD;EAClD;EACA;IACE,gDAAgD;EAClD;EACA;IACE,iDAAiD;EACnD;EACA;IACE,6CAA6C;EAC/C;EACA;IACE,6CAA6C;EAC/C;EACA;IACE,sBAAsB;EACxB;EACA;IACE,mBAAmB;EACrB;EACA;IACE,qBAAqB;EACvB;EACA;IACE,mBAAmB;EACrB;EACA;IACE,8BAA8B;EAChC;EACA;IACE,uBAAuB;EACzB;EACA;IACE,6BAA6B;EAC/B;EACA;IACE,+BAA+B;EACjC;EACA;IACE,6BAA6B;EAC/B;EACA;IACE,6BAA6B;EAC/B;EACA;IACE;MACE,uBAAuB;MACvB,8EAA8E;MAC9E,sFAAsF;IACxF;EACF;EACA;IACE;MACE,uBAAuB;MACvB,8EAA8E;MAC9E,sFAAsF;IACxF;EACF;EACA;IACE;MACE,uBAAuB;MACvB,+EAA+E;MAC/E,uFAAuF;IACzF;EACF;EACA;IACE;MACE,uBAAuB;MACvB,+EAA+E;MAC/E,uFAAuF;IACzF;EACF;EACA;IACE,gBAAgB;IAChB,uBAAuB;IACvB,mBAAmB;EACrB;EACA;IACE,gBAAgB;EAClB;EACA;IACE,sBAAsB;EACxB;EACA;IACE,gCAAgC;EAClC;EACA;IACE,gCAAgC;EAClC;EACA;IACE,mBAAmB;EACrB;EACA;IACE,mCAAmC;EACrC;EACA;IACE,+BAA+B;EACjC;EACA;IACE,+BAA+B;EACjC;EACA;IACE,+BAA+B;EACjC;EACA;IACE,wCAAwC;IACxC,2CAA2C;EAC7C;EACA;IACE,yCAAyC;IACzC,4CAA4C;EAC9C;EACA;IACE,oCAAoC;IACpC,iBAAiB;EACnB;EACA;IACE,oCAAoC;IACpC,iBAAiB;EACnB;EACA;IACE,oCAAoC;IACpC,iBAAiB;EACnB;EACA;IACE,mCAAmC;EACrC;EACA;IACE,kCAAkC;EACpC;EACA;IACE,gCAAgC;EAClC;EACA;IACE,oCAAoC;EACtC;EACA;IACE,uCAAuC;EACzC;EACA;IACE,uCAAuC;EACzC;EACA;IACE,uCAAuC;EACzC;EACA;IACE,uCAAuC;EACzC;EACA;IACE,0CAA0C;EAC5C;EACA;IACE,uCAAuC;EACzC;EACA;IACE,uCAAuC;EACzC;EACA;IACE,uCAAuC;EACzC;EACA;IACE,wCAAwC;EAC1C;EACA;IACE,wCAAwC;EAC1C;EACA;IACE,wCAAwC;EAC1C;EACA;IACE,yCAAyC;EAC3C;EACA;IACE,uCAAuC;EACzC;EACA;IACE,yCAAyC;EAC3C;EACA;IACE,uCAAuC;EACzC;EACA;IACE,yCAAyC;EAC3C;EACA;IACE,sCAAsC;EACxC;EACA;IACE,sCAAsC;EACxC;EACA;IACE,uCAAuC;EACzC;EACA;IACE,sCAAsC;EACxC;EACA;IACE,uCAAuC;EACzC;EACA;IACE,yCAAyC;EAC3C;EACA;IACE,oCAAoC;EACtC;EACA;IACE,yCAAyC;EAC3C;EACA;IACE,yCAAyC;IACzC,2DAA2D;EAC7D;EACA;IACE,uCAAuC;IACvC,2DAA2D;EAC7D;EACA;IACE,sCAAsC;IACtC,8LAA8L;EAChM;EACA;IACE,yCAAyC;IACzC,8LAA8L;EAChM;EACA;IACE,2CAA2C;IAC3C,8LAA8L;EAChM;EACA;IACE,qCAAqC;IACrC,4NAA4N;IAC5N,iDAAiD;EACnD;EACA;IACE,0CAA0C;IAC1C,4NAA4N;IAC5N,iDAAiD;EACnD;EACA;IACE,uCAAuC;IACvC,8LAA8L;EAChM;EACA;IACE,uCAAuC;IACvC,8LAA8L;EAChM;EACA;IACE,uCAAuC;IACvC,8LAA8L;EAChM;EACA;IACE,6BAAqB;YAArB,qBAAqB;EACvB;EACA;IACE,2BAA2B;EAC7B;EACA;IACE,oBAAiB;OAAjB,iBAAiB;EACnB;EACA;IACE,iCAAiC;EACnC;EACA;IACE,iCAAiC;EACnC;EACA;IACE,iCAAiC;EACnC;EACA;IACE,iCAAiC;EACnC;EACA;IACE,iCAAiC;EACnC;EACA;IACE,iCAAiC;EACnC;EACA;IACE,iCAAiC;EACnC;EACA;IACE,kCAAkC;EACpC;EACA;IACE,wCAAwC;EAC1C;EACA;IACE,wCAAwC;EAC1C;EACA;IACE,wCAAwC;EAC1C;EACA;IACE,wCAAwC;EAC1C;EACA;IACE,wCAAwC;EAC1C;EACA;IACE,uCAAuC;EACzC;EACA;IACE,uCAAuC;EACzC;EACA;IACE,yCAAyC;EAC3C;EACA;IACE,uCAAuC;EACzC;EACA;IACE,uCAAuC;EACzC;EACA;IACE,kBAAkB;EACpB;EACA;IACE,gBAAgB;EAClB;EACA;IACE,6BAA6B;EAC/B;EACA;IACE,0BAA0B;IAC1B,4DAA4D;EAC9D;EACA;IACE,0BAA0B;IAC1B,4DAA4D;EAC9D;EACA;IACE,0BAA0B;IAC1B,4DAA4D;EAC9D;EACA;IACE,0BAA0B;IAC1B,4DAA4D;EAC9D;EACA;IACE,0BAA0B;IAC1B,4DAA4D;EAC9D;EACA;IACE,0BAA0B;IAC1B,4DAA4D;EAC9D;EACA;IACE,2BAA2B;IAC3B,6DAA6D;EAC/D;EACA;IACE,yBAAyB;IACzB,2DAA2D;EAC7D;EACA;IACE,yBAAyB;IACzB,2DAA2D;EAC7D;EACA;IACE,yBAAyB;IACzB,2DAA2D;EAC7D;EACA;IACE,yBAAyB;IACzB,2DAA2D;EAC7D;EACA;IACE,eAAe;EACjB;EACA;IACE,0CAA0C;IAC1C,qCAAqC;EACvC;EACA;IACE,yCAAyC;IACzC,oCAAoC;EACtC;EACA;IACE,2CAA2C;IAC3C,sCAAsC;EACxC;EACA;IACE,6CAA6C;IAC7C,wCAAwC;EAC1C;EACA;IACE,yCAAyC;IACzC,oCAAoC;EACtC;EACA;IACE,yBAAyB;EAC3B;EACA;IACE,4BAA4B;EAC9B;EACA;IACE,4BAA4B;EAC9B;EACA;IACE,4BAA4B;EAC9B;EACA;IACE,4BAA4B;EAC9B;EACA;IACE,4BAA4B;EAC9B;EACA;IACE,4BAA4B;EAC9B;EACA;IACE,4BAA4B;EAC9B;EACA;IACE,4BAA4B;EAC9B;EACA;IACE,6BAA6B;EAC/B;EACA;IACE,2BAA2B;EAC7B;EACA;IACE,2BAA2B;EAC7B;EACA;IACE,kBAAkB;EACpB;EACA;IACE,yBAAyB;EAC3B;EACA;IACE,8BAA8B;EAChC;EACA;IACE,WAAW;EACb;EACA;IACE,YAAY;EACd;EACA;IACE,aAAa;EACf;EACA;IACE,+HAA+H;IAC/H,sIAAsI;EACxI;EACA;IACE,6HAA6H;IAC7H,sIAAsI;EACxI;EACA;IACE,0BAA0B;EAC5B;EACA;IACE,yCAAyC;IACzC,wRAAwR;IACxR,gRAAgR;EAClR;EACA;IACE,mRAAmR;IACnR,qFAAqF;IACrF,2EAA2E;EAC7E;EACA;IACE,wBAAwB;IACxB,qFAAqF;IACrF,2EAA2E;EAC7E;EACA;IACE,uKAAuK;IACvK,qFAAqF;IACrF,2EAA2E;EAC7E;EACA;IACE,wDAAwD;IACxD,qFAAqF;IACrF,2EAA2E;EAC7E;EACA;IACE,uBAAuB;EACzB;EACA;IACE,oBAAoB;IACpB,0BAA0B;EAC5B;EACA;IACE,oBAAoB;IACpB,0BAA0B;EAC5B;EACA;IACE,oBAAoB;IACpB,0BAA0B;EAC5B;EACA;IACE,yBAAyB;IACzB,sBAAiB;SAAjB,iBAAiB;EACnB;EACA;IACE;MACE;QACE,kBAAkB;QAClB,kBAAkB;QAClB,kBAAkB;QAClB,0CAA0C;MAC5C;IACF;EACF;EACA;IACE;MACE;QACE,uCAAuC;MACzC;IACF;EACF;EACA;IACE;MACE;QACE,uCAAuC;MACzC;IACF;EACF;EACA;IACE;MACE;QACE,uCAAuC;MACzC;IACF;EACF;EACA;IACE;MACE;QACE,uCAAuC;MACzC;IACF;EACF;EACA;IACE;MACE;QACE,uCAAuC;MACzC;IACF;EACF;EACA;IACE;MACE;QACE,uCAAuC;MACzC;IACF;EACF;EACA;IACE;MACE;QACE,wCAAwC;MAC1C;IACF;EACF;EACA;IACE;MACE;QACE,sCAAsC;MACxC;IACF;EACF;EACA;IACE;MACE;QACE,6BAA6B;MAC/B;IACF;EACF;EACA;IACE;MACE;QACE,+BAA+B;MACjC;IACF;EACF;EACA;IACE;MACE,wHAAwH;MACxH,sIAAsI;IACxI;EACF;EACA;IACE;MACE,wHAAwH;MACxH,sIAAsI;IACxI;EACF;EACA;IACE;MACE,sCAAsC;IACxC;EACF;EACA;IACE;MACE,sCAAsC;IACxC;EACF;EACA;IACE;MACE,qCAAqC;IACvC;EACF;EACA;IACE;MACE,wBAAwB;MACxB,mBAAmB;IACrB;EACF;EACA;IACE;MACE,uBAAuB;IACzB;EACF;EACA;IACE;MACE,uBAAuB;IACzB;EACF;EACA;IACE;MACE,mBAAmB;IACrB;EACF;EACA;IACE;MACE,uBAAuB;IACzB;EACF;EACA;IACE;MACE,uCAAuC;IACzC;EACF;EACA;IACE;MACE,sCAAsC;IACxC;EACF;EACA;IACE;MACE,2BAA2B;IAC7B;EACF;EACA;IACE;MACE,4BAA4B;IAC9B;EACF;EACA;IACE;MACE;QACE;UACE,uCAAuC;QACzC;MACF;IACF;EACF;EACA;IACE;MACE;QACE;UACE,sCAAsC;QACxC;MACF;IACF;EACF;EACA;IACE;MACE;QACE,sCAAsC;MACxC;IACF;EACF;EACA;IACE;MACE;QACE,qCAAqC;MACvC;IACF;EACF;AACF;AACA;EACE,WAAW;EACX,eAAe;EACf,gBAAgB;AAClB;AACA;EACE,WAAW;EACX,eAAe;EACf,gBAAgB;AAClB;AACA;EACE,WAAW;EACX,eAAe;EACf,gBAAgB;AAClB;AACA;EACE,WAAW;EACX,eAAe;AACjB;AACA;EACE,WAAW;EACX,eAAe;AACjB;AACA;EACE,WAAW;EACX,eAAe;AACjB;AACA;EACE,WAAW;EACX,eAAe;AACjB;AACA;EACE,WAAW;EACX,eAAe;AACjB;AACA;EACE,WAAW;EACX,eAAe;EACf,gBAAgB;AAClB;AACA;EACE,WAAW;EACX,eAAe;EACf,gBAAgB;AAClB;AACA;EACE,WAAW;EACX,eAAe;EACf,oBAAoB;AACtB;AACA;EACE,WAAW;EACX,eAAe;AACjB;AACA;EACE,iBAAiB;EACjB,eAAe;EACf,oBAAoB;AACtB;AACA;EACE,iBAAiB;EACjB,eAAe;EACf,oBAAoB;AACtB;AACA;EACE,iBAAiB;EACjB,eAAe;EACf,oBAAoB;AACtB;AACA;EACE,WAAW;EACX,eAAe;AACjB;AACA;EACE,WAAW;EACX,eAAe;AACjB;AACA;EACE,6BAA6B;EAC7B,eAAe;EACf,iBAAiB;AACnB;AACA;EACE,6BAA6B;EAC7B,eAAe;EACf,kBAAkB;AACpB;AACA;EACE,6BAA6B;EAC7B,eAAe;EACf,mBAAmB;AACrB;AACA;EACE,WAAW;EACX,eAAe;AACjB;AACA;EACE,WAAW;EACX,eAAe;EACf,wBAAwB;AAC1B;AACA;EACE,WAAW;EACX,eAAe;AACjB;AACA;EACE,sBAAsB;EACtB,eAAe;EACf,mBAAmB;AACrB;AACA;EACE,WAAW;EACX,eAAe;EACf,wBAAwB;AAC1B;AACA;EACE,WAAW;EACX,eAAe;AACjB;AACA;EACE,sBAAsB;EACtB,eAAe;EACf,mBAAmB;AACrB;AACA;EACE,WAAW;EACX,eAAe;AACjB;AACA;EACE,WAAW;EACX,eAAe;EACf,wBAAwB;AAC1B;AACA;EACE,WAAW;EACX,eAAe;AACjB;AACA;EACE,WAAW;EACX,eAAe;EACf,wBAAwB;AAC1B;AACA;EACE,WAAW;EACX,eAAe;AACjB;AACA;EACE,kBAAkB;EAClB,eAAe;EACf,kBAAkB;AACpB;AACA;EACE,WAAW;EACX,eAAe;EACf,mBAAmB;AACrB;AACA;EACE,WAAW;EACX,eAAe;EACf,wBAAwB;AAC1B;AACA;EACE,WAAW;EACX,eAAe;AACjB;AACA;EACE,WAAW;EACX,eAAe;AACjB;AACA;EACE,WAAW;EACX,eAAe;AACjB;AACA;EACE,WAAW;EACX,eAAe;AACjB;AACA;EACE,WAAW;EACX,eAAe;AACjB;AACA;EACE,WAAW;EACX,eAAe;AACjB;AACA;EACE,WAAW;EACX,eAAe;AACjB;AACA;EACE,WAAW;EACX,eAAe;AACjB;AACA;EACE,WAAW;EACX,eAAe;AACjB;AACA;EACE,WAAW;EACX,eAAe;AACjB;AACA;EACE,WAAW;EACX,eAAe;EACf,gBAAgB;AAClB;AACA;EACE,WAAW;EACX,eAAe;EACf,gBAAgB;AAClB;AACA;EACE,WAAW;EACX,eAAe;EACf,gBAAgB;AAClB;AACA;EACE;IACE,yBAAyB;EAC3B;AACF;AACA;EACE;IACE;MACE,mBAAmB;MACnB,mBAAmB;MACnB,mBAAmB;MACnB,sBAAsB;MACtB,sBAAsB;MACtB,sBAAsB;MACtB,oBAAoB;MACpB,oBAAoB;MACpB,uBAAuB;MACvB,uBAAuB;MACvB,wBAAwB;MACxB,+BAA+B;MAC/B,yBAAyB;MACzB,wBAAwB;MACxB,uBAAuB;MACvB,4BAA4B;MAC5B,gCAAgC;MAChC,+BAA+B;MAC/B,+BAA+B;MAC/B,+BAA+B;MAC/B,yBAAyB;MACzB,sBAAsB;MACtB,0BAA0B;MAC1B,uBAAuB;MACvB,4BAA4B;MAC5B,gCAAgC;MAChC,6BAA6B;MAC7B,wBAAwB;MACxB,2BAA2B;MAC3B,8BAA8B;MAC9B,iCAAiC;MACjC,wBAAwB;MACxB,2BAA2B;MAC3B,4BAA4B;MAC5B,kCAAkC;MAClC,2BAA2B;MAC3B,iCAAiC;MACjC,+BAA+B;MAC/B,gCAAgC;MAChC,iCAAiC;MACjC,6BAA6B;MAC7B,8BAA8B;MAC9B,+BAA+B;MAC/B,4BAA4B;MAC5B,sBAAsB;MACtB,eAAe;MACf,eAAe;MACf,eAAe;IACjB;EACF;AACF",sourcesContent:['/*! tailwindcss v4.1.4 | MIT License | https://tailwindcss.com */\n@layer properties;\n@layer theme, base, components, utilities;\n@layer theme {\n  :root, :host {\n    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",\n      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";\n    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",\n      "Courier New", monospace;\n    --color-red-300: oklch(80.8% 0.114 19.571);\n    --color-red-500: oklch(63.7% 0.237 25.331);\n    --color-red-600: oklch(57.7% 0.245 27.325);\n    --color-red-700: oklch(50.5% 0.213 27.518);\n    --color-red-800: oklch(44.4% 0.177 26.899);\n    --color-red-900: oklch(39.6% 0.141 25.723);\n    --color-orange-500: oklch(70.5% 0.213 47.604);\n    --color-yellow-400: oklch(85.2% 0.199 91.936);\n    --color-yellow-500: oklch(79.5% 0.184 86.047);\n    --color-lime-500: oklch(76.8% 0.233 130.85);\n    --color-green-100: oklch(96.2% 0.044 156.743);\n    --color-green-500: oklch(72.3% 0.219 149.579);\n    --color-green-600: oklch(62.7% 0.194 149.214);\n    --color-green-700: oklch(52.7% 0.154 150.069);\n    --color-emerald-500: oklch(69.6% 0.17 162.48);\n    --color-teal-500: oklch(70.4% 0.14 182.503);\n    --color-cyan-500: oklch(71.5% 0.143 215.221);\n    --color-sky-500: oklch(68.5% 0.169 237.323);\n    --color-blue-300: oklch(80.9% 0.105 251.813);\n    --color-blue-400: oklch(70.7% 0.165 254.624);\n    --color-blue-500: oklch(62.3% 0.214 259.815);\n    --color-blue-600: oklch(54.6% 0.245 262.881);\n    --color-blue-700: oklch(48.8% 0.243 264.376);\n    --color-blue-800: oklch(42.4% 0.199 265.638);\n    --color-blue-900: oklch(37.9% 0.146 265.522);\n    --color-indigo-500: oklch(58.5% 0.233 277.117);\n    --color-violet-500: oklch(60.6% 0.25 292.717);\n    --color-purple-500: oklch(62.7% 0.265 303.9);\n    --color-purple-900: oklch(38.1% 0.176 304.987);\n    --color-pink-500: oklch(65.6% 0.241 354.308);\n    --color-rose-500: oklch(64.5% 0.246 16.439);\n    --color-gray-100: oklch(96.7% 0.003 264.542);\n    --color-gray-200: oklch(92.8% 0.006 264.531);\n    --color-gray-300: oklch(87.2% 0.01 258.338);\n    --color-gray-400: oklch(70.7% 0.022 261.325);\n    --color-gray-500: oklch(55.1% 0.027 264.364);\n    --color-gray-600: oklch(44.6% 0.03 256.802);\n    --color-gray-700: oklch(37.3% 0.034 259.733);\n    --color-gray-800: oklch(27.8% 0.033 256.848);\n    --color-gray-900: oklch(21% 0.034 264.665);\n    --color-black: #000;\n    --color-white: #fff;\n    --spacing: 0.25rem;\n    --container-xs: 20rem;\n    --container-sm: 24rem;\n    --text-xs: 0.75rem;\n    --text-xs--line-height: calc(1 / 0.75);\n    --text-sm: 0.875rem;\n    --text-sm--line-height: calc(1.25 / 0.875);\n    --text-base: 1rem;\n    --text-base--line-height: calc(1.5 / 1);\n    --text-lg: 1.125rem;\n    --text-lg--line-height: calc(1.75 / 1.125);\n    --text-xl: 1.25rem;\n    --text-xl--line-height: calc(1.75 / 1.25);\n    --text-2xl: 1.5rem;\n    --text-2xl--line-height: calc(2 / 1.5);\n    --text-3xl: 1.875rem;\n    --text-3xl--line-height: calc(2.25 / 1.875);\n    --text-4xl: 2.25rem;\n    --text-4xl--line-height: calc(2.5 / 2.25);\n    --text-5xl: 3rem;\n    --text-5xl--line-height: 1;\n    --text-7xl: 4.5rem;\n    --text-7xl--line-height: 1;\n    --text-9xl: 8rem;\n    --text-9xl--line-height: 1;\n    --font-weight-thin: 100;\n    --font-weight-medium: 500;\n    --font-weight-semibold: 600;\n    --font-weight-bold: 700;\n    --font-weight-black: 900;\n    --radius-md: 0.375rem;\n    --radius-lg: 0.5rem;\n    --radius-xl: 0.75rem;\n    --radius-2xl: 1rem;\n    --radius-3xl: 1.5rem;\n    --animate-spin: spin 1s linear infinite;\n    --default-transition-duration: 150ms;\n    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n    --default-font-family: var(--font-sans);\n    --default-mono-font-family: var(--font-mono);\n  }\n}\n@layer base {\n  *, ::after, ::before, ::backdrop, ::file-selector-button {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n    border: 0 solid;\n  }\n  html, :host {\n    line-height: 1.5;\n    -webkit-text-size-adjust: 100%;\n    tab-size: 4;\n    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");\n    font-feature-settings: var(--default-font-feature-settings, normal);\n    font-variation-settings: var(--default-font-variation-settings, normal);\n    -webkit-tap-highlight-color: transparent;\n  }\n  hr {\n    height: 0;\n    color: inherit;\n    border-top-width: 1px;\n  }\n  abbr:where([title]) {\n    -webkit-text-decoration: underline dotted;\n    text-decoration: underline dotted;\n  }\n  h1, h2, h3, h4, h5, h6 {\n    font-size: inherit;\n    font-weight: inherit;\n  }\n  a {\n    color: inherit;\n    -webkit-text-decoration: inherit;\n    text-decoration: inherit;\n  }\n  b, strong {\n    font-weight: bolder;\n  }\n  code, kbd, samp, pre {\n    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);\n    font-feature-settings: var(--default-mono-font-feature-settings, normal);\n    font-variation-settings: var(--default-mono-font-variation-settings, normal);\n    font-size: 1em;\n  }\n  small {\n    font-size: 80%;\n  }\n  sub, sup {\n    font-size: 75%;\n    line-height: 0;\n    position: relative;\n    vertical-align: baseline;\n  }\n  sub {\n    bottom: -0.25em;\n  }\n  sup {\n    top: -0.5em;\n  }\n  table {\n    text-indent: 0;\n    border-color: inherit;\n    border-collapse: collapse;\n  }\n  :-moz-focusring {\n    outline: auto;\n  }\n  progress {\n    vertical-align: baseline;\n  }\n  summary {\n    display: list-item;\n  }\n  ol, ul, menu {\n    list-style: none;\n  }\n  img, svg, video, canvas, audio, iframe, embed, object {\n    display: block;\n    vertical-align: middle;\n  }\n  img, video {\n    max-width: 100%;\n    height: auto;\n  }\n  button, input, select, optgroup, textarea, ::file-selector-button {\n    font: inherit;\n    font-feature-settings: inherit;\n    font-variation-settings: inherit;\n    letter-spacing: inherit;\n    color: inherit;\n    border-radius: 0;\n    background-color: transparent;\n    opacity: 1;\n  }\n  :where(select:is([multiple], [size])) optgroup {\n    font-weight: bolder;\n  }\n  :where(select:is([multiple], [size])) optgroup option {\n    padding-inline-start: 20px;\n  }\n  ::file-selector-button {\n    margin-inline-end: 4px;\n  }\n  ::placeholder {\n    opacity: 1;\n  }\n  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {\n    ::placeholder {\n      color: currentcolor;\n      @supports (color: color-mix(in lab, red, red)) {\n        color: color-mix(in oklab, currentcolor 50%, transparent);\n      }\n    }\n  }\n  textarea {\n    resize: vertical;\n  }\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n  ::-webkit-date-and-time-value {\n    min-height: 1lh;\n    text-align: inherit;\n  }\n  ::-webkit-datetime-edit {\n    display: inline-flex;\n  }\n  ::-webkit-datetime-edit-fields-wrapper {\n    padding: 0;\n  }\n  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {\n    padding-block: 0;\n  }\n  :-moz-ui-invalid {\n    box-shadow: none;\n  }\n  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {\n    appearance: button;\n  }\n  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {\n    height: auto;\n  }\n  [hidden]:where(:not([hidden="until-found"])) {\n    display: none !important;\n  }\n}\n@layer utilities {\n  .invisible {\n    visibility: hidden;\n  }\n  .sr-only {\n    position: absolute;\n    width: 1px;\n    height: 1px;\n    padding: 0;\n    margin: -1px;\n    overflow: hidden;\n    clip: rect(0, 0, 0, 0);\n    white-space: nowrap;\n    border-width: 0;\n  }\n  .absolute {\n    position: absolute;\n  }\n  .fixed {\n    position: fixed;\n  }\n  .relative {\n    position: relative;\n  }\n  .static {\n    position: static;\n  }\n  .inset-0 {\n    inset: calc(var(--spacing) * 0);\n  }\n  .top-0 {\n    top: calc(var(--spacing) * 0);\n  }\n  .right-0 {\n    right: calc(var(--spacing) * 0);\n  }\n  .left-0 {\n    left: calc(var(--spacing) * 0);\n  }\n  .z-10 {\n    z-index: 10;\n  }\n  .z-\\[9999\\] {\n    z-index: 9999;\n  }\n  .col-span-2 {\n    grid-column: span 2 / span 2;\n  }\n  .col-span-4 {\n    grid-column: span 4 / span 4;\n  }\n  .col-span-6 {\n    grid-column: span 6 / span 6;\n  }\n  .col-start-2 {\n    grid-column-start: 2;\n  }\n  .col-start-4 {\n    grid-column-start: 4;\n  }\n  .col-start-5 {\n    grid-column-start: 5;\n  }\n  .col-start-6 {\n    grid-column-start: 6;\n  }\n  .row-span-2 {\n    grid-row: span 2 / span 2;\n  }\n  .row-start-1 {\n    grid-row-start: 1;\n  }\n  .row-start-3 {\n    grid-row-start: 3;\n  }\n  .container {\n    width: 100%;\n    @media (width >= 40rem) {\n      max-width: 40rem;\n    }\n    @media (width >= 48rem) {\n      max-width: 48rem;\n    }\n    @media (width >= 64rem) {\n      max-width: 64rem;\n    }\n    @media (width >= 80rem) {\n      max-width: 80rem;\n    }\n    @media (width >= 96rem) {\n      max-width: 96rem;\n    }\n  }\n  .m-1 {\n    margin: calc(var(--spacing) * 1);\n  }\n  .m-2 {\n    margin: calc(var(--spacing) * 2);\n  }\n  .m-12 {\n    margin: calc(var(--spacing) * 12);\n  }\n  .mx-auto {\n    margin-inline: auto;\n  }\n  .my-5 {\n    margin-block: calc(var(--spacing) * 5);\n  }\n  .me-2 {\n    margin-inline-end: calc(var(--spacing) * 2);\n  }\n  .mt-2 {\n    margin-top: calc(var(--spacing) * 2);\n  }\n  .mt-3 {\n    margin-top: calc(var(--spacing) * 3);\n  }\n  .mt-4 {\n    margin-top: calc(var(--spacing) * 4);\n  }\n  .mt-10 {\n    margin-top: calc(var(--spacing) * 10);\n  }\n  .mt-12 {\n    margin-top: calc(var(--spacing) * 12);\n  }\n  .mt-24 {\n    margin-top: calc(var(--spacing) * 24);\n  }\n  .mt-28 {\n    margin-top: calc(var(--spacing) * 28);\n  }\n  .mt-64 {\n    margin-top: calc(var(--spacing) * 64);\n  }\n  .mb-2 {\n    margin-bottom: calc(var(--spacing) * 2);\n  }\n  .mb-3 {\n    margin-bottom: calc(var(--spacing) * 3);\n  }\n  .mb-4 {\n    margin-bottom: calc(var(--spacing) * 4);\n  }\n  .ml-2 {\n    margin-left: calc(var(--spacing) * 2);\n  }\n  .block {\n    display: block;\n  }\n  .flex {\n    display: flex;\n  }\n  .grid {\n    display: grid;\n  }\n  .hidden {\n    display: none;\n  }\n  .inline {\n    display: inline;\n  }\n  .h-1\\/2 {\n    height: calc(1/2 * 100%);\n  }\n  .h-1\\/5 {\n    height: calc(1/5 * 100%);\n  }\n  .h-2\\/3 {\n    height: calc(2/3 * 100%);\n  }\n  .h-3\\/5 {\n    height: calc(3/5 * 100%);\n  }\n  .h-4 {\n    height: calc(var(--spacing) * 4);\n  }\n  .h-4\\/5 {\n    height: calc(4/5 * 100%);\n  }\n  .h-5 {\n    height: calc(var(--spacing) * 5);\n  }\n  .h-8 {\n    height: calc(var(--spacing) * 8);\n  }\n  .h-8\\/10 {\n    height: calc(8/10 * 100%);\n  }\n  .h-10 {\n    height: calc(var(--spacing) * 10);\n  }\n  .h-12 {\n    height: calc(var(--spacing) * 12);\n  }\n  .h-16 {\n    height: calc(var(--spacing) * 16);\n  }\n  .h-24 {\n    height: calc(var(--spacing) * 24);\n  }\n  .h-36 {\n    height: calc(var(--spacing) * 36);\n  }\n  .h-48 {\n    height: calc(var(--spacing) * 48);\n  }\n  .h-52 {\n    height: calc(var(--spacing) * 52);\n  }\n  .h-128 {\n    height: calc(var(--spacing) * 128);\n  }\n  .h-full {\n    height: 100%;\n  }\n  .h-screen {\n    height: 100vh;\n  }\n  .min-h-1\\/3 {\n    min-height: calc(1/3 * 100%);\n  }\n  .min-h-screen {\n    min-height: 100vh;\n  }\n  .w-1\\/2 {\n    width: calc(1/2 * 100%);\n  }\n  .w-1\\/3 {\n    width: calc(1/3 * 100%);\n  }\n  .w-1\\/4 {\n    width: calc(1/4 * 100%);\n  }\n  .w-2\\/3 {\n    width: calc(2/3 * 100%);\n  }\n  .w-2\\/5 {\n    width: calc(2/5 * 100%);\n  }\n  .w-3\\/4 {\n    width: calc(3/4 * 100%);\n  }\n  .w-3\\/5 {\n    width: calc(3/5 * 100%);\n  }\n  .w-4 {\n    width: calc(var(--spacing) * 4);\n  }\n  .w-4\\/5 {\n    width: calc(4/5 * 100%);\n  }\n  .w-5\\/5 {\n    width: calc(5/5 * 100%);\n  }\n  .w-8 {\n    width: calc(var(--spacing) * 8);\n  }\n  .w-10 {\n    width: calc(var(--spacing) * 10);\n  }\n  .w-12 {\n    width: calc(var(--spacing) * 12);\n  }\n  .w-18 {\n    width: calc(var(--spacing) * 18);\n  }\n  .w-36 {\n    width: calc(var(--spacing) * 36);\n  }\n  .w-48 {\n    width: calc(var(--spacing) * 48);\n  }\n  .w-60 {\n    width: calc(var(--spacing) * 60);\n  }\n  .w-80 {\n    width: calc(var(--spacing) * 80);\n  }\n  .w-128 {\n    width: calc(var(--spacing) * 128);\n  }\n  .w-full {\n    width: 100%;\n  }\n  .max-w-sm {\n    max-width: var(--container-sm);\n  }\n  .max-w-xs {\n    max-width: var(--container-xs);\n  }\n  .min-w-0 {\n    min-width: calc(var(--spacing) * 0);\n  }\n  .flex-1 {\n    flex: 1;\n  }\n  .flex-shrink-0 {\n    flex-shrink: 0;\n  }\n  .-translate-y-full {\n    --tw-translate-y: -100%;\n    translate: var(--tw-translate-x) var(--tw-translate-y);\n  }\n  .translate-y-0 {\n    --tw-translate-y: calc(var(--spacing) * 0);\n    translate: var(--tw-translate-x) var(--tw-translate-y);\n  }\n  .transform {\n    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);\n  }\n  .animate-spin {\n    animation: var(--animate-spin);\n  }\n  .cursor-default {\n    cursor: default;\n  }\n  .cursor-pointer {\n    cursor: pointer;\n  }\n  .grid-cols-5 {\n    grid-template-columns: repeat(5, minmax(0, 1fr));\n  }\n  .grid-cols-8 {\n    grid-template-columns: repeat(8, minmax(0, 1fr));\n  }\n  .grid-cols-10 {\n    grid-template-columns: repeat(10, minmax(0, 1fr));\n  }\n  .grid-rows-4 {\n    grid-template-rows: repeat(4, minmax(0, 1fr));\n  }\n  .grid-rows-5 {\n    grid-template-rows: repeat(5, minmax(0, 1fr));\n  }\n  .flex-col {\n    flex-direction: column;\n  }\n  .place-items-center {\n    place-items: center;\n  }\n  .content-center {\n    align-content: center;\n  }\n  .items-center {\n    align-items: center;\n  }\n  .justify-between {\n    justify-content: space-between;\n  }\n  .justify-center {\n    justify-content: center;\n  }\n  .gap-2 {\n    gap: calc(var(--spacing) * 2);\n  }\n  .gap-2\\.5 {\n    gap: calc(var(--spacing) * 2.5);\n  }\n  .gap-4 {\n    gap: calc(var(--spacing) * 4);\n  }\n  .gap-6 {\n    gap: calc(var(--spacing) * 6);\n  }\n  .space-y-4 {\n    :where(& > :not(:last-child)) {\n      --tw-space-y-reverse: 0;\n      margin-block-start: calc(calc(var(--spacing) * 4) * var(--tw-space-y-reverse));\n      margin-block-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-y-reverse)));\n    }\n  }\n  .space-y-8 {\n    :where(& > :not(:last-child)) {\n      --tw-space-y-reverse: 0;\n      margin-block-start: calc(calc(var(--spacing) * 8) * var(--tw-space-y-reverse));\n      margin-block-end: calc(calc(var(--spacing) * 8) * calc(1 - var(--tw-space-y-reverse)));\n    }\n  }\n  .space-x-4 {\n    :where(& > :not(:last-child)) {\n      --tw-space-x-reverse: 0;\n      margin-inline-start: calc(calc(var(--spacing) * 4) * var(--tw-space-x-reverse));\n      margin-inline-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-x-reverse)));\n    }\n  }\n  .space-x-8 {\n    :where(& > :not(:last-child)) {\n      --tw-space-x-reverse: 0;\n      margin-inline-start: calc(calc(var(--spacing) * 8) * var(--tw-space-x-reverse));\n      margin-inline-end: calc(calc(var(--spacing) * 8) * calc(1 - var(--tw-space-x-reverse)));\n    }\n  }\n  .truncate {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n  }\n  .overflow-hidden {\n    overflow: hidden;\n  }\n  .rounded {\n    border-radius: 0.25rem;\n  }\n  .rounded-2xl {\n    border-radius: var(--radius-2xl);\n  }\n  .rounded-3xl {\n    border-radius: var(--radius-3xl);\n  }\n  .rounded-\\[10px\\] {\n    border-radius: 10px;\n  }\n  .rounded-full {\n    border-radius: calc(infinity * 1px);\n  }\n  .rounded-lg {\n    border-radius: var(--radius-lg);\n  }\n  .rounded-md {\n    border-radius: var(--radius-md);\n  }\n  .rounded-xl {\n    border-radius: var(--radius-xl);\n  }\n  .rounded-l-lg {\n    border-top-left-radius: var(--radius-lg);\n    border-bottom-left-radius: var(--radius-lg);\n  }\n  .rounded-r-lg {\n    border-top-right-radius: var(--radius-lg);\n    border-bottom-right-radius: var(--radius-lg);\n  }\n  .border {\n    border-style: var(--tw-border-style);\n    border-width: 1px;\n  }\n  .border-2 {\n    border-style: var(--tw-border-style);\n    border-width: 2px;\n  }\n  .border-4 {\n    border-style: var(--tw-border-style);\n    border-width: 4px;\n  }\n  .border-blue-700 {\n    border-color: var(--color-blue-700);\n  }\n  .border-red-500 {\n    border-color: var(--color-red-500);\n  }\n  .border-white {\n    border-color: var(--color-white);\n  }\n  .bg-black {\n    background-color: var(--color-black);\n  }\n  .bg-blue-300 {\n    background-color: var(--color-blue-300);\n  }\n  .bg-blue-500 {\n    background-color: var(--color-blue-500);\n  }\n  .bg-blue-700 {\n    background-color: var(--color-blue-700);\n  }\n  .bg-cyan-500 {\n    background-color: var(--color-cyan-500);\n  }\n  .bg-emerald-500 {\n    background-color: var(--color-emerald-500);\n  }\n  .bg-gray-100 {\n    background-color: var(--color-gray-100);\n  }\n  .bg-gray-500 {\n    background-color: var(--color-gray-500);\n  }\n  .bg-gray-800 {\n    background-color: var(--color-gray-800);\n  }\n  .bg-green-100 {\n    background-color: var(--color-green-100);\n  }\n  .bg-green-500 {\n    background-color: var(--color-green-500);\n  }\n  .bg-green-700 {\n    background-color: var(--color-green-700);\n  }\n  .bg-indigo-500 {\n    background-color: var(--color-indigo-500);\n  }\n  .bg-lime-500 {\n    background-color: var(--color-lime-500);\n  }\n  .bg-orange-500 {\n    background-color: var(--color-orange-500);\n  }\n  .bg-pink-500 {\n    background-color: var(--color-pink-500);\n  }\n  .bg-purple-500 {\n    background-color: var(--color-purple-500);\n  }\n  .bg-red-500 {\n    background-color: var(--color-red-500);\n  }\n  .bg-red-700 {\n    background-color: var(--color-red-700);\n  }\n  .bg-rose-500 {\n    background-color: var(--color-rose-500);\n  }\n  .bg-sky-500 {\n    background-color: var(--color-sky-500);\n  }\n  .bg-teal-500 {\n    background-color: var(--color-teal-500);\n  }\n  .bg-violet-500 {\n    background-color: var(--color-violet-500);\n  }\n  .bg-white {\n    background-color: var(--color-white);\n  }\n  .bg-yellow-500 {\n    background-color: var(--color-yellow-500);\n  }\n  .bg-gradient-to-r {\n    --tw-gradient-position: to right in oklab;\n    background-image: linear-gradient(var(--tw-gradient-stops));\n  }\n  .bg-gradient-to-t {\n    --tw-gradient-position: to top in oklab;\n    background-image: linear-gradient(var(--tw-gradient-stops));\n  }\n  .from-black {\n    --tw-gradient-from: var(--color-black);\n    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));\n  }\n  .from-blue-500 {\n    --tw-gradient-from: var(--color-blue-500);\n    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));\n  }\n  .from-purple-900 {\n    --tw-gradient-from: var(--color-purple-900);\n    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));\n  }\n  .via-black {\n    --tw-gradient-via: var(--color-black);\n    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);\n    --tw-gradient-stops: var(--tw-gradient-via-stops);\n  }\n  .via-purple-500 {\n    --tw-gradient-via: var(--color-purple-500);\n    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);\n    --tw-gradient-stops: var(--tw-gradient-via-stops);\n  }\n  .to-blue-900 {\n    --tw-gradient-to: var(--color-blue-900);\n    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));\n  }\n  .to-gray-800 {\n    --tw-gradient-to: var(--color-gray-800);\n    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));\n  }\n  .to-pink-500 {\n    --tw-gradient-to: var(--color-pink-500);\n    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));\n  }\n  .bg-clip-text {\n    background-clip: text;\n  }\n  .fill-gray-600 {\n    fill: var(--color-gray-600);\n  }\n  .object-cover {\n    object-fit: cover;\n  }\n  .p-1 {\n    padding: calc(var(--spacing) * 1);\n  }\n  .p-2 {\n    padding: calc(var(--spacing) * 2);\n  }\n  .p-3 {\n    padding: calc(var(--spacing) * 3);\n  }\n  .p-4 {\n    padding: calc(var(--spacing) * 4);\n  }\n  .p-6 {\n    padding: calc(var(--spacing) * 6);\n  }\n  .p-7 {\n    padding: calc(var(--spacing) * 7);\n  }\n  .p-8 {\n    padding: calc(var(--spacing) * 8);\n  }\n  .p-10 {\n    padding: calc(var(--spacing) * 10);\n  }\n  .px-2 {\n    padding-inline: calc(var(--spacing) * 2);\n  }\n  .px-3 {\n    padding-inline: calc(var(--spacing) * 3);\n  }\n  .px-4 {\n    padding-inline: calc(var(--spacing) * 4);\n  }\n  .px-5 {\n    padding-inline: calc(var(--spacing) * 5);\n  }\n  .px-6 {\n    padding-inline: calc(var(--spacing) * 6);\n  }\n  .py-1 {\n    padding-block: calc(var(--spacing) * 1);\n  }\n  .py-2 {\n    padding-block: calc(var(--spacing) * 2);\n  }\n  .py-2\\.5 {\n    padding-block: calc(var(--spacing) * 2.5);\n  }\n  .py-3 {\n    padding-block: calc(var(--spacing) * 3);\n  }\n  .py-8 {\n    padding-block: calc(var(--spacing) * 8);\n  }\n  .text-center {\n    text-align: center;\n  }\n  .text-left {\n    text-align: left;\n  }\n  .font-mono {\n    font-family: var(--font-mono);\n  }\n  .text-2xl {\n    font-size: var(--text-2xl);\n    line-height: var(--tw-leading, var(--text-2xl--line-height));\n  }\n  .text-3xl {\n    font-size: var(--text-3xl);\n    line-height: var(--tw-leading, var(--text-3xl--line-height));\n  }\n  .text-4xl {\n    font-size: var(--text-4xl);\n    line-height: var(--tw-leading, var(--text-4xl--line-height));\n  }\n  .text-5xl {\n    font-size: var(--text-5xl);\n    line-height: var(--tw-leading, var(--text-5xl--line-height));\n  }\n  .text-7xl {\n    font-size: var(--text-7xl);\n    line-height: var(--tw-leading, var(--text-7xl--line-height));\n  }\n  .text-9xl {\n    font-size: var(--text-9xl);\n    line-height: var(--tw-leading, var(--text-9xl--line-height));\n  }\n  .text-base {\n    font-size: var(--text-base);\n    line-height: var(--tw-leading, var(--text-base--line-height));\n  }\n  .text-lg {\n    font-size: var(--text-lg);\n    line-height: var(--tw-leading, var(--text-lg--line-height));\n  }\n  .text-sm {\n    font-size: var(--text-sm);\n    line-height: var(--tw-leading, var(--text-sm--line-height));\n  }\n  .text-xl {\n    font-size: var(--text-xl);\n    line-height: var(--tw-leading, var(--text-xl--line-height));\n  }\n  .text-xs {\n    font-size: var(--text-xs);\n    line-height: var(--tw-leading, var(--text-xs--line-height));\n  }\n  .text-\\[25px\\] {\n    font-size: 25px;\n  }\n  .font-black {\n    --tw-font-weight: var(--font-weight-black);\n    font-weight: var(--font-weight-black);\n  }\n  .font-bold {\n    --tw-font-weight: var(--font-weight-bold);\n    font-weight: var(--font-weight-bold);\n  }\n  .font-medium {\n    --tw-font-weight: var(--font-weight-medium);\n    font-weight: var(--font-weight-medium);\n  }\n  .font-semibold {\n    --tw-font-weight: var(--font-weight-semibold);\n    font-weight: var(--font-weight-semibold);\n  }\n  .font-thin {\n    --tw-font-weight: var(--font-weight-thin);\n    font-weight: var(--font-weight-thin);\n  }\n  .text-black {\n    color: var(--color-black);\n  }\n  .text-blue-500 {\n    color: var(--color-blue-500);\n  }\n  .text-gray-200 {\n    color: var(--color-gray-200);\n  }\n  .text-gray-400 {\n    color: var(--color-gray-400);\n  }\n  .text-gray-500 {\n    color: var(--color-gray-500);\n  }\n  .text-gray-600 {\n    color: var(--color-gray-600);\n  }\n  .text-gray-700 {\n    color: var(--color-gray-700);\n  }\n  .text-gray-800 {\n    color: var(--color-gray-800);\n  }\n  .text-gray-900 {\n    color: var(--color-gray-900);\n  }\n  .text-green-500 {\n    color: var(--color-green-500);\n  }\n  .text-red-500 {\n    color: var(--color-red-500);\n  }\n  .text-red-600 {\n    color: var(--color-red-600);\n  }\n  .text-transparent {\n    color: transparent;\n  }\n  .text-white {\n    color: var(--color-white);\n  }\n  .text-yellow-400 {\n    color: var(--color-yellow-400);\n  }\n  .opacity-0 {\n    opacity: 0%;\n  }\n  .opacity-25 {\n    opacity: 25%;\n  }\n  .opacity-100 {\n    opacity: 100%;\n  }\n  .shadow-lg {\n    --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));\n    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);\n  }\n  .shadow-md {\n    --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));\n    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);\n  }\n  .outline-transparent {\n    outline-color: transparent;\n  }\n  .backdrop-brightness-25 {\n    --tw-backdrop-brightness: brightness(25%);\n    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);\n    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);\n  }\n  .transition {\n    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter;\n    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));\n    transition-duration: var(--tw-duration, var(--default-transition-duration));\n  }\n  .transition-all {\n    transition-property: all;\n    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));\n    transition-duration: var(--tw-duration, var(--default-transition-duration));\n  }\n  .transition-colors {\n    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;\n    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));\n    transition-duration: var(--tw-duration, var(--default-transition-duration));\n  }\n  .transition-transform {\n    transition-property: transform, translate, scale, rotate;\n    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));\n    transition-duration: var(--tw-duration, var(--default-transition-duration));\n  }\n  .delay-100 {\n    transition-delay: 100ms;\n  }\n  .duration-200 {\n    --tw-duration: 200ms;\n    transition-duration: 200ms;\n  }\n  .duration-300 {\n    --tw-duration: 300ms;\n    transition-duration: 300ms;\n  }\n  .duration-500 {\n    --tw-duration: 500ms;\n    transition-duration: 500ms;\n  }\n  .select-none {\n    -webkit-user-select: none;\n    user-select: none;\n  }\n  .hover\\:scale-105 {\n    &:hover {\n      @media (hover: hover) {\n        --tw-scale-x: 105%;\n        --tw-scale-y: 105%;\n        --tw-scale-z: 105%;\n        scale: var(--tw-scale-x) var(--tw-scale-y);\n      }\n    }\n  }\n  .hover\\:bg-blue-600 {\n    &:hover {\n      @media (hover: hover) {\n        background-color: var(--color-blue-600);\n      }\n    }\n  }\n  .hover\\:bg-blue-700 {\n    &:hover {\n      @media (hover: hover) {\n        background-color: var(--color-blue-700);\n      }\n    }\n  }\n  .hover\\:bg-blue-800 {\n    &:hover {\n      @media (hover: hover) {\n        background-color: var(--color-blue-800);\n      }\n    }\n  }\n  .hover\\:bg-gray-100 {\n    &:hover {\n      @media (hover: hover) {\n        background-color: var(--color-gray-100);\n      }\n    }\n  }\n  .hover\\:bg-gray-200 {\n    &:hover {\n      @media (hover: hover) {\n        background-color: var(--color-gray-200);\n      }\n    }\n  }\n  .hover\\:bg-gray-700 {\n    &:hover {\n      @media (hover: hover) {\n        background-color: var(--color-gray-700);\n      }\n    }\n  }\n  .hover\\:bg-green-600 {\n    &:hover {\n      @media (hover: hover) {\n        background-color: var(--color-green-600);\n      }\n    }\n  }\n  .hover\\:bg-red-800 {\n    &:hover {\n      @media (hover: hover) {\n        background-color: var(--color-red-800);\n      }\n    }\n  }\n  .hover\\:text-green-500 {\n    &:hover {\n      @media (hover: hover) {\n        color: var(--color-green-500);\n      }\n    }\n  }\n  .hover\\:underline {\n    &:hover {\n      @media (hover: hover) {\n        text-decoration-line: underline;\n      }\n    }\n  }\n  .focus\\:ring-2 {\n    &:focus {\n      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);\n      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);\n    }\n  }\n  .focus\\:ring-4 {\n    &:focus {\n      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(4px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);\n      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);\n    }\n  }\n  .focus\\:ring-blue-300 {\n    &:focus {\n      --tw-ring-color: var(--color-blue-300);\n    }\n  }\n  .focus\\:ring-blue-400 {\n    &:focus {\n      --tw-ring-color: var(--color-blue-400);\n    }\n  }\n  .focus\\:ring-red-300 {\n    &:focus {\n      --tw-ring-color: var(--color-red-300);\n    }\n  }\n  .focus\\:outline-none {\n    &:focus {\n      --tw-outline-style: none;\n      outline-style: none;\n    }\n  }\n  .md\\:w-1\\/2 {\n    @media (width >= 48rem) {\n      width: calc(1/2 * 100%);\n    }\n  }\n  .md\\:w-3\\/4 {\n    @media (width >= 48rem) {\n      width: calc(3/4 * 100%);\n    }\n  }\n  .md\\:flex-row {\n    @media (width >= 48rem) {\n      flex-direction: row;\n    }\n  }\n  .lg\\:w-2\\/3 {\n    @media (width >= 64rem) {\n      width: calc(2/3 * 100%);\n    }\n  }\n  .dark\\:bg-blue-600 {\n    @media (prefers-color-scheme: dark) {\n      background-color: var(--color-blue-600);\n    }\n  }\n  .dark\\:bg-red-600 {\n    @media (prefers-color-scheme: dark) {\n      background-color: var(--color-red-600);\n    }\n  }\n  .dark\\:fill-gray-300 {\n    @media (prefers-color-scheme: dark) {\n      fill: var(--color-gray-300);\n    }\n  }\n  .dark\\:text-gray-600 {\n    @media (prefers-color-scheme: dark) {\n      color: var(--color-gray-600);\n    }\n  }\n  .dark\\:hover\\:bg-blue-700 {\n    @media (prefers-color-scheme: dark) {\n      &:hover {\n        @media (hover: hover) {\n          background-color: var(--color-blue-700);\n        }\n      }\n    }\n  }\n  .dark\\:hover\\:bg-red-700 {\n    @media (prefers-color-scheme: dark) {\n      &:hover {\n        @media (hover: hover) {\n          background-color: var(--color-red-700);\n        }\n      }\n    }\n  }\n  .dark\\:focus\\:ring-blue-800 {\n    @media (prefers-color-scheme: dark) {\n      &:focus {\n        --tw-ring-color: var(--color-blue-800);\n      }\n    }\n  }\n  .dark\\:focus\\:ring-red-900 {\n    @media (prefers-color-scheme: dark) {\n      &:focus {\n        --tw-ring-color: var(--color-red-900);\n      }\n    }\n  }\n}\n@property --tw-translate-x {\n  syntax: "*";\n  inherits: false;\n  initial-value: 0;\n}\n@property --tw-translate-y {\n  syntax: "*";\n  inherits: false;\n  initial-value: 0;\n}\n@property --tw-translate-z {\n  syntax: "*";\n  inherits: false;\n  initial-value: 0;\n}\n@property --tw-rotate-x {\n  syntax: "*";\n  inherits: false;\n}\n@property --tw-rotate-y {\n  syntax: "*";\n  inherits: false;\n}\n@property --tw-rotate-z {\n  syntax: "*";\n  inherits: false;\n}\n@property --tw-skew-x {\n  syntax: "*";\n  inherits: false;\n}\n@property --tw-skew-y {\n  syntax: "*";\n  inherits: false;\n}\n@property --tw-space-y-reverse {\n  syntax: "*";\n  inherits: false;\n  initial-value: 0;\n}\n@property --tw-space-x-reverse {\n  syntax: "*";\n  inherits: false;\n  initial-value: 0;\n}\n@property --tw-border-style {\n  syntax: "*";\n  inherits: false;\n  initial-value: solid;\n}\n@property --tw-gradient-position {\n  syntax: "*";\n  inherits: false;\n}\n@property --tw-gradient-from {\n  syntax: "<color>";\n  inherits: false;\n  initial-value: #0000;\n}\n@property --tw-gradient-via {\n  syntax: "<color>";\n  inherits: false;\n  initial-value: #0000;\n}\n@property --tw-gradient-to {\n  syntax: "<color>";\n  inherits: false;\n  initial-value: #0000;\n}\n@property --tw-gradient-stops {\n  syntax: "*";\n  inherits: false;\n}\n@property --tw-gradient-via-stops {\n  syntax: "*";\n  inherits: false;\n}\n@property --tw-gradient-from-position {\n  syntax: "<length-percentage>";\n  inherits: false;\n  initial-value: 0%;\n}\n@property --tw-gradient-via-position {\n  syntax: "<length-percentage>";\n  inherits: false;\n  initial-value: 50%;\n}\n@property --tw-gradient-to-position {\n  syntax: "<length-percentage>";\n  inherits: false;\n  initial-value: 100%;\n}\n@property --tw-font-weight {\n  syntax: "*";\n  inherits: false;\n}\n@property --tw-shadow {\n  syntax: "*";\n  inherits: false;\n  initial-value: 0 0 #0000;\n}\n@property --tw-shadow-color {\n  syntax: "*";\n  inherits: false;\n}\n@property --tw-shadow-alpha {\n  syntax: "<percentage>";\n  inherits: false;\n  initial-value: 100%;\n}\n@property --tw-inset-shadow {\n  syntax: "*";\n  inherits: false;\n  initial-value: 0 0 #0000;\n}\n@property --tw-inset-shadow-color {\n  syntax: "*";\n  inherits: false;\n}\n@property --tw-inset-shadow-alpha {\n  syntax: "<percentage>";\n  inherits: false;\n  initial-value: 100%;\n}\n@property --tw-ring-color {\n  syntax: "*";\n  inherits: false;\n}\n@property --tw-ring-shadow {\n  syntax: "*";\n  inherits: false;\n  initial-value: 0 0 #0000;\n}\n@property --tw-inset-ring-color {\n  syntax: "*";\n  inherits: false;\n}\n@property --tw-inset-ring-shadow {\n  syntax: "*";\n  inherits: false;\n  initial-value: 0 0 #0000;\n}\n@property --tw-ring-inset {\n  syntax: "*";\n  inherits: false;\n}\n@property --tw-ring-offset-width {\n  syntax: "<length>";\n  inherits: false;\n  initial-value: 0px;\n}\n@property --tw-ring-offset-color {\n  syntax: "*";\n  inherits: false;\n  initial-value: #fff;\n}\n@property --tw-ring-offset-shadow {\n  syntax: "*";\n  inherits: false;\n  initial-value: 0 0 #0000;\n}\n@property --tw-backdrop-blur {\n  syntax: "*";\n  inherits: false;\n}\n@property --tw-backdrop-brightness {\n  syntax: "*";\n  inherits: false;\n}\n@property --tw-backdrop-contrast {\n  syntax: "*";\n  inherits: false;\n}\n@property --tw-backdrop-grayscale {\n  syntax: "*";\n  inherits: false;\n}\n@property --tw-backdrop-hue-rotate {\n  syntax: "*";\n  inherits: false;\n}\n@property --tw-backdrop-invert {\n  syntax: "*";\n  inherits: false;\n}\n@property --tw-backdrop-opacity {\n  syntax: "*";\n  inherits: false;\n}\n@property --tw-backdrop-saturate {\n  syntax: "*";\n  inherits: false;\n}\n@property --tw-backdrop-sepia {\n  syntax: "*";\n  inherits: false;\n}\n@property --tw-duration {\n  syntax: "*";\n  inherits: false;\n}\n@property --tw-scale-x {\n  syntax: "*";\n  inherits: false;\n  initial-value: 1;\n}\n@property --tw-scale-y {\n  syntax: "*";\n  inherits: false;\n  initial-value: 1;\n}\n@property --tw-scale-z {\n  syntax: "*";\n  inherits: false;\n  initial-value: 1;\n}\n@keyframes spin {\n  to {\n    transform: rotate(360deg);\n  }\n}\n@layer properties {\n  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {\n    *, ::before, ::after, ::backdrop {\n      --tw-translate-x: 0;\n      --tw-translate-y: 0;\n      --tw-translate-z: 0;\n      --tw-rotate-x: initial;\n      --tw-rotate-y: initial;\n      --tw-rotate-z: initial;\n      --tw-skew-x: initial;\n      --tw-skew-y: initial;\n      --tw-space-y-reverse: 0;\n      --tw-space-x-reverse: 0;\n      --tw-border-style: solid;\n      --tw-gradient-position: initial;\n      --tw-gradient-from: #0000;\n      --tw-gradient-via: #0000;\n      --tw-gradient-to: #0000;\n      --tw-gradient-stops: initial;\n      --tw-gradient-via-stops: initial;\n      --tw-gradient-from-position: 0%;\n      --tw-gradient-via-position: 50%;\n      --tw-gradient-to-position: 100%;\n      --tw-font-weight: initial;\n      --tw-shadow: 0 0 #0000;\n      --tw-shadow-color: initial;\n      --tw-shadow-alpha: 100%;\n      --tw-inset-shadow: 0 0 #0000;\n      --tw-inset-shadow-color: initial;\n      --tw-inset-shadow-alpha: 100%;\n      --tw-ring-color: initial;\n      --tw-ring-shadow: 0 0 #0000;\n      --tw-inset-ring-color: initial;\n      --tw-inset-ring-shadow: 0 0 #0000;\n      --tw-ring-inset: initial;\n      --tw-ring-offset-width: 0px;\n      --tw-ring-offset-color: #fff;\n      --tw-ring-offset-shadow: 0 0 #0000;\n      --tw-backdrop-blur: initial;\n      --tw-backdrop-brightness: initial;\n      --tw-backdrop-contrast: initial;\n      --tw-backdrop-grayscale: initial;\n      --tw-backdrop-hue-rotate: initial;\n      --tw-backdrop-invert: initial;\n      --tw-backdrop-opacity: initial;\n      --tw-backdrop-saturate: initial;\n      --tw-backdrop-sepia: initial;\n      --tw-duration: initial;\n      --tw-scale-x: 1;\n      --tw-scale-y: 1;\n      --tw-scale-z: 1;\n    }\n  }\n}\n'],sourceRoot:""}]);const s=i},1095:function(n,e,t){var r=this&&this.__createBinding||(Object.create?function(n,e,t,r){void 0===r&&(r=t);var o=Object.getOwnPropertyDescriptor(e,t);o&&!("get"in o?!e.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(n,r,o)}:function(n,e,t,r){void 0===r&&(r=t),n[r]=e[t]}),o=this&&this.__exportStar||function(n,e){for(var t in n)"default"===t||Object.prototype.hasOwnProperty.call(e,t)||r(e,n,t)};Object.defineProperty(e,"__esModule",{value:!0}),o(t(6123),e),o(t(8504),e)},1113:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},1218:function(n,e,t){var r=this&&this.__createBinding||(Object.create?function(n,e,t,r){void 0===r&&(r=t);var o=Object.getOwnPropertyDescriptor(e,t);o&&!("get"in o?!e.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(n,r,o)}:function(n,e,t,r){void 0===r&&(r=t),n[r]=e[t]}),o=this&&this.__exportStar||function(n,e){for(var t in n)"default"===t||Object.prototype.hasOwnProperty.call(e,t)||r(e,n,t)};Object.defineProperty(e,"__esModule",{value:!0}),o(t(7147),e)},1237:function(n,e,t){var r=this&&this.__createBinding||(Object.create?function(n,e,t,r){void 0===r&&(r=t);var o=Object.getOwnPropertyDescriptor(e,t);o&&!("get"in o?!e.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(n,r,o)}:function(n,e,t,r){void 0===r&&(r=t),n[r]=e[t]}),o=this&&this.__exportStar||function(n,e){for(var t in n)"default"===t||Object.prototype.hasOwnProperty.call(e,t)||r(e,n,t)};Object.defineProperty(e,"__esModule",{value:!0}),o(t(3051),e),o(t(5307),e)},1253:function(n,e,t){var r=this&&this.__awaiter||function(n,e,t,r){return new(t||(t=Promise))((function(o,a){function i(n){try{l(r.next(n))}catch(n){a(n)}}function s(n){try{l(r.throw(n))}catch(n){a(n)}}function l(n){var e;n.done?o(n.value):(e=n.value,e instanceof t?e:new t((function(n){n(e)}))).then(i,s)}l((r=r.apply(n,e||[])).next())}))},o=this&&this.__importDefault||function(n){return n&&n.__esModule?n:{default:n}};Object.defineProperty(e,"__esModule",{value:!0});const a=o(t(6425)),i="http://localhost:3000/",s=a.default.create({baseURL:i,withCredentials:!0});s.interceptors.request.use((n=>(n.headers&&(n.headers.Authorization=`Bearer ${localStorage.getItem("token")}`),n))),s.interceptors.response.use((n=>n),(n=>r(void 0,void 0,void 0,(function*(){var e;const t=n.config;if(401===n.response.status&&(null===(e=n.response.data)||void 0===e?void 0:e.requiresTwoFactor)&&n.config)return Promise.resolve({data:n.response.data,status:401});if(401===n.response.status&&n.config&&!n.config._isRetry){t._isRetry=!0;try{const n=yield a.default.get(i+"refresh",{withCredentials:!0});return localStorage.setItem("token",n.data.accessToken),s.request(t)}catch(n){console.log("user is not authorized")}}return Promise.reject(n)})))),e.default=s},1334:function(n,e,t){var r=this&&this.__awaiter||function(n,e,t,r){return new(t||(t=Promise))((function(o,a){function i(n){try{l(r.next(n))}catch(n){a(n)}}function s(n){try{l(r.throw(n))}catch(n){a(n)}}function l(n){var e;n.done?o(n.value):(e=n.value,e instanceof t?e:new t((function(n){n(e)}))).then(i,s)}l((r=r.apply(n,e||[])).next())}))};Object.defineProperty(e,"__esModule",{value:!0}),e.acceptFriend=e.deleteFriend=e.cancelFriendshipRequest=e.addFriend=void 0;const o=t(1218),a=t(807),i=t(7152);e.addFriend=(n,e)=>r(void 0,void 0,void 0,(function*(){const t=document.getElementById(`btnCancelFriendRequest${n}`);console.log(t),e.innerHTML=(0,o.getLoader)(),e.disabled=!0;const r=yield a.store.sendFriendRequest(n);return 201===r?(e.disabled=!1,e.classList.add("hidden"),t.classList.remove("hidden"),e.innerHTML="Add"):400===r&&console.log("some error occurred"),yield a.store.getPendingFriendsRequests()})),e.cancelFriendshipRequest=(n,e,t)=>r(void 0,void 0,void 0,(function*(){const r=document.getElementById(`btnAddFriend${n}`);e.innerHTML=(0,o.getLoader)(),e.disabled=!0;const i=t.filter((e=>e.addresseeId===n)).map((n=>n.id)),s=yield a.store.cancelPendingFriendRequest(i[0]);return 204===s?(e.disabled=!1,e.classList.add("hidden"),r.classList.remove("hidden"),e.innerHTML="Cancel",a.store.getPendingFriendsRequests()):400===s&&console.log("some error occurred"),yield a.store.getPendingFriendsRequests()})),e.deleteFriend=(n,e)=>r(void 0,void 0,void 0,(function*(){const t=document.querySelector("#allUsersContainer");if(204===(yield a.store.deleteFriend(n)).status){e.innerHTML='<h1 class="text-2xl text-white font-black text-center mb-4">Your Friends</h1>';const n=yield a.store.getAllFriends(),r=yield a.store.getAllUsers(),o=yield a.store.getPendingFriendsRequests(),s=yield a.store.getIncomingFriendRequest(),l=n.data,c=r;(0,i.getFriendsBlock)(l.friends,e),(0,i.getUsersBlock)(c,l,t,o,s)}})),e.acceptFriend=(n,e)=>r(void 0,void 0,void 0,(function*(){const t=document.querySelector("#friendsContainer"),r=yield a.store.acceptFriendship(n.id);if(console.log(r),200===r.status){e.innerHTML='<h1 class="text-2xl text-white font-black text-center mb-4">All Users</h1>';const n=yield a.store.getAllFriends(),r=yield a.store.getAllUsers(),o=yield a.store.getPendingFriendsRequests(),s=yield a.store.getIncomingFriendRequest(),l=n.data,c=r;(0,i.getFriendsBlock)(l.friends,t),(0,i.getUsersBlock)(c,l,e,o,s)}}))},1354:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */");return[e].concat([a]).join("\n")}return[e].join("\n")}},1361:function(n,e,t){var r=this&&this.__createBinding||(Object.create?function(n,e,t,r){void 0===r&&(r=t);var o=Object.getOwnPropertyDescriptor(e,t);o&&!("get"in o?!e.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(n,r,o)}:function(n,e,t,r){void 0===r&&(r=t),n[r]=e[t]}),o=this&&this.__exportStar||function(n,e){for(var t in n)"default"===t||Object.prototype.hasOwnProperty.call(e,t)||r(e,n,t)};Object.defineProperty(e,"__esModule",{value:!0}),o(t(9032),e)},1375:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.homePage=function(){return document.body.classList.add("h-screen","flex","flex-col","bg-gradient-to-t","from-black","via-black","to-gray-800","overflow-hidden"),`\n        \t${(0,o.navigation)()}\n        \t<div class="container mx-auto p-6 mt-24">\n        \t    <div class="flex flex-col md:flex-row items-center justify-between bg-white p-8 rounded-2xl shadow-lg">\n        \t        <div class="md:w-1/2 select-none p-6">\n        \t            <h1 class="text-4xl font-bold bg-gradient-to-r from-blue-500 via-purple-500 to-pink-500 text-transparent bg-clip-text">FT_TRANSCENDENSCE</h1>\n        \t            <p class="mt-4 text-gray-600 text-lg">\n        \t                Transcendence is a 42 school project, to learn about web developpement and SPA.<br>\n\t\t\t\t\t\t\tThe goal is to create a web app to play Pong, and socialize with other users.<br><br>\n        \t            </p>\n\t\t\t\t\t\t<p class"mt-4 text-gray-900 text-lg">Developed by novsiann, kilchenk and ikhristi </p>\n        \t        </div>\n\n        \t        <div class="md:w-1/2 flex justify-center p-6">\n        \t            <img src="../img/ping-pong.png" draggable="false" alt="Rocket for ping pong" class="w-128 h-128 object-cover rounded-xl shadow-md">\n        \t        </div>\n        \t    </div>\n        \t</div> \n\t\t\t${(0,r.getModalWindowSuccess)()}`};const r=t(1237),o=t(2135)},1511:function(n,e,t){var r=this&&this.__createBinding||(Object.create?function(n,e,t,r){void 0===r&&(r=t);var o=Object.getOwnPropertyDescriptor(e,t);o&&!("get"in o?!e.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(n,r,o)}:function(n,e,t,r){void 0===r&&(r=t),n[r]=e[t]}),o=this&&this.__exportStar||function(n,e){for(var t in n)"default"===t||Object.prototype.hasOwnProperty.call(e,t)||r(e,n,t)};Object.defineProperty(e,"__esModule",{value:!0}),o(t(4636),e)},1794:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0})},1829:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.handleModalError=void 0,e.handleModalError=n=>{const e=document.querySelector("#modalWindow"),t=null==e?void 0:e.querySelector("div"),r=document.querySelector("#closeModal"),o=document.querySelector("#modalErrorText");n&&o&&(o.textContent=n),null==e||e.classList.remove("hidden"),setTimeout((()=>{null==t||t.classList.remove("-translate-y-full","opacity-0"),null==t||t.classList.add("translate-y-0","opacity-100")}),50),null==r||r.addEventListener("click",(()=>{null==t||t.classList.remove("translate-y-0","opacity-100"),null==t||t.classList.add("-translate-y-full","opacity-0"),setTimeout((()=>{null==e||e.classList.add("hidden")}),400)})),null==e||e.addEventListener("click",(n=>{n.target===e&&(null==t||t.classList.remove("translate-y-0","opacity-100"),null==t||t.classList.add("-translate-y-full","opacity-0"),setTimeout((()=>{null==e||e.classList.add("hidden")}),400))}))}},1877:function(n,e,t){var r=this&&this.__createBinding||(Object.create?function(n,e,t,r){void 0===r&&(r=t);var o=Object.getOwnPropertyDescriptor(e,t);o&&!("get"in o?!e.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(n,r,o)}:function(n,e,t,r){void 0===r&&(r=t),n[r]=e[t]}),o=this&&this.__exportStar||function(n,e){for(var t in n)"default"===t||Object.prototype.hasOwnProperty.call(e,t)||r(e,n,t)};Object.defineProperty(e,"__esModule",{value:!0}),o(t(7312),e)},1936:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.errorPage=function(){return document.body.classList.add("bg-gradient-to-t","from-black","via-black","to-gray-800"),`\n\t\t\t${(0,r.navigation)()}\n\t\t\t<div class="flex flex-col items-center justify-center min-h-screen">\n\t\t\t\t<h1 class="text-9xl text-white font-black"> Error 404 </h1>\n\t\t\t\t<h1 class="text-7xl py-3 text-white" font-medium> This page was not found </h1>\n\t\t\t</div>`};const r=t(2135)},2135:function(n,e,t){var r=this&&this.__createBinding||(Object.create?function(n,e,t,r){void 0===r&&(r=t);var o=Object.getOwnPropertyDescriptor(e,t);o&&!("get"in o?!e.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(n,r,o)}:function(n,e,t,r){void 0===r&&(r=t),n[r]=e[t]}),o=this&&this.__exportStar||function(n,e){for(var t in n)"default"===t||Object.prototype.hasOwnProperty.call(e,t)||r(e,n,t)};Object.defineProperty(e,"__esModule",{value:!0}),o(t(2897),e),o(t(693),e)},2468:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.default=s;const r=t(7624),o=t(5941),a=t(807),i=n=>{if("/"===n)return{route:"/",params:{}};const e=n.split("/").filter(Boolean);if(`/${e[0]}`in o.allRoutes){if(1===e.length)return{route:`/${e[0]}`,params:{}};if(2===e.length&&/^\d+$/.test(e[1]))return{route:"/profile",params:{id:e[1]}}}return null};function s(){document.body.append(r.mainWrapper);const n=i(location.pathname);if(n){const{route:e,params:t}=n;console.log(a.store.getState()),console.log(e),console.log(t),r.mainWrapper.removeAttribute("id"),r.mainWrapper.className="h-full w-full",document.body.className="font-mono",a.store.getAuth()&&Object.keys(o.privateRoutes).includes(e)?(r.mainWrapper.innerHTML=o.privateRoutes[e].layoutCreate(r.mainWrapper,t),o.privateRoutes[e].handleFunc(r.mainWrapper,t)):!a.store.getAuth()&&Object.keys(o.publicRoutes).includes(e)?(r.mainWrapper.innerHTML=o.publicRoutes[e].layoutCreate(r.mainWrapper,t),o.publicRoutes[e].handleFunc(r.mainWrapper,t)):(0,o.navigateTo)("/")}else(0,o.navigateTo)("/error")}window.addEventListener("popstate",(()=>{s()}))},2479:function(n,e,t){var r=this&&this.__awaiter||function(n,e,t,r){return new(t||(t=Promise))((function(o,a){function i(n){try{l(r.next(n))}catch(n){a(n)}}function s(n){try{l(r.throw(n))}catch(n){a(n)}}function l(n){var e;n.done?o(n.value):(e=n.value,e instanceof t?e:new t((function(n){n(e)}))).then(i,s)}l((r=r.apply(n,e||[])).next())}))},o=this&&this.__importDefault||function(n){return n&&n.__esModule?n:{default:n}};Object.defineProperty(e,"__esModule",{value:!0});const a=o(t(1253)),i={login:(n,e)=>r(void 0,void 0,void 0,(function*(){return yield a.default.post("login",{email:n,password:e})})),registration:(n,e,t)=>r(void 0,void 0,void 0,(function*(){return yield a.default.post("registration",{username:n,email:e,password:t})})),logout:()=>r(void 0,void 0,void 0,(function*(){return yield a.default.post("logout")})),enableTwoFactor:()=>r(void 0,void 0,void 0,(function*(){return yield a.default.post("2fa/enable")})),verifyTwoFactor:n=>r(void 0,void 0,void 0,(function*(){return yield a.default.post("2fa/verify",{token:n})})),disableTwoFactor:n=>r(void 0,void 0,void 0,(function*(){return yield a.default.post("2fa/disable",{token:n})})),loginWithTwoFactor:(n,e)=>r(void 0,void 0,void 0,(function*(){return yield a.default.post("2fa/login",{token:n,userId:e})}))};e.default=i},2674:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.getUserData=void 0;const r=t(807),o=t(5941),a=t(807),i=t(145);e.getUserData=n=>{const e=document.querySelector("#userNameProfile"),t=document.querySelector("#profileImg"),s=document.querySelector("#profileImgEmpty");if(n===a.store.getUser().id){const n=a.store.getUser().username,o=n.charAt(0).toUpperCase(),l=(0,i.getColorFromUsername)(n),c=Boolean(a.store.getUser().avatar);return e.textContent=n,void(c?(null==s||s.classList.toggle("hidden",c),null==t||t.classList.toggle("hidden",!c),t.src=r.API_URL+a.store.getUser().avatar):(null==s||s.classList.toggle("hidden",c),null==t||t.classList.toggle("hidden",!c),null==s||s.classList.add(l),s.innerHTML=`<p>${o}</p>`))}a.store.getAllUsers().some((o=>{if(o.id==n){const n=o.username.charAt(0).toUpperCase(),a=(0,i.getColorFromUsername)(o.username),l=Boolean(o.avatar);return o.username?e.textContent=o.username:e.textContent="Username",l?(t.src=r.API_URL+o.avatar,null==s||s.classList.toggle("hidden",l),null==t||t.classList.toggle("hidden",!l)):(null==s||s.classList.toggle("hidden",l),null==t||t.classList.toggle("hidden",!l),null==s||s.classList.add(a),s.innerHTML=`<p>${n}</p>`),!0}return!1}))||(0,o.navigateTo)("/error")}},2750:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.handlePlayPage=function(){(0,r.navigationHandle)(),document.getElementById("btn-play").addEventListener("click",(n=>{n.preventDefault(),(0,o.routeToGame)()}))};const r=t(2135),o=t(5941)},2897:function(n,e,t){var r=this&&this.__awaiter||function(n,e,t,r){return new(t||(t=Promise))((function(o,a){function i(n){try{l(r.next(n))}catch(n){a(n)}}function s(n){try{l(r.throw(n))}catch(n){a(n)}}function l(n){var e;n.done?o(n.value):(e=n.value,e instanceof t?e:new t((function(n){n(e)}))).then(i,s)}l((r=r.apply(n,e||[])).next())}))};Object.defineProperty(e,"__esModule",{value:!0}),e.navigationHandle=function(){const n=document.querySelectorAll("#naviBtn"),e=document.querySelector("#profileIcon"),t=document.querySelector("#signInBtn"),c=document.querySelector("#registBtn"),d=document.querySelector("#dropdownMenu"),A=document.querySelectorAll("#dropdownMenu a"),u=document.getElementById("imgLogoNavi"),g=document.getElementById("logoutBtn");u.addEventListener("click",(()=>{(0,a.navigateTo)("/")})),null==t||t.addEventListener("click",(()=>{(0,a.navigateTo)("/signIn")})),null==c||c.addEventListener("click",(()=>{(0,a.navigateTo)("/signUp")})),null==g||g.addEventListener("click",(()=>r(this,void 0,void 0,(function*(){g.innerHTML="Logout "+(0,o.getLoader)(),200===(yield i.store.logout()).status&&(console.log("here"),g.innerHTML="Logout ",(0,a.navigateTo)("/signIn"))})))),n.forEach((n=>{n.addEventListener("click",(()=>{n.innerHTML.trim()in s.naviRoutes&&(0,a.navigateTo)(s.naviRoutes[n.innerHTML.trim()])}))})),A.forEach((n=>{n.addEventListener("click",(()=>{n.innerHTML.trim()in l.dropMenuRoutes&&(0,a.navigateTo)(l.dropMenuRoutes[n.innerHTML.trim()])}))})),null==e||e.addEventListener("click",(()=>{d.classList.toggle("hidden")})),document.addEventListener("click",(n=>{n.target!==d&&n.target!==e&&n.target!==g&&(null==d||d.classList.add("hidden"))})),document.addEventListener("keydown",(n=>{27==n.keyCode&&d.classList.add("hidden")}))};const o=t(7147),a=t(5941),i=t(807),s=t(8819),l=t(8819)},2926:function(n,e,t){var r=this&&this.__createBinding||(Object.create?function(n,e,t,r){void 0===r&&(r=t);var o=Object.getOwnPropertyDescriptor(e,t);o&&!("get"in o?!e.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(n,r,o)}:function(n,e,t,r){void 0===r&&(r=t),n[r]=e[t]}),o=this&&this.__exportStar||function(n,e){for(var t in n)"default"===t||Object.prototype.hasOwnProperty.call(e,t)||r(e,n,t)};Object.defineProperty(e,"__esModule",{value:!0}),o(t(6258),e)},3051:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.handleModalSuccess=void 0,e.handleModalSuccess=n=>{const e=document.querySelector("#modalWindow"),t=null==e?void 0:e.querySelector("div"),r=document.querySelector("#successMessage");n&&(r.textContent=n),null==e||e.classList.remove("hidden"),setTimeout((()=>{null==t||t.classList.remove("-translate-y-full","opacity-0"),null==t||t.classList.add("translate-y-0","opacity-100")}),50),setTimeout((()=>{o()}),1500);const o=()=>{null==t||t.classList.remove("translate-y-0","opacity-100"),null==t||t.classList.add("-translate-y-full","opacity-0"),setTimeout((()=>{null==e||e.classList.add("hidden")}),400)}}},3178:function(n,e,t){var r=this&&this.__createBinding||(Object.create?function(n,e,t,r){void 0===r&&(r=t);var o=Object.getOwnPropertyDescriptor(e,t);o&&!("get"in o?!e.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(n,r,o)}:function(n,e,t,r){void 0===r&&(r=t),n[r]=e[t]}),o=this&&this.__exportStar||function(n,e){for(var t in n)"default"===t||Object.prototype.hasOwnProperty.call(e,t)||r(e,n,t)};Object.defineProperty(e,"__esModule",{value:!0}),o(t(7490),e),o(t(852),e)},3180:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.filterLeaderBoard=void 0,e.handleLeaderboardPage=function(){(0,r.navigationHandle)()};const r=t(2135);e.filterLeaderBoard=n=>n.sort(((n,e)=>e.totalPoints-n.totalPoints)).slice(0,8)},3438:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.handleErrorPage=function(){(0,r.navigationHandle)()};const r=t(2135)},3595:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.getModalWindowError=void 0,e.getModalWindowError=()=>'<div id="modalWindow" class="fixed inset-0 hidden flex justify-center bg-black bg-opacity-50 z-[9999] transition-all duration-500">\n                <div class="flex mt-12 flex-col justify-center items-center bg-white w-80 h-52 text-white p-6 rounded-lg shadow-lg opacity-0 transform -translate-y-full transition-all duration-500">\n                    <div class="flex justify-center mb-4">\n                        <svg class="w-10 h-10 text-red-500" xmlns="http://www.w3.org/2000/svg" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24" stroke-linecap="round" stroke-linejoin="round">\n                            <path d="M12 8v4m0 4h.01M12 2a10 10 0 1010 10A10 10 0 0012 2z" />\n                        </svg>\n                    </div>\n                    <p class="text-black text-center text-sm font-semibold" id="modalErrorText"></p>\n                    <button id="closeModal" class=" m-2 w-1/2 bg-green-100 text-black p-1 rounded cursor-pointer\n                    outline-transparent" > OK </button>\n                </div>\n            </div>'},4020:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.playPage=function(){return`\n                ${(0,r.navigation)()}\n                <div class="flex flex-col items-center justify-center min-h-screen bg-gradient-to-t from-black via-black to-gray-800 space-y-8">\n                    <button class="px-6 py-3 text-white bg-blue-500 rounded-lg text-xl hover:bg-blue-700 focus:outline-none" id="btn-play">\n                        START\n                    </button>\n                </div>`};const r=t(2135)},4118:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.routeToGame=function(){(0,r.navigateTo)("/game")};const r=t(5941)},4326:function(n,e,t){var r=this&&this.__createBinding||(Object.create?function(n,e,t,r){void 0===r&&(r=t);var o=Object.getOwnPropertyDescriptor(e,t);o&&!("get"in o?!e.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(n,r,o)}:function(n,e,t,r){void 0===r&&(r=t),n[r]=e[t]}),o=this&&this.__exportStar||function(n,e){for(var t in n)"default"===t||Object.prototype.hasOwnProperty.call(e,t)||r(e,n,t)};Object.defineProperty(e,"__esModule",{value:!0}),o(t(5867),e)},4636:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.handleHomePage=function(n){(0,r.navigationHandle)()};const r=t(2135)},4817:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0})},4847:function(n,e,t){var r=this&&this.__createBinding||(Object.create?function(n,e,t,r){void 0===r&&(r=t);var o=Object.getOwnPropertyDescriptor(e,t);o&&!("get"in o?!e.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(n,r,o)}:function(n,e,t,r){void 0===r&&(r=t),n[r]=e[t]}),o=this&&this.__exportStar||function(n,e){for(var t in n)"default"===t||Object.prototype.hasOwnProperty.call(e,t)||r(e,n,t)};Object.defineProperty(e,"__esModule",{value:!0}),o(t(3180),e)},5056:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},5072:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var a={},i=[],s=0;s<n.length;s++){var l=n[s],c=r.base?l[0]+r.base:l[0],d=a[c]||0,A="".concat(c," ").concat(d);a[c]=d+1;var u=t(A),g={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==u)e[u].references++,e[u].updater(g);else{var p=o(g,r);r.byIndex=s,e.splice(s,0,{identifier:A,updater:p,references:1})}i.push(A)}return i}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var a=r(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var s=t(a[i]);e[s].references--}for(var l=r(n,o),c=0;c<a.length;c++){var d=t(a[c]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}a=l}}},5076:function(n,e,t){var r=this&&this.__awaiter||function(n,e,t,r){return new(t||(t=Promise))((function(o,a){function i(n){try{l(r.next(n))}catch(n){a(n)}}function s(n){try{l(r.throw(n))}catch(n){a(n)}}function l(n){var e;n.done?o(n.value):(e=n.value,e instanceof t?e:new t((function(n){n(e)}))).then(i,s)}l((r=r.apply(n,e||[])).next())}))},o=this&&this.__importDefault||function(n){return n&&n.__esModule?n:{default:n}};Object.defineProperty(e,"__esModule",{value:!0});const a=o(t(1253)),i={getFriends:()=>r(void 0,void 0,void 0,(function*(){return yield a.default.get("friendship")})),sendFriendRequest:n=>r(void 0,void 0,void 0,(function*(){return yield a.default.post("friendship",{addresseeId:n})})),getPendingFriendsRequests:()=>r(void 0,void 0,void 0,(function*(){return yield a.default.get("friendship/sent-pending")})),cancelPendingFriendRequest:n=>r(void 0,void 0,void 0,(function*(){return yield a.default.delete(`friendship/outgoing/${n}`)})),deleteFriend:n=>r(void 0,void 0,void 0,(function*(){return yield a.default.delete(`friendship/${n}`)})),getIncomingFriendRequest:()=>r(void 0,void 0,void 0,(function*(){return yield a.default.get("friendship/incoming")})),acceptFriendship:n=>r(void 0,void 0,void 0,(function*(){return yield a.default.put(`friendship/${n}/accept`)}))};e.default=i},5245:function(n,e,t){var r=this&&this.__awaiter||function(n,e,t,r){return new(t||(t=Promise))((function(o,a){function i(n){try{l(r.next(n))}catch(n){a(n)}}function s(n){try{l(r.throw(n))}catch(n){a(n)}}function l(n){var e;n.done?o(n.value):(e=n.value,e instanceof t?e:new t((function(n){n(e)}))).then(i,s)}l((r=r.apply(n,e||[])).next())}))};Object.defineProperty(e,"__esModule",{value:!0}),e.handleLogin=function(){(0,a.navigationHandle)();const n=document.getElementById("loginInput"),e=document.getElementById("loginPass"),t=document.getElementById("loginBtn"),c=[n,e];c.forEach((n=>{n.addEventListener("click",(()=>{(0,l.hideWarning)("#warningMessage")}))})),t.addEventListener("click",(n=>r(this,void 0,void 0,(function*(){n.preventDefault();try{c.forEach((n=>{const e=n.type.toLowerCase();"email"===n.type?i.userDataLogin[e]=n.value.toLowerCase():i.userDataLogin[e]=n.value})),t.innerHTML=(0,o.getLoader)();const n=yield s.store.login(i.userDataLogin.email,i.userDataLogin.password);t.innerHTML="Login",console.log(n)}catch(n){(0,l.activateWarning)("#warningMessage","Incorrect email or password"),t.innerHTML="Login"}}))))};const o=t(1218),a=t(2135),i=t(6600),s=t(807),l=t(7851)},5307:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.getModalWindowSuccess=void 0,e.getModalWindowSuccess=()=>'<div id="modalWindow" class="fixed inset-0 hidden flex justify-center transition-all duration-500">\n              <div class="flex mt-12 flex-col justify-center items-center bg-white w-60 h-24 text-white p-6 rounded-lg shadow-lg opacity-0 transform -translate-y-full transition-all duration-500">\n                  <div class="flex justify-center mt-4">\n                      <svg class="w-8 h-8 text-green-500" xmlns="http://www.w3.org/2000/svg" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24" stroke-linecap="round" stroke-linejoin="round">\n                          <path d="M20 6L9 17l-5-5" />\n                      </svg>\n                  </div>\n                  <p class="text-black text-center text-xs font-semibold mb-4" id="successMessage"></p>\n              </div>\n          </div>'},5385:function(n,e,t){var r=this&&this.__createBinding||(Object.create?function(n,e,t,r){void 0===r&&(r=t);var o=Object.getOwnPropertyDescriptor(e,t);o&&!("get"in o?!e.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(n,r,o)}:function(n,e,t,r){void 0===r&&(r=t),n[r]=e[t]}),o=this&&this.__exportStar||function(n,e){for(var t in n)"default"===t||Object.prototype.hasOwnProperty.call(e,t)||r(e,n,t)};Object.defineProperty(e,"__esModule",{value:!0}),o(t(5245),e)},5418:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.userDataLogin=e.userDataRegistration=void 0,e.userDataRegistration={username:null,email:null,password:null},e.userDataLogin={email:null,password:null}},5723:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.allRoutes=e.publicRoutes=e.privateRoutes=void 0;const r=t(137),o=t(2926),a=t(1877),i=t(5385),s=t(1511),l=t(1361),c=t(3178),d=t(9825),A=t(4847),u=t(6321),g=t(9710),p=t(1936),h=t(8721),C=t(1375),f=t(7359),v=t(7851),w=t(9547),m=t(4020),b=t(7539),y=t(9737),E=t(9615);e.privateRoutes={"/":{layoutCreate:C.homePage,handleFunc:s.handleHomePage},"/play":{layoutCreate:m.playPage,handleFunc:r.handlePlayPage},"/game":{layoutCreate:h.gamePage,handleFunc:o.handleGame},"/profile":{layoutCreate:w.profilePage,handleFunc:l.handleProfilePage},"/settings":{layoutCreate:c.settingsPage,handleFunc:c.handleSettings},"/error":{layoutCreate:p.errorPage,handleFunc:d.handleErrorPage},"/leaderboard":{layoutCreate:f.leaderBoardPage,handleFunc:A.handleLeaderboardPage},"/friends":{layoutCreate:E.friendsPage,handleFunc:y.handleFriendsPage}},e.publicRoutes={"/":{layoutCreate:C.homePage,handleFunc:s.handleHomePage},"/signUp":{layoutCreate:b.registrationPage,handleFunc:a.handleRegistration},"/signIn":{layoutCreate:v.loginPage,handleFunc:i.handleLogin},"/error":{layoutCreate:p.errorPage,handleFunc:d.handleErrorPage},"/activate":{layoutCreate:g.activateAccountPage,handleFunc:u.handleActivateAccount}},e.allRoutes={"/":{layoutCreate:C.homePage,handleFunc:s.handleHomePage},"/play":{layoutCreate:m.playPage,handleFunc:r.handlePlayPage},"/game":{layoutCreate:h.gamePage,handleFunc:o.handleGame},"/profile":{layoutCreate:w.profilePage,handleFunc:l.handleProfilePage},"/signUp":{layoutCreate:b.registrationPage,handleFunc:a.handleRegistration},"/signIn":{layoutCreate:v.loginPage,handleFunc:i.handleLogin},"/settings":{layoutCreate:c.settingsPage,handleFunc:c.handleSettings},"/error":{layoutCreate:p.errorPage,handleFunc:d.handleErrorPage},"/leaderboard":{layoutCreate:f.leaderBoardPage,handleFunc:A.handleLeaderboardPage},"/activate":{layoutCreate:g.activateAccountPage,handleFunc:u.handleActivateAccount},"/friends":{layoutCreate:E.friendsPage,handleFunc:y.handleFriendsPage}}},5859:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.mainWrapper=void 0,e.mainWrapper=document.createElement("div")},5867:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.validateInput=void 0,e.validateInput=n=>{if(!n.value)throw n.className="w-full p-2 border rounded border-red-500",new Error("One of your inputs is empty!");switch(n.type){case"text":(n=>{const{value:e,placeholder:t}=n;if(!/^[a-zA-Zа-яА-Я0-9]([a-zA-Zа-яА-Я0-9_-]{1,14})[a-zA-Zа-яА-Я0-9]$/.test(e))throw n.className="w-full p-2 border rounded border-red-500",new Error(`Your ${t} must be 3-16 chars long, use letters, numbers, "_" or "-".`)})(n);break;case"email":(n=>{const{value:e,type:t}=n;if(!/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/.test(e))throw n.className="w-full p-2 border rounded border-red-500",new Error(`Invalid ${t}.\nEnter a valid email address.`)})(n);break;case"password":(n=>{const{value:e,placeholder:t}=n;if(!/^(?=.*[A-Z])(?=.*[a-z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$/.test(e))throw n.className="w-full p-2 border rounded border-red-500",new Error(`Your ${t} must have 8+ chars, 1 uppercase, 1 lowercase, 1 number, no spaces and 1 special char.`)})(n);break;default:return}}},5941:function(n,e,t){var r=this&&this.__createBinding||(Object.create?function(n,e,t,r){void 0===r&&(r=t);var o=Object.getOwnPropertyDescriptor(e,t);o&&!("get"in o?!e.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(n,r,o)}:function(n,e,t,r){void 0===r&&(r=t),n[r]=e[t]}),o=this&&this.__exportStar||function(n,e){for(var t in n)"default"===t||Object.prototype.hasOwnProperty.call(e,t)||r(e,n,t)};Object.defineProperty(e,"__esModule",{value:!0}),o(t(5723),e),o(t(4118),e),o(t(6019),e)},6019:function(n,e,t){var r=this&&this.__importDefault||function(n){return n&&n.__esModule?n:{default:n}};Object.defineProperty(e,"__esModule",{value:!0}),e.navigateTo=function(n){n!==location.pathname&&(history.pushState({},"",n),(0,o.default)())};const o=r(t(2468))},6061:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.handleActivateAccount=function(){}},6123:function(n,e,t){var r=this&&this.__awaiter||function(n,e,t,r){return new(t||(t=Promise))((function(o,a){function i(n){try{l(r.next(n))}catch(n){a(n)}}function s(n){try{l(r.throw(n))}catch(n){a(n)}}function l(n){var e;n.done?o(n.value):(e=n.value,e instanceof t?e:new t((function(n){n(e)}))).then(i,s)}l((r=r.apply(n,e||[])).next())}))};Object.defineProperty(e,"__esModule",{value:!0}),e.handleModalTwoFactor=void 0;const o=t(7851),a=t(807),i=t(1218),s=t(1237);e.handleModalTwoFactor=n=>r(void 0,void 0,void 0,(function*(){const e=document.querySelector("#modalWindowTwoFactor"),t=null==e?void 0:e.querySelector("div"),l=null==e?void 0:e.querySelector("#modalQrCode"),c=null==e?void 0:e.querySelector("#secretPhrase"),d=null==e?void 0:e.querySelector("#codeForTwoFactor"),A=null==e?void 0:e.querySelector("#modalTwoFactorActivateBtn"),u=yield a.store.enableTwoFactor(),g=null==u?void 0:u.secret;l.src=(null==u?void 0:u.qrCodeUrl)?null==u?void 0:u.qrCodeUrl:"undefined",c.textContent=g||"Loading error...",null==e||e.classList.remove("hidden"),setTimeout((()=>{null==t||t.classList.remove("-translate-y-full","opacity-0"),null==t||t.classList.add("translate-y-0","opacity-100")}),50),null==d||d.addEventListener("click",(()=>(0,o.hideWarning)("#warningMessage"))),null==A||A.addEventListener("click",(()=>r(void 0,void 0,void 0,(function*(){(0,o.hideWarning)("#warningMessage"),A.innerHTML=(0,i.getLoader)();const r=yield a.store.verifyTwoFactor((null==d?void 0:d.value)?d.value:"");200===r.status?(null==t||t.classList.remove("translate-y-0","opacity-100"),null==t||t.classList.add("-translate-y-full","opacity-0"),setTimeout((()=>{null==e||e.classList.add("hidden")}),400),(0,s.handleModalSuccess)("2FA added successfull"),n&&n(!0)):400===r.status&&((0,o.activateWarning)("#warningMessage",r.data.message),A.innerHTML="Send")})))),null==e||e.addEventListener("click",(n=>{n.target===e&&((0,o.hideWarning)("#warningMessage"),null==t||t.classList.remove("translate-y-0","opacity-100"),null==t||t.classList.add("-translate-y-full","opacity-0"),setTimeout((()=>{null==e||e.classList.add("hidden")}),400))}))}))},6258:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.handleGame=function(n){(0,r.navigationHandle)();const e=document.querySelector("#score-info"),t=document.getElementById("game-board"),o=document.querySelector("#restart-btn");let a;n.id="game-container",n.classList.add("h-screen","flex","flex-col","gap-2.5","justify-center","items-center");const i=null==t?void 0:t.getContext("2d"),s=window.getComputedStyle(t).backgroundColor,l=t.width,c=t.height,d="w",A="s",u="ArrowUp",g="ArrowDown",p=25,h=120,C=13;let f=5,v=0,w=0;const m={x:l-p,y:c-h};let b=Object.assign({},{x:0,y:0}),y=Object.assign({},m);const E={x:l/2,y:c/2};let x=Object.assign({},E);const B={x:0,y:0};function k(n,e,t){i.fillStyle=t,i.fillRect(n,e,p,h)}function I(){i.beginPath(),i.fillStyle="white",i.arc(x.x,x.y,C,0,2*Math.PI),i.fill()}function _(){return Math.random()<.5}function j(){_()?B.x=1:B.x=-1,_()?B.y=1:B.y=-1}function M(){x.x+=f*B.x,x.y+=f*B.y,function(){const n=x.y<=C,e=x.y>=c-C;(n||e)&&(B.y*=-1)}(),function(){const n=function(){const n=x.x<=b.x+C+p,e=x.y>=b.y&&x.y<=b.y+h;return n&&e}(),e=function(){const n=x.x>=y.x-C,e=x.y>=y.y&&x.y<=y.y+h;return n&&e}();(n||e)&&(f*=1.07,B.x*=-1,n?x.x=b.x+p+C:e&&(x.x=y.x-C))}(),function(){const n=x.x>l,e=x.x<0;(n||e)&&(n&&v++,e&&w++,O(),x=Object.assign({},E),j(),I(),f=5)}()}function O(){e.textContent=`${v} : ${w}`}function P(n){const e=n.key===d,r=n.key===A,o=n.key===u,a=n.key===g,i=b.y>0,s=b.y<t.height-h,l=y.y>0,c=y.y<t.height-h;e&&i?b.y-=40:r&&s?b.y+=40:o&&l?y.y-=40:a&&c&&(y.y+=40)}function F(){i.fillStyle=s,i.fillRect(0,0,l,c),k(b.x,b.y,"white"),k(y.x,y.y,"white"),M(),I()}function S(){v=0,w=0,clearInterval(a),f=5,x=Object.assign({},E),b=Object.assign({},b),y=Object.assign({},y),L()}function L(){O(),j(),window.addEventListener("keydown",P),a=setInterval(F,20),o.addEventListener("click",S)}L()};const r=t(2135)},6314:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(r)for(var s=0;s<this.length;s++){var l=this[s][0];null!=l&&(i[l]=!0)}for(var c=0;c<n.length;c++){var d=[].concat(n[c]);r&&i[d[0]]||(void 0!==a&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=a),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),e.push(d))}},e}},6321:function(n,e,t){var r=this&&this.__createBinding||(Object.create?function(n,e,t,r){void 0===r&&(r=t);var o=Object.getOwnPropertyDescriptor(e,t);o&&!("get"in o?!e.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(n,r,o)}:function(n,e,t,r){void 0===r&&(r=t),n[r]=e[t]}),o=this&&this.__exportStar||function(n,e){for(var t in n)"default"===t||Object.prototype.hasOwnProperty.call(e,t)||r(e,n,t)};Object.defineProperty(e,"__esModule",{value:!0}),o(t(6061),e)},6425:(n,e,t)=>{function r(n,e){return function(){return n.apply(e,arguments)}}const{toString:o}=Object.prototype,{getPrototypeOf:a}=Object,i=(s=Object.create(null),n=>{const e=o.call(n);return s[e]||(s[e]=e.slice(8,-1).toLowerCase())});var s;const l=n=>(n=n.toLowerCase(),e=>i(e)===n),c=n=>e=>typeof e===n,{isArray:d}=Array,A=c("undefined"),u=l("ArrayBuffer"),g=c("string"),p=c("function"),h=c("number"),C=n=>null!==n&&"object"==typeof n,f=n=>{if("object"!==i(n))return!1;const e=a(n);return!(null!==e&&e!==Object.prototype&&null!==Object.getPrototypeOf(e)||Symbol.toStringTag in n||Symbol.iterator in n)},v=l("Date"),w=l("File"),m=l("Blob"),b=l("FileList"),y=l("URLSearchParams"),[E,x,B,k]=["ReadableStream","Request","Response","Headers"].map(l);function I(n,e,{allOwnKeys:t=!1}={}){if(null==n)return;let r,o;if("object"!=typeof n&&(n=[n]),d(n))for(r=0,o=n.length;r<o;r++)e.call(null,n[r],r,n);else{const o=t?Object.getOwnPropertyNames(n):Object.keys(n),a=o.length;let i;for(r=0;r<a;r++)i=o[r],e.call(null,n[i],i,n)}}function _(n,e){e=e.toLowerCase();const t=Object.keys(n);let r,o=t.length;for(;o-- >0;)if(r=t[o],e===r.toLowerCase())return r;return null}const j="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:t.g,M=n=>!A(n)&&n!==j,O=(P="undefined"!=typeof Uint8Array&&a(Uint8Array),n=>P&&n instanceof P);var P;const F=l("HTMLFormElement"),S=(({hasOwnProperty:n})=>(e,t)=>n.call(e,t))(Object.prototype),L=l("RegExp"),R=(n,e)=>{const t=Object.getOwnPropertyDescriptors(n),r={};I(t,((t,o)=>{let a;!1!==(a=e(t,o,n))&&(r[o]=a||t)})),Object.defineProperties(n,r)},T=l("AsyncFunction"),U=(q="function"==typeof setImmediate,z=p(j.postMessage),q?setImmediate:z?(D=`axios@${Math.random()}`,W=[],j.addEventListener("message",(({source:n,data:e})=>{n===j&&e===D&&W.length&&W.shift()()}),!1),n=>{W.push(n),j.postMessage(D,"*")}):n=>setTimeout(n));var q,z,D,W;const N="undefined"!=typeof queueMicrotask?queueMicrotask.bind(j):"undefined"!=typeof process&&process.nextTick||U;var $={isArray:d,isArrayBuffer:u,isBuffer:function(n){return null!==n&&!A(n)&&null!==n.constructor&&!A(n.constructor)&&p(n.constructor.isBuffer)&&n.constructor.isBuffer(n)},isFormData:n=>{let e;return n&&("function"==typeof FormData&&n instanceof FormData||p(n.append)&&("formdata"===(e=i(n))||"object"===e&&p(n.toString)&&"[object FormData]"===n.toString()))},isArrayBufferView:function(n){let e;return e="undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(n):n&&n.buffer&&u(n.buffer),e},isString:g,isNumber:h,isBoolean:n=>!0===n||!1===n,isObject:C,isPlainObject:f,isReadableStream:E,isRequest:x,isResponse:B,isHeaders:k,isUndefined:A,isDate:v,isFile:w,isBlob:m,isRegExp:L,isFunction:p,isStream:n=>C(n)&&p(n.pipe),isURLSearchParams:y,isTypedArray:O,isFileList:b,forEach:I,merge:function n(){const{caseless:e}=M(this)&&this||{},t={},r=(r,o)=>{const a=e&&_(t,o)||o;f(t[a])&&f(r)?t[a]=n(t[a],r):f(r)?t[a]=n({},r):d(r)?t[a]=r.slice():t[a]=r};for(let n=0,e=arguments.length;n<e;n++)arguments[n]&&I(arguments[n],r);return t},extend:(n,e,t,{allOwnKeys:o}={})=>(I(e,((e,o)=>{t&&p(e)?n[o]=r(e,t):n[o]=e}),{allOwnKeys:o}),n),trim:n=>n.trim?n.trim():n.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,""),stripBOM:n=>(65279===n.charCodeAt(0)&&(n=n.slice(1)),n),inherits:(n,e,t,r)=>{n.prototype=Object.create(e.prototype,r),n.prototype.constructor=n,Object.defineProperty(n,"super",{value:e.prototype}),t&&Object.assign(n.prototype,t)},toFlatObject:(n,e,t,r)=>{let o,i,s;const l={};if(e=e||{},null==n)return e;do{for(o=Object.getOwnPropertyNames(n),i=o.length;i-- >0;)s=o[i],r&&!r(s,n,e)||l[s]||(e[s]=n[s],l[s]=!0);n=!1!==t&&a(n)}while(n&&(!t||t(n,e))&&n!==Object.prototype);return e},kindOf:i,kindOfTest:l,endsWith:(n,e,t)=>{n=String(n),(void 0===t||t>n.length)&&(t=n.length),t-=e.length;const r=n.indexOf(e,t);return-1!==r&&r===t},toArray:n=>{if(!n)return null;if(d(n))return n;let e=n.length;if(!h(e))return null;const t=new Array(e);for(;e-- >0;)t[e]=n[e];return t},forEachEntry:(n,e)=>{const t=(n&&n[Symbol.iterator]).call(n);let r;for(;(r=t.next())&&!r.done;){const t=r.value;e.call(n,t[0],t[1])}},matchAll:(n,e)=>{let t;const r=[];for(;null!==(t=n.exec(e));)r.push(t);return r},isHTMLForm:F,hasOwnProperty:S,hasOwnProp:S,reduceDescriptors:R,freezeMethods:n=>{R(n,((e,t)=>{if(p(n)&&-1!==["arguments","caller","callee"].indexOf(t))return!1;const r=n[t];p(r)&&(e.enumerable=!1,"writable"in e?e.writable=!1:e.set||(e.set=()=>{throw Error("Can not rewrite read-only method '"+t+"'")}))}))},toObjectSet:(n,e)=>{const t={},r=n=>{n.forEach((n=>{t[n]=!0}))};return d(n)?r(n):r(String(n).split(e)),t},toCamelCase:n=>n.toLowerCase().replace(/[-_\s]([a-z\d])(\w*)/g,(function(n,e,t){return e.toUpperCase()+t})),noop:()=>{},toFiniteNumber:(n,e)=>null!=n&&Number.isFinite(n=+n)?n:e,findKey:_,global:j,isContextDefined:M,isSpecCompliantForm:function(n){return!!(n&&p(n.append)&&"FormData"===n[Symbol.toStringTag]&&n[Symbol.iterator])},toJSONObject:n=>{const e=new Array(10),t=(n,r)=>{if(C(n)){if(e.indexOf(n)>=0)return;if(!("toJSON"in n)){e[r]=n;const o=d(n)?[]:{};return I(n,((n,e)=>{const a=t(n,r+1);!A(a)&&(o[e]=a)})),e[r]=void 0,o}}return n};return t(n,0)},isAsyncFn:T,isThenable:n=>n&&(C(n)||p(n))&&p(n.then)&&p(n.catch),setImmediate:U,asap:N};function H(n,e,t,r,o){Error.call(this),Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):this.stack=(new Error).stack,this.message=n,this.name="AxiosError",e&&(this.code=e),t&&(this.config=t),r&&(this.request=r),o&&(this.response=o,this.status=o.status?o.status:null)}$.inherits(H,Error,{toJSON:function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:$.toJSONObject(this.config),code:this.code,status:this.status}}});const G=H.prototype,X={};function Y(n){return $.isPlainObject(n)||$.isArray(n)}function J(n){return $.endsWith(n,"[]")?n.slice(0,-2):n}function Q(n,e,t){return n?n.concat(e).map((function(n,e){return n=J(n),!t&&e?"["+n+"]":n})).join(t?".":""):e}["ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","ECONNABORTED","ETIMEDOUT","ERR_NETWORK","ERR_FR_TOO_MANY_REDIRECTS","ERR_DEPRECATED","ERR_BAD_RESPONSE","ERR_BAD_REQUEST","ERR_CANCELED","ERR_NOT_SUPPORT","ERR_INVALID_URL"].forEach((n=>{X[n]={value:n}})),Object.defineProperties(H,X),Object.defineProperty(G,"isAxiosError",{value:!0}),H.from=(n,e,t,r,o,a)=>{const i=Object.create(G);return $.toFlatObject(n,i,(function(n){return n!==Error.prototype}),(n=>"isAxiosError"!==n)),H.call(i,n.message,e,t,r,o),i.cause=n,i.name=n.name,a&&Object.assign(i,a),i};const K=$.toFlatObject($,{},null,(function(n){return/^is[A-Z]/.test(n)}));function V(n,e,t){if(!$.isObject(n))throw new TypeError("target must be an object");e=e||new FormData;const r=(t=$.toFlatObject(t,{metaTokens:!0,dots:!1,indexes:!1},!1,(function(n,e){return!$.isUndefined(e[n])}))).metaTokens,o=t.visitor||c,a=t.dots,i=t.indexes,s=(t.Blob||"undefined"!=typeof Blob&&Blob)&&$.isSpecCompliantForm(e);if(!$.isFunction(o))throw new TypeError("visitor must be a function");function l(n){if(null===n)return"";if($.isDate(n))return n.toISOString();if(!s&&$.isBlob(n))throw new H("Blob is not supported. Use a Buffer instead.");return $.isArrayBuffer(n)||$.isTypedArray(n)?s&&"function"==typeof Blob?new Blob([n]):Buffer.from(n):n}function c(n,t,o){let s=n;if(n&&!o&&"object"==typeof n)if($.endsWith(t,"{}"))t=r?t:t.slice(0,-2),n=JSON.stringify(n);else if($.isArray(n)&&function(n){return $.isArray(n)&&!n.some(Y)}(n)||($.isFileList(n)||$.endsWith(t,"[]"))&&(s=$.toArray(n)))return t=J(t),s.forEach((function(n,r){!$.isUndefined(n)&&null!==n&&e.append(!0===i?Q([t],r,a):null===i?t:t+"[]",l(n))})),!1;return!!Y(n)||(e.append(Q(o,t,a),l(n)),!1)}const d=[],A=Object.assign(K,{defaultVisitor:c,convertValue:l,isVisitable:Y});if(!$.isObject(n))throw new TypeError("data must be an object");return function n(t,r){if(!$.isUndefined(t)){if(-1!==d.indexOf(t))throw Error("Circular reference detected in "+r.join("."));d.push(t),$.forEach(t,(function(t,a){!0===(!($.isUndefined(t)||null===t)&&o.call(e,t,$.isString(a)?a.trim():a,r,A))&&n(t,r?r.concat(a):[a])})),d.pop()}}(n),e}function Z(n){const e={"!":"%21","'":"%27","(":"%28",")":"%29","~":"%7E","%20":"+","%00":"\0"};return encodeURIComponent(n).replace(/[!'()~]|%20|%00/g,(function(n){return e[n]}))}function nn(n,e){this._pairs=[],n&&V(n,this,e)}const en=nn.prototype;function tn(n){return encodeURIComponent(n).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}function rn(n,e,t){if(!e)return n;const r=t&&t.encode||tn;$.isFunction(t)&&(t={serialize:t});const o=t&&t.serialize;let a;if(a=o?o(e,t):$.isURLSearchParams(e)?e.toString():new nn(e,t).toString(r),a){const e=n.indexOf("#");-1!==e&&(n=n.slice(0,e)),n+=(-1===n.indexOf("?")?"?":"&")+a}return n}en.append=function(n,e){this._pairs.push([n,e])},en.toString=function(n){const e=n?function(e){return n.call(this,e,Z)}:Z;return this._pairs.map((function(n){return e(n[0])+"="+e(n[1])}),"").join("&")};var on=class{constructor(){this.handlers=[]}use(n,e,t){return this.handlers.push({fulfilled:n,rejected:e,synchronous:!!t&&t.synchronous,runWhen:t?t.runWhen:null}),this.handlers.length-1}eject(n){this.handlers[n]&&(this.handlers[n]=null)}clear(){this.handlers&&(this.handlers=[])}forEach(n){$.forEach(this.handlers,(function(e){null!==e&&n(e)}))}},an={silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1},sn={isBrowser:!0,classes:{URLSearchParams:"undefined"!=typeof URLSearchParams?URLSearchParams:nn,FormData:"undefined"!=typeof FormData?FormData:null,Blob:"undefined"!=typeof Blob?Blob:null},protocols:["http","https","file","blob","url","data"]};const ln="undefined"!=typeof window&&"undefined"!=typeof document,cn="object"==typeof navigator&&navigator||void 0,dn=ln&&(!cn||["ReactNative","NativeScript","NS"].indexOf(cn.product)<0),An="undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope&&"function"==typeof self.importScripts,un=ln&&window.location.href||"http://localhost";var gn={...Object.freeze({__proto__:null,hasBrowserEnv:ln,hasStandardBrowserWebWorkerEnv:An,hasStandardBrowserEnv:dn,navigator:cn,origin:un}),...sn};function pn(n){function e(n,t,r,o){let a=n[o++];if("__proto__"===a)return!0;const i=Number.isFinite(+a),s=o>=n.length;return a=!a&&$.isArray(r)?r.length:a,s?($.hasOwnProp(r,a)?r[a]=[r[a],t]:r[a]=t,!i):(r[a]&&$.isObject(r[a])||(r[a]=[]),e(n,t,r[a],o)&&$.isArray(r[a])&&(r[a]=function(n){const e={},t=Object.keys(n);let r;const o=t.length;let a;for(r=0;r<o;r++)a=t[r],e[a]=n[a];return e}(r[a])),!i)}if($.isFormData(n)&&$.isFunction(n.entries)){const t={};return $.forEachEntry(n,((n,r)=>{e(function(n){return $.matchAll(/\w+|\[(\w*)]/g,n).map((n=>"[]"===n[0]?"":n[1]||n[0]))}(n),r,t,0)})),t}return null}const hn={transitional:an,adapter:["xhr","http","fetch"],transformRequest:[function(n,e){const t=e.getContentType()||"",r=t.indexOf("application/json")>-1,o=$.isObject(n);if(o&&$.isHTMLForm(n)&&(n=new FormData(n)),$.isFormData(n))return r?JSON.stringify(pn(n)):n;if($.isArrayBuffer(n)||$.isBuffer(n)||$.isStream(n)||$.isFile(n)||$.isBlob(n)||$.isReadableStream(n))return n;if($.isArrayBufferView(n))return n.buffer;if($.isURLSearchParams(n))return e.setContentType("application/x-www-form-urlencoded;charset=utf-8",!1),n.toString();let a;if(o){if(t.indexOf("application/x-www-form-urlencoded")>-1)return function(n,e){return V(n,new gn.classes.URLSearchParams,Object.assign({visitor:function(n,e,t,r){return gn.isNode&&$.isBuffer(n)?(this.append(e,n.toString("base64")),!1):r.defaultVisitor.apply(this,arguments)}},e))}(n,this.formSerializer).toString();if((a=$.isFileList(n))||t.indexOf("multipart/form-data")>-1){const e=this.env&&this.env.FormData;return V(a?{"files[]":n}:n,e&&new e,this.formSerializer)}}return o||r?(e.setContentType("application/json",!1),function(n){if($.isString(n))try{return(0,JSON.parse)(n),$.trim(n)}catch(n){if("SyntaxError"!==n.name)throw n}return(0,JSON.stringify)(n)}(n)):n}],transformResponse:[function(n){const e=this.transitional||hn.transitional,t=e&&e.forcedJSONParsing,r="json"===this.responseType;if($.isResponse(n)||$.isReadableStream(n))return n;if(n&&$.isString(n)&&(t&&!this.responseType||r)){const t=!(e&&e.silentJSONParsing)&&r;try{return JSON.parse(n)}catch(n){if(t){if("SyntaxError"===n.name)throw H.from(n,H.ERR_BAD_RESPONSE,this,null,this.response);throw n}}}return n}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,env:{FormData:gn.classes.FormData,Blob:gn.classes.Blob},validateStatus:function(n){return n>=200&&n<300},headers:{common:{Accept:"application/json, text/plain, */*","Content-Type":void 0}}};$.forEach(["delete","get","head","post","put","patch"],(n=>{hn.headers[n]={}}));var Cn=hn;const fn=$.toObjectSet(["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"]),vn=Symbol("internals");function wn(n){return n&&String(n).trim().toLowerCase()}function mn(n){return!1===n||null==n?n:$.isArray(n)?n.map(mn):String(n)}function bn(n,e,t,r,o){return $.isFunction(r)?r.call(this,e,t):(o&&(e=t),$.isString(e)?$.isString(r)?-1!==e.indexOf(r):$.isRegExp(r)?r.test(e):void 0:void 0)}class yn{constructor(n){n&&this.set(n)}set(n,e,t){const r=this;function o(n,e,t){const o=wn(e);if(!o)throw new Error("header name must be a non-empty string");const a=$.findKey(r,o);(!a||void 0===r[a]||!0===t||void 0===t&&!1!==r[a])&&(r[a||e]=mn(n))}const a=(n,e)=>$.forEach(n,((n,t)=>o(n,t,e)));if($.isPlainObject(n)||n instanceof this.constructor)a(n,e);else if($.isString(n)&&(n=n.trim())&&!/^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(n.trim()))a((n=>{const e={};let t,r,o;return n&&n.split("\n").forEach((function(n){o=n.indexOf(":"),t=n.substring(0,o).trim().toLowerCase(),r=n.substring(o+1).trim(),!t||e[t]&&fn[t]||("set-cookie"===t?e[t]?e[t].push(r):e[t]=[r]:e[t]=e[t]?e[t]+", "+r:r)})),e})(n),e);else if($.isHeaders(n))for(const[e,r]of n.entries())o(r,e,t);else null!=n&&o(e,n,t);return this}get(n,e){if(n=wn(n)){const t=$.findKey(this,n);if(t){const n=this[t];if(!e)return n;if(!0===e)return function(n){const e=Object.create(null),t=/([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g;let r;for(;r=t.exec(n);)e[r[1]]=r[2];return e}(n);if($.isFunction(e))return e.call(this,n,t);if($.isRegExp(e))return e.exec(n);throw new TypeError("parser must be boolean|regexp|function")}}}has(n,e){if(n=wn(n)){const t=$.findKey(this,n);return!(!t||void 0===this[t]||e&&!bn(0,this[t],t,e))}return!1}delete(n,e){const t=this;let r=!1;function o(n){if(n=wn(n)){const o=$.findKey(t,n);!o||e&&!bn(0,t[o],o,e)||(delete t[o],r=!0)}}return $.isArray(n)?n.forEach(o):o(n),r}clear(n){const e=Object.keys(this);let t=e.length,r=!1;for(;t--;){const o=e[t];n&&!bn(0,this[o],o,n,!0)||(delete this[o],r=!0)}return r}normalize(n){const e=this,t={};return $.forEach(this,((r,o)=>{const a=$.findKey(t,o);if(a)return e[a]=mn(r),void delete e[o];const i=n?function(n){return n.trim().toLowerCase().replace(/([a-z\d])(\w*)/g,((n,e,t)=>e.toUpperCase()+t))}(o):String(o).trim();i!==o&&delete e[o],e[i]=mn(r),t[i]=!0})),this}concat(...n){return this.constructor.concat(this,...n)}toJSON(n){const e=Object.create(null);return $.forEach(this,((t,r)=>{null!=t&&!1!==t&&(e[r]=n&&$.isArray(t)?t.join(", "):t)})),e}[Symbol.iterator](){return Object.entries(this.toJSON())[Symbol.iterator]()}toString(){return Object.entries(this.toJSON()).map((([n,e])=>n+": "+e)).join("\n")}get[Symbol.toStringTag](){return"AxiosHeaders"}static from(n){return n instanceof this?n:new this(n)}static concat(n,...e){const t=new this(n);return e.forEach((n=>t.set(n))),t}static accessor(n){const e=(this[vn]=this[vn]={accessors:{}}).accessors,t=this.prototype;function r(n){const r=wn(n);e[r]||(function(n,e){const t=$.toCamelCase(" "+e);["get","set","has"].forEach((r=>{Object.defineProperty(n,r+t,{value:function(n,t,o){return this[r].call(this,e,n,t,o)},configurable:!0})}))}(t,n),e[r]=!0)}return $.isArray(n)?n.forEach(r):r(n),this}}yn.accessor(["Content-Type","Content-Length","Accept","Accept-Encoding","User-Agent","Authorization"]),$.reduceDescriptors(yn.prototype,(({value:n},e)=>{let t=e[0].toUpperCase()+e.slice(1);return{get:()=>n,set(n){this[t]=n}}})),$.freezeMethods(yn);var En=yn;function xn(n,e){const t=this||Cn,r=e||t,o=En.from(r.headers);let a=r.data;return $.forEach(n,(function(n){a=n.call(t,a,o.normalize(),e?e.status:void 0)})),o.normalize(),a}function Bn(n){return!(!n||!n.__CANCEL__)}function kn(n,e,t){H.call(this,null==n?"canceled":n,H.ERR_CANCELED,e,t),this.name="CanceledError"}function In(n,e,t){const r=t.config.validateStatus;t.status&&r&&!r(t.status)?e(new H("Request failed with status code "+t.status,[H.ERR_BAD_REQUEST,H.ERR_BAD_RESPONSE][Math.floor(t.status/100)-4],t.config,t.request,t)):n(t)}$.inherits(kn,H,{__CANCEL__:!0});const _n=(n,e,t=3)=>{let r=0;const o=function(n,e){n=n||10;const t=new Array(n),r=new Array(n);let o,a=0,i=0;return e=void 0!==e?e:1e3,function(s){const l=Date.now(),c=r[i];o||(o=l),t[a]=s,r[a]=l;let d=i,A=0;for(;d!==a;)A+=t[d++],d%=n;if(a=(a+1)%n,a===i&&(i=(i+1)%n),l-o<e)return;const u=c&&l-c;return u?Math.round(1e3*A/u):void 0}}(50,250);return function(n,e){let t,r,o=0,a=1e3/e;const i=(e,a=Date.now())=>{o=a,t=null,r&&(clearTimeout(r),r=null),n.apply(null,e)};return[(...n)=>{const e=Date.now(),s=e-o;s>=a?i(n,e):(t=n,r||(r=setTimeout((()=>{r=null,i(t)}),a-s)))},()=>t&&i(t)]}((t=>{const a=t.loaded,i=t.lengthComputable?t.total:void 0,s=a-r,l=o(s);r=a,n({loaded:a,total:i,progress:i?a/i:void 0,bytes:s,rate:l||void 0,estimated:l&&i&&a<=i?(i-a)/l:void 0,event:t,lengthComputable:null!=i,[e?"download":"upload"]:!0})}),t)},jn=(n,e)=>{const t=null!=n;return[r=>e[0]({lengthComputable:t,total:n,loaded:r}),e[1]]},Mn=n=>(...e)=>$.asap((()=>n(...e)));var On=gn.hasStandardBrowserEnv?((n,e)=>t=>(t=new URL(t,gn.origin),n.protocol===t.protocol&&n.host===t.host&&(e||n.port===t.port)))(new URL(gn.origin),gn.navigator&&/(msie|trident)/i.test(gn.navigator.userAgent)):()=>!0,Pn=gn.hasStandardBrowserEnv?{write(n,e,t,r,o,a){const i=[n+"="+encodeURIComponent(e)];$.isNumber(t)&&i.push("expires="+new Date(t).toGMTString()),$.isString(r)&&i.push("path="+r),$.isString(o)&&i.push("domain="+o),!0===a&&i.push("secure"),document.cookie=i.join("; ")},read(n){const e=document.cookie.match(new RegExp("(^|;\\s*)("+n+")=([^;]*)"));return e?decodeURIComponent(e[3]):null},remove(n){this.write(n,"",Date.now()-864e5)}}:{write(){},read:()=>null,remove(){}};function Fn(n,e,t){let r=!/^([a-z][a-z\d+\-.]*:)?\/\//i.test(e);return n&&(r||0==t)?function(n,e){return e?n.replace(/\/?\/$/,"")+"/"+e.replace(/^\/+/,""):n}(n,e):e}const Sn=n=>n instanceof En?{...n}:n;function Ln(n,e){e=e||{};const t={};function r(n,e,t,r){return $.isPlainObject(n)&&$.isPlainObject(e)?$.merge.call({caseless:r},n,e):$.isPlainObject(e)?$.merge({},e):$.isArray(e)?e.slice():e}function o(n,e,t,o){return $.isUndefined(e)?$.isUndefined(n)?void 0:r(void 0,n,0,o):r(n,e,0,o)}function a(n,e){if(!$.isUndefined(e))return r(void 0,e)}function i(n,e){return $.isUndefined(e)?$.isUndefined(n)?void 0:r(void 0,n):r(void 0,e)}function s(t,o,a){return a in e?r(t,o):a in n?r(void 0,t):void 0}const l={url:a,method:a,data:a,baseURL:i,transformRequest:i,transformResponse:i,paramsSerializer:i,timeout:i,timeoutMessage:i,withCredentials:i,withXSRFToken:i,adapter:i,responseType:i,xsrfCookieName:i,xsrfHeaderName:i,onUploadProgress:i,onDownloadProgress:i,decompress:i,maxContentLength:i,maxBodyLength:i,beforeRedirect:i,transport:i,httpAgent:i,httpsAgent:i,cancelToken:i,socketPath:i,responseEncoding:i,validateStatus:s,headers:(n,e,t)=>o(Sn(n),Sn(e),0,!0)};return $.forEach(Object.keys(Object.assign({},n,e)),(function(r){const a=l[r]||o,i=a(n[r],e[r],r);$.isUndefined(i)&&a!==s||(t[r]=i)})),t}var Rn=n=>{const e=Ln({},n);let t,{data:r,withXSRFToken:o,xsrfHeaderName:a,xsrfCookieName:i,headers:s,auth:l}=e;if(e.headers=s=En.from(s),e.url=rn(Fn(e.baseURL,e.url,e.allowAbsoluteUrls),n.params,n.paramsSerializer),l&&s.set("Authorization","Basic "+btoa((l.username||"")+":"+(l.password?unescape(encodeURIComponent(l.password)):""))),$.isFormData(r))if(gn.hasStandardBrowserEnv||gn.hasStandardBrowserWebWorkerEnv)s.setContentType(void 0);else if(!1!==(t=s.getContentType())){const[n,...e]=t?t.split(";").map((n=>n.trim())).filter(Boolean):[];s.setContentType([n||"multipart/form-data",...e].join("; "))}if(gn.hasStandardBrowserEnv&&(o&&$.isFunction(o)&&(o=o(e)),o||!1!==o&&On(e.url))){const n=a&&i&&Pn.read(i);n&&s.set(a,n)}return e},Tn="undefined"!=typeof XMLHttpRequest&&function(n){return new Promise((function(e,t){const r=Rn(n);let o=r.data;const a=En.from(r.headers).normalize();let i,s,l,c,d,{responseType:A,onUploadProgress:u,onDownloadProgress:g}=r;function p(){c&&c(),d&&d(),r.cancelToken&&r.cancelToken.unsubscribe(i),r.signal&&r.signal.removeEventListener("abort",i)}let h=new XMLHttpRequest;function C(){if(!h)return;const r=En.from("getAllResponseHeaders"in h&&h.getAllResponseHeaders());In((function(n){e(n),p()}),(function(n){t(n),p()}),{data:A&&"text"!==A&&"json"!==A?h.response:h.responseText,status:h.status,statusText:h.statusText,headers:r,config:n,request:h}),h=null}h.open(r.method.toUpperCase(),r.url,!0),h.timeout=r.timeout,"onloadend"in h?h.onloadend=C:h.onreadystatechange=function(){h&&4===h.readyState&&(0!==h.status||h.responseURL&&0===h.responseURL.indexOf("file:"))&&setTimeout(C)},h.onabort=function(){h&&(t(new H("Request aborted",H.ECONNABORTED,n,h)),h=null)},h.onerror=function(){t(new H("Network Error",H.ERR_NETWORK,n,h)),h=null},h.ontimeout=function(){let e=r.timeout?"timeout of "+r.timeout+"ms exceeded":"timeout exceeded";const o=r.transitional||an;r.timeoutErrorMessage&&(e=r.timeoutErrorMessage),t(new H(e,o.clarifyTimeoutError?H.ETIMEDOUT:H.ECONNABORTED,n,h)),h=null},void 0===o&&a.setContentType(null),"setRequestHeader"in h&&$.forEach(a.toJSON(),(function(n,e){h.setRequestHeader(e,n)})),$.isUndefined(r.withCredentials)||(h.withCredentials=!!r.withCredentials),A&&"json"!==A&&(h.responseType=r.responseType),g&&([l,d]=_n(g,!0),h.addEventListener("progress",l)),u&&h.upload&&([s,c]=_n(u),h.upload.addEventListener("progress",s),h.upload.addEventListener("loadend",c)),(r.cancelToken||r.signal)&&(i=e=>{h&&(t(!e||e.type?new kn(null,n,h):e),h.abort(),h=null)},r.cancelToken&&r.cancelToken.subscribe(i),r.signal&&(r.signal.aborted?i():r.signal.addEventListener("abort",i)));const f=function(n){const e=/^([-+\w]{1,25})(:?\/\/|:)/.exec(n);return e&&e[1]||""}(r.url);f&&-1===gn.protocols.indexOf(f)?t(new H("Unsupported protocol "+f+":",H.ERR_BAD_REQUEST,n)):h.send(o||null)}))},Un=(n,e)=>{const{length:t}=n=n?n.filter(Boolean):[];if(e||t){let t,r=new AbortController;const o=function(n){if(!t){t=!0,i();const e=n instanceof Error?n:this.reason;r.abort(e instanceof H?e:new kn(e instanceof Error?e.message:e))}};let a=e&&setTimeout((()=>{a=null,o(new H(`timeout ${e} of ms exceeded`,H.ETIMEDOUT))}),e);const i=()=>{n&&(a&&clearTimeout(a),a=null,n.forEach((n=>{n.unsubscribe?n.unsubscribe(o):n.removeEventListener("abort",o)})),n=null)};n.forEach((n=>n.addEventListener("abort",o)));const{signal:s}=r;return s.unsubscribe=()=>$.asap(i),s}};const qn=function*(n,e){let t=n.byteLength;if(!e||t<e)return void(yield n);let r,o=0;for(;o<t;)r=o+e,yield n.slice(o,r),o=r},zn=(n,e,t,r)=>{const o=async function*(n,e){for await(const t of async function*(n){if(n[Symbol.asyncIterator])return void(yield*n);const e=n.getReader();try{for(;;){const{done:n,value:t}=await e.read();if(n)break;yield t}}finally{await e.cancel()}}(n))yield*qn(t,e)}(n,e);let a,i=0,s=n=>{a||(a=!0,r&&r(n))};return new ReadableStream({async pull(n){try{const{done:e,value:r}=await o.next();if(e)return s(),void n.close();let a=r.byteLength;if(t){let n=i+=a;t(n)}n.enqueue(new Uint8Array(r))}catch(n){throw s(n),n}},cancel:n=>(s(n),o.return())},{highWaterMark:2})},Dn="function"==typeof fetch&&"function"==typeof Request&&"function"==typeof Response,Wn=Dn&&"function"==typeof ReadableStream,Nn=Dn&&("function"==typeof TextEncoder?($n=new TextEncoder,n=>$n.encode(n)):async n=>new Uint8Array(await new Response(n).arrayBuffer()));var $n;const Hn=(n,...e)=>{try{return!!n(...e)}catch(n){return!1}},Gn=Wn&&Hn((()=>{let n=!1;const e=new Request(gn.origin,{body:new ReadableStream,method:"POST",get duplex(){return n=!0,"half"}}).headers.has("Content-Type");return n&&!e})),Xn=Wn&&Hn((()=>$.isReadableStream(new Response("").body))),Yn={stream:Xn&&(n=>n.body)};var Jn;Dn&&(Jn=new Response,["text","arrayBuffer","blob","formData","stream"].forEach((n=>{!Yn[n]&&(Yn[n]=$.isFunction(Jn[n])?e=>e[n]():(e,t)=>{throw new H(`Response type '${n}' is not supported`,H.ERR_NOT_SUPPORT,t)})})));const Qn={http:null,xhr:Tn,fetch:Dn&&(async n=>{let{url:e,method:t,data:r,signal:o,cancelToken:a,timeout:i,onDownloadProgress:s,onUploadProgress:l,responseType:c,headers:d,withCredentials:A="same-origin",fetchOptions:u}=Rn(n);c=c?(c+"").toLowerCase():"text";let g,p=Un([o,a&&a.toAbortSignal()],i);const h=p&&p.unsubscribe&&(()=>{p.unsubscribe()});let C;try{if(l&&Gn&&"get"!==t&&"head"!==t&&0!==(C=await(async(n,e)=>{const t=$.toFiniteNumber(n.getContentLength());return null==t?(async n=>{if(null==n)return 0;if($.isBlob(n))return n.size;if($.isSpecCompliantForm(n)){const e=new Request(gn.origin,{method:"POST",body:n});return(await e.arrayBuffer()).byteLength}return $.isArrayBufferView(n)||$.isArrayBuffer(n)?n.byteLength:($.isURLSearchParams(n)&&(n+=""),$.isString(n)?(await Nn(n)).byteLength:void 0)})(e):t})(d,r))){let n,t=new Request(e,{method:"POST",body:r,duplex:"half"});if($.isFormData(r)&&(n=t.headers.get("content-type"))&&d.setContentType(n),t.body){const[n,e]=jn(C,_n(Mn(l)));r=zn(t.body,65536,n,e)}}$.isString(A)||(A=A?"include":"omit");const o="credentials"in Request.prototype;g=new Request(e,{...u,signal:p,method:t.toUpperCase(),headers:d.normalize().toJSON(),body:r,duplex:"half",credentials:o?A:void 0});let a=await fetch(g);const i=Xn&&("stream"===c||"response"===c);if(Xn&&(s||i&&h)){const n={};["status","statusText","headers"].forEach((e=>{n[e]=a[e]}));const e=$.toFiniteNumber(a.headers.get("content-length")),[t,r]=s&&jn(e,_n(Mn(s),!0))||[];a=new Response(zn(a.body,65536,t,(()=>{r&&r(),h&&h()})),n)}c=c||"text";let f=await Yn[$.findKey(Yn,c)||"text"](a,n);return!i&&h&&h(),await new Promise(((e,t)=>{In(e,t,{data:f,headers:En.from(a.headers),status:a.status,statusText:a.statusText,config:n,request:g})}))}catch(e){if(h&&h(),e&&"TypeError"===e.name&&/fetch/i.test(e.message))throw Object.assign(new H("Network Error",H.ERR_NETWORK,n,g),{cause:e.cause||e});throw H.from(e,e&&e.code,n,g)}})};$.forEach(Qn,((n,e)=>{if(n){try{Object.defineProperty(n,"name",{value:e})}catch(n){}Object.defineProperty(n,"adapterName",{value:e})}}));const Kn=n=>`- ${n}`,Vn=n=>$.isFunction(n)||null===n||!1===n;var Zn=n=>{n=$.isArray(n)?n:[n];const{length:e}=n;let t,r;const o={};for(let a=0;a<e;a++){let e;if(t=n[a],r=t,!Vn(t)&&(r=Qn[(e=String(t)).toLowerCase()],void 0===r))throw new H(`Unknown adapter '${e}'`);if(r)break;o[e||"#"+a]=r}if(!r){const n=Object.entries(o).map((([n,e])=>`adapter ${n} `+(!1===e?"is not supported by the environment":"is not available in the build")));throw new H("There is no suitable adapter to dispatch the request "+(e?n.length>1?"since :\n"+n.map(Kn).join("\n"):" "+Kn(n[0]):"as no adapter specified"),"ERR_NOT_SUPPORT")}return r};function ne(n){if(n.cancelToken&&n.cancelToken.throwIfRequested(),n.signal&&n.signal.aborted)throw new kn(null,n)}function ee(n){return ne(n),n.headers=En.from(n.headers),n.data=xn.call(n,n.transformRequest),-1!==["post","put","patch"].indexOf(n.method)&&n.headers.setContentType("application/x-www-form-urlencoded",!1),Zn(n.adapter||Cn.adapter)(n).then((function(e){return ne(n),e.data=xn.call(n,n.transformResponse,e),e.headers=En.from(e.headers),e}),(function(e){return Bn(e)||(ne(n),e&&e.response&&(e.response.data=xn.call(n,n.transformResponse,e.response),e.response.headers=En.from(e.response.headers))),Promise.reject(e)}))}const te={};["object","boolean","number","function","string","symbol"].forEach(((n,e)=>{te[n]=function(t){return typeof t===n||"a"+(e<1?"n ":" ")+n}}));const re={};te.transitional=function(n,e,t){function r(n,e){return"[Axios v1.8.4] Transitional option '"+n+"'"+e+(t?". "+t:"")}return(t,o,a)=>{if(!1===n)throw new H(r(o," has been removed"+(e?" in "+e:"")),H.ERR_DEPRECATED);return e&&!re[o]&&(re[o]=!0,console.warn(r(o," has been deprecated since v"+e+" and will be removed in the near future"))),!n||n(t,o,a)}},te.spelling=function(n){return(e,t)=>(console.warn(`${t} is likely a misspelling of ${n}`),!0)};var oe={assertOptions:function(n,e,t){if("object"!=typeof n)throw new H("options must be an object",H.ERR_BAD_OPTION_VALUE);const r=Object.keys(n);let o=r.length;for(;o-- >0;){const a=r[o],i=e[a];if(i){const e=n[a],t=void 0===e||i(e,a,n);if(!0!==t)throw new H("option "+a+" must be "+t,H.ERR_BAD_OPTION_VALUE)}else if(!0!==t)throw new H("Unknown option "+a,H.ERR_BAD_OPTION)}},validators:te};const ae=oe.validators;class ie{constructor(n){this.defaults=n,this.interceptors={request:new on,response:new on}}async request(n,e){try{return await this._request(n,e)}catch(n){if(n instanceof Error){let e={};Error.captureStackTrace?Error.captureStackTrace(e):e=new Error;const t=e.stack?e.stack.replace(/^.+\n/,""):"";try{n.stack?t&&!String(n.stack).endsWith(t.replace(/^.+\n.+\n/,""))&&(n.stack+="\n"+t):n.stack=t}catch(n){}}throw n}}_request(n,e){"string"==typeof n?(e=e||{}).url=n:e=n||{},e=Ln(this.defaults,e);const{transitional:t,paramsSerializer:r,headers:o}=e;void 0!==t&&oe.assertOptions(t,{silentJSONParsing:ae.transitional(ae.boolean),forcedJSONParsing:ae.transitional(ae.boolean),clarifyTimeoutError:ae.transitional(ae.boolean)},!1),null!=r&&($.isFunction(r)?e.paramsSerializer={serialize:r}:oe.assertOptions(r,{encode:ae.function,serialize:ae.function},!0)),void 0!==e.allowAbsoluteUrls||(void 0!==this.defaults.allowAbsoluteUrls?e.allowAbsoluteUrls=this.defaults.allowAbsoluteUrls:e.allowAbsoluteUrls=!0),oe.assertOptions(e,{baseUrl:ae.spelling("baseURL"),withXsrfToken:ae.spelling("withXSRFToken")},!0),e.method=(e.method||this.defaults.method||"get").toLowerCase();let a=o&&$.merge(o.common,o[e.method]);o&&$.forEach(["delete","get","head","post","put","patch","common"],(n=>{delete o[n]})),e.headers=En.concat(a,o);const i=[];let s=!0;this.interceptors.request.forEach((function(n){"function"==typeof n.runWhen&&!1===n.runWhen(e)||(s=s&&n.synchronous,i.unshift(n.fulfilled,n.rejected))}));const l=[];let c;this.interceptors.response.forEach((function(n){l.push(n.fulfilled,n.rejected)}));let d,A=0;if(!s){const n=[ee.bind(this),void 0];for(n.unshift.apply(n,i),n.push.apply(n,l),d=n.length,c=Promise.resolve(e);A<d;)c=c.then(n[A++],n[A++]);return c}d=i.length;let u=e;for(A=0;A<d;){const n=i[A++],e=i[A++];try{u=n(u)}catch(n){e.call(this,n);break}}try{c=ee.call(this,u)}catch(n){return Promise.reject(n)}for(A=0,d=l.length;A<d;)c=c.then(l[A++],l[A++]);return c}getUri(n){return rn(Fn((n=Ln(this.defaults,n)).baseURL,n.url,n.allowAbsoluteUrls),n.params,n.paramsSerializer)}}$.forEach(["delete","get","head","options"],(function(n){ie.prototype[n]=function(e,t){return this.request(Ln(t||{},{method:n,url:e,data:(t||{}).data}))}})),$.forEach(["post","put","patch"],(function(n){function e(e){return function(t,r,o){return this.request(Ln(o||{},{method:n,headers:e?{"Content-Type":"multipart/form-data"}:{},url:t,data:r}))}}ie.prototype[n]=e(),ie.prototype[n+"Form"]=e(!0)}));var se=ie;class le{constructor(n){if("function"!=typeof n)throw new TypeError("executor must be a function.");let e;this.promise=new Promise((function(n){e=n}));const t=this;this.promise.then((n=>{if(!t._listeners)return;let e=t._listeners.length;for(;e-- >0;)t._listeners[e](n);t._listeners=null})),this.promise.then=n=>{let e;const r=new Promise((n=>{t.subscribe(n),e=n})).then(n);return r.cancel=function(){t.unsubscribe(e)},r},n((function(n,r,o){t.reason||(t.reason=new kn(n,r,o),e(t.reason))}))}throwIfRequested(){if(this.reason)throw this.reason}subscribe(n){this.reason?n(this.reason):this._listeners?this._listeners.push(n):this._listeners=[n]}unsubscribe(n){if(!this._listeners)return;const e=this._listeners.indexOf(n);-1!==e&&this._listeners.splice(e,1)}toAbortSignal(){const n=new AbortController,e=e=>{n.abort(e)};return this.subscribe(e),n.signal.unsubscribe=()=>this.unsubscribe(e),n.signal}static source(){let n;return{token:new le((function(e){n=e})),cancel:n}}}var ce=le;const de={Continue:100,SwitchingProtocols:101,Processing:102,EarlyHints:103,Ok:200,Created:201,Accepted:202,NonAuthoritativeInformation:203,NoContent:204,ResetContent:205,PartialContent:206,MultiStatus:207,AlreadyReported:208,ImUsed:226,MultipleChoices:300,MovedPermanently:301,Found:302,SeeOther:303,NotModified:304,UseProxy:305,Unused:306,TemporaryRedirect:307,PermanentRedirect:308,BadRequest:400,Unauthorized:401,PaymentRequired:402,Forbidden:403,NotFound:404,MethodNotAllowed:405,NotAcceptable:406,ProxyAuthenticationRequired:407,RequestTimeout:408,Conflict:409,Gone:410,LengthRequired:411,PreconditionFailed:412,PayloadTooLarge:413,UriTooLong:414,UnsupportedMediaType:415,RangeNotSatisfiable:416,ExpectationFailed:417,ImATeapot:418,MisdirectedRequest:421,UnprocessableEntity:422,Locked:423,FailedDependency:424,TooEarly:425,UpgradeRequired:426,PreconditionRequired:428,TooManyRequests:429,RequestHeaderFieldsTooLarge:431,UnavailableForLegalReasons:451,InternalServerError:500,NotImplemented:501,BadGateway:502,ServiceUnavailable:503,GatewayTimeout:504,HttpVersionNotSupported:505,VariantAlsoNegotiates:506,InsufficientStorage:507,LoopDetected:508,NotExtended:510,NetworkAuthenticationRequired:511};Object.entries(de).forEach((([n,e])=>{de[e]=n}));var Ae=de;const ue=function n(e){const t=new se(e),o=r(se.prototype.request,t);return $.extend(o,se.prototype,t,{allOwnKeys:!0}),$.extend(o,t,null,{allOwnKeys:!0}),o.create=function(t){return n(Ln(e,t))},o}(Cn);ue.Axios=se,ue.CanceledError=kn,ue.CancelToken=ce,ue.isCancel=Bn,ue.VERSION="1.8.4",ue.toFormData=V,ue.AxiosError=H,ue.Cancel=ue.CanceledError,ue.all=function(n){return Promise.all(n)},ue.spread=function(n){return function(e){return n.apply(null,e)}},ue.isAxiosError=function(n){return $.isObject(n)&&!0===n.isAxiosError},ue.mergeConfig=Ln,ue.AxiosHeaders=En,ue.formToJSON=n=>pn($.isHTMLForm(n)?new FormData(n):n),ue.getAdapter=Zn,ue.HttpStatusCode=Ae,ue.default=ue,n.exports=ue},6600:function(n,e,t){var r=this&&this.__createBinding||(Object.create?function(n,e,t,r){void 0===r&&(r=t);var o=Object.getOwnPropertyDescriptor(e,t);o&&!("get"in o?!e.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(n,r,o)}:function(n,e,t,r){void 0===r&&(r=t),n[r]=e[t]}),o=this&&this.__exportStar||function(n,e){for(var t in n)"default"===t||Object.prototype.hasOwnProperty.call(e,t)||r(e,n,t)};Object.defineProperty(e,"__esModule",{value:!0}),o(t(4817),e),o(t(1794),e),o(t(5418),e)},7002:function(n,e,t){var r=this&&this.__createBinding||(Object.create?function(n,e,t,r){void 0===r&&(r=t);var o=Object.getOwnPropertyDescriptor(e,t);o&&!("get"in o?!e.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(n,r,o)}:function(n,e,t,r){void 0===r&&(r=t),n[r]=e[t]}),o=this&&this.__exportStar||function(n,e){for(var t in n)"default"===t||Object.prototype.hasOwnProperty.call(e,t)||r(e,n,t)};Object.defineProperty(e,"__esModule",{value:!0}),o(t(8563),e),o(t(8913),e)},7147:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.getLoader=void 0,e.getLoader=()=>'<div role="status">\n\t\t\t<svg aria-hidden="true" class="inline w-4 h-4 text-gray-200 animate-spin dark:text-gray-600 fill-gray-600 dark:fill-gray-300" viewBox="0 0 100 101" fill="none" xmlns="http://www.w3.org/2000/svg">\n\t\t\t  <path d="M100 50.5908C100 78.2051 77.6142 100.591 50 100.591C22.3858 100.591 0 78.2051 0 50.5908C0 22.9766 22.3858 0.59082 50 0.59082C77.6142 0.59082 100 22.9766 100 50.5908ZM9.08144 50.5908C9.08144 73.1895 27.4013 91.5094 50 91.5094C72.5987 91.5094 90.9186 73.1895 90.9186 50.5908C90.9186 27.9921 72.5987 9.67226 50 9.67226C27.4013 9.67226 9.08144 27.9921 9.08144 50.5908Z" fill="currentColor"/>\n\t\t\t  <path d="M93.9676 39.0409C96.393 38.4038 97.8624 35.9116 97.0079 33.5539C95.2932 28.8227 92.871 24.3692 89.8167 20.348C85.8452 15.1192 80.8826 10.7238 75.2124 7.41289C69.5422 4.10194 63.2754 1.94025 56.7698 1.05124C51.7666 0.367541 46.6976 0.446843 41.7345 1.27873C39.2613 1.69328 37.813 4.19778 38.4501 6.62326C39.0873 9.04874 41.5694 10.4717 44.0505 10.1071C47.8511 9.54855 51.7191 9.52689 55.5402 10.0491C60.8642 10.7766 65.9928 12.5457 70.6331 15.2552C75.2735 17.9648 79.3347 21.5619 82.5849 25.841C84.9175 28.9121 86.7997 32.2913 88.1811 35.8758C89.083 38.2158 91.5421 39.6781 93.9676 39.0409Z" fill="currentFill"/>\n\t\t\t</svg>\n\t\t\t<span class="sr-only">Loading...</span>\n\t\t  </div>'},7152:function(n,e,t){var r=this&&this.__awaiter||function(n,e,t,r){return new(t||(t=Promise))((function(o,a){function i(n){try{l(r.next(n))}catch(n){a(n)}}function s(n){try{l(r.throw(n))}catch(n){a(n)}}function l(n){var e;n.done?o(n.value):(e=n.value,e instanceof t?e:new t((function(n){n(e)}))).then(i,s)}l((r=r.apply(n,e||[])).next())}))};Object.defineProperty(e,"__esModule",{value:!0}),e.getUsersBlock=e.getFriendsBlock=void 0;const o=t(807),a=t(5941),i=t(8863),s=t(1334);e.getFriendsBlock=(n,e)=>{let t;const l=o.store.getState().auth.user.id;n.length&&n.forEach((n=>{if(n.id!==l){t=document.createElement("div"),t.innerHTML=(0,i.getFriendsLayout)(n.username,n.avatar);const o=t.querySelector("#btnDeleteFriend");o.id=`btnDeleteFriend${n.id}`,e.innerHTML='<h1 class="text-2xl text-white font-black text-center mb-4">Your Friends</h1>',e.append(t),null==o||o.addEventListener("click",(t=>r(void 0,void 0,void 0,(function*(){t.stopPropagation(),yield(0,s.deleteFriend)(n.id,e)})))),t.querySelector("div").addEventListener("click",(()=>{(0,a.navigateTo)(`/profile/${n.id}`)}))}})),e.querySelector("div")||(t=document.createElement("div"),t.innerHTML=(0,i.getEmptyBlock)(),null==e||e.append(t))},e.getUsersBlock=(n,e,t,l,c)=>{let d;const A=o.store.getState().auth.user.id;t.innerHTML='<h1 class="text-2xl text-white font-black text-center mb-4">All Users</h1>',n.length&&n.forEach((n=>{let o=!1;if(n.id!==A){if(l.pendingUserIds&&(o=l.pendingUserIds.some((e=>e===n.id))),e.friends.some((e=>e.id==n.id)))return;const A=c.requests.find((e=>e.requesterId===n.id));d=document.createElement("div"),d.innerHTML=(0,i.getUserLayout)(n.username,n.avatar);const u=d.querySelector("#btnAddFriend"),g=d.querySelector("#btnAcceptFriend"),p=d.querySelector("#btnCancelFriendRequest");u.id=`btnAddFriend${n.id}`,p.id=`btnCancelFriendRequest${n.id}`,A?g.classList.remove("hidden"):o?p.classList.remove("hidden"):u.classList.remove("hidden"),null==t||t.append(d),null==u||u.addEventListener("click",(e=>r(void 0,void 0,void 0,(function*(){e.stopPropagation(),l=yield(0,s.addFriend)(n.id,u)})))),null==g||g.addEventListener("click",(n=>r(void 0,void 0,void 0,(function*(){n.stopPropagation(),A&&(yield(0,s.acceptFriend)(A,t))})))),null==p||p.addEventListener("click",(e=>r(void 0,void 0,void 0,(function*(){e.stopPropagation(),l=yield(0,s.cancelFriendshipRequest)(n.id,p,l.requests)})))),d.querySelector("div").addEventListener("click",(()=>{(0,a.navigateTo)(`/profile/${n.id}`)}))}})),t.querySelector("div")||(d=document.createElement("div"),d.innerHTML=(0,i.getEmptyBlock)(),null==t||t.append(d))}},7312:function(n,e,t){var r=this&&this.__awaiter||function(n,e,t,r){return new(t||(t=Promise))((function(o,a){function i(n){try{l(r.next(n))}catch(n){a(n)}}function s(n){try{l(r.throw(n))}catch(n){a(n)}}function l(n){var e;n.done?o(n.value):(e=n.value,e instanceof t?e:new t((function(n){n(e)}))).then(i,s)}l((r=r.apply(n,e||[])).next())}))};Object.defineProperty(e,"__esModule",{value:!0}),e.handleRegistration=function(){const n=document.querySelector("#usernameRegistration"),e=document.querySelector("#emailRegistration"),t=document.querySelector("#passwordRegistration"),c=document.querySelector("#submitRegistration"),d=document.querySelector("#questionAlreadyRegistr"),A=[n,e,t];(0,l.navigationHandle)(),A.forEach((n=>{n.addEventListener("click",(()=>{n.className="w-full p-2 border rounded"}))})),c.addEventListener("click",(n=>r(this,void 0,void 0,(function*(){n.preventDefault();try{const n={username:null,email:null,password:null};A.forEach((e=>{let t=e.type.toLowerCase();(0,a.validateInput)(e),"text"===e.type&&(t="username"),n[t]=e.value})),yield s.store.registration(n.username,n.email,n.password)}catch(n){(0,i.handleModalError)(n)}})))),d.addEventListener("click",(()=>{(0,o.navigateTo)("/signIn")}))};const o=t(5941),a=t(4326),i=t(1829),s=t(807),l=t(2135)},7359:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.leaderBoardPage=function(n){return document.body.classList.add("bg-gradient-to-t","from-black","via-black","to-gray-800","h-full","overflow-hidden"),n.className="h-screen w-full flex items-center",`\n\t\t${(0,r.navigation)()}\n\n\t\t\t<div class="flex items-center justify-center w-full h-full  rounded-2xl text-center mt-24 m-12">\n\t\t\t\t<div class="grid gap-2 h-4/5 w-full bg-white rounded-3xl p-7">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h1 class="text-2xl mt-3">Leaderboard</h1>\n\t\t\t\t\t</div>\n\t\t\t\t\t${l()}\n\t\t\t\t\t${s((0,o.filterLeaderBoard)(i(a)))}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\n\t`};const r=t(2135),o=t(3180),a=[{id:1,username:"john",wonGames:10,playedGames:11,totalPoints:0},{id:2,username:"terminator2599",wonGames:1,playedGames:56,totalPoints:0},{id:3,username:"belka405",wonGames:32,playedGames:50,totalPoints:0},{id:4,username:"player4",wonGames:15,playedGames:20,totalPoints:0},{id:5,username:"blick3",wonGames:25,playedGames:35,totalPoints:0},{id:6,username:"player6",wonGames:10,playedGames:5,totalPoints:0},{id:7,username:"metori",wonGames:50,playedGames:60,totalPoints:0},{id:8,username:"pl3434ayer8",wonGames:30,playedGames:80,totalPoints:0},{id:9,username:"nagibator",wonGames:5,playedGames:10,totalPoints:0},{id:10,username:"player10",wonGames:8,playedGames:8,totalPoints:0},{id:11,username:"erf",wonGames:400,playedGames:2200,totalPoints:0},{id:16,username:"player6",wonGames:120,playedGames:125,totalPoints:0},{id:17,username:"dotaSHLYAPA",wonGames:40,playedGames:100,totalPoints:0},{id:28,username:"plat",wonGames:30,playedGames:80,totalPoints:0},{id:29,username:"player9",wonGames:5,playedGames:10,totalPoints:0},{id:110,username:"kilchenk",wonGames:8,playedGames:8,totalPoints:0}],i=n=>n.map((n=>{let e=5*n.wonGames-(n.playedGames-n.wonGames);return Object.assign(Object.assign({},n),{totalPoints:e<0?0:e})})),s=n=>{let e=0;return n.map((n=>(e++,`<div class="grid w-full h-8/10 grid-cols-5 justify-center content-center">\n\t\t\t\t\t${(n=>n<4?`<p class="font-bold text-xl text-yellow-400"> ${n} </p>`:`<p class="font-bold text-l"> ${n} </p>`)(e)}\n\t\t\t\t\t\t<p > ${n.username} </p>\n\t\t\t\t\t\t<p > ${n.playedGames} </p>\n\t\t\t\t\t\t<p > ${n.wonGames} </p>\n\t\t\t\t\t\t<p > ${n.totalPoints} </p>\n\t\t\t</div>`))).join("")},l=()=>'<div class="grid w-full h-8/10 grid-cols-5 justify-center content-center">\n\t\t<p> Position </p>\n\t\t<p> Player </p>\n\t\t<p> Matches Played </p>\n\t\t<p> Matches Won </p>\n\t\t<p> Points </p>\n\t</div>'},7490:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.settingsPage=function(n){document.body.classList.add("bg-gradient-to-t","from-black","via-black","to-gray-800","h-full","overflow-hidden");const e=(0,s.getColorFromUsername)(l.store.getUser().username),t=l.store.getUser().username.charAt(0).toUpperCase(),c=l.store.getUser().avatar;return n.className="mx-auto h-screen w-full",`\n\t\t\t\t${(0,i.navigation)()}\n\t\t\t\t<div class="w-full h-full flex flex-col flex-1 items-center justify-center min-h-screen font-mono my-5">\n  \t\t\t\t\t<div class="px-6 py-3 text-black bg-white rounded-lg text-xl w-4/5 h-4/5 text-center">\n\t\t\t\t\t\t<h1 class="font-bold text-3xl">Your Profile</h1>\n\t\t\t\t\t\t<div class="grid grid-cols-10 grid-rows-5 gap-4 w-5/5 h-4/5 my-5 py-2 px-2 text-gray-500">\n    \t\t\t\t\t\t<div class=" col-start-5 col-span-2 row-start-1 row-span-2">\n\t\t\t\t\t\t\t\t${c?'<img id="profileImg" class="rounded-full object-cover w-48 h-48" draggable="false" alt="Profile Image">':`<div id="profileImg" class="text-5xl text-white font-bold mx-auto flex justify-center items-center object-cover content-center select-none w-48 h-48 ${e} rounded-full cursor-pointer">\n                      ${t}\n                    </div>`}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t <div id="imgDropdownMenu"\n\t\t\t\t\t\t\t\t\tclass="hidden absolute z-10 w-48 bg-white rounded-lg shadow-lg">\n\t\t\t\t\t\t\t\t\t<button id="changePhotoBtn" class="block w-full text-left px-4 py-2 hover:bg-gray-100">Change photo</button>\n\t\t\t\t\t\t\t\t\t<input type="file" accept="image/*" class=" text-xs border-2 border-blue-700 max-w-xs p-1 m-1" id="uploadImgInput" hidden/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=" col-start-2 col-span-4 row-start-3">\n\t\t\t\t\t\t\t\t<h1 >Your first name</h1>\n\t\t\t\t\t\t\t\t<input class="inputUserInfo border-2 border-blue-700 max-w-xs p-2 m-1" name="firstName" autocomplete="first name"> </input>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class="col-start-6 col-span-4" >\n\t\t\t\t\t\t\t\t<p >Your last name</p>\n\t\t\t\t\t\t\t\t<input class="inputUserInfo border-2 border-blue-700 max-w-xs p-2 m-1" name="lastName" autocomplete="last name"> </input>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=" col-start-2 col-span-4">\n\t\t\t\t\t\t\t\t<p >Your username</p>\n\t\t\t\t\t\t\t\t<input class="inputUserInfo border-2 border-blue-700 max-w-xs p-2 m-1" name="userName" autocomplete="username"> </input>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=" col-start-6 col-span-4">\n\t\t\t\t\t\t\t\t<p >Your email</p>\n\t\t\t\t\t\t\t\t<input class="inputUserInfo border-2 border-blue-700 max-w-xs p-2 m-1" name="E-mail" autocomplete="email"> </input>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class="grid col-start-2 col-span-4 m-2 place-items-center max-w-s ">\n\t\t\t\t\t\t\t\t<p>Two-factor Authentication </p>\n\t\t\t\t\t\t\t\t<div class="flex">\n                    \t\t\t\t<button class='bg-red-500 p-2 m-1 border rounded text-white' id='disableTwoFactorBtn'>Disable</button>\n                \t\t\t\t\t<button class='bg-green-500 p-2 m-1 border rounded text-white' id='enableTwoFactorBtn'>Enable</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=" col-start-5 col-span-2"><button class="w-full h-full text-white focus:outline-none bg-blue-300" id="saveChangesSettings"> SAVE CHANGES </button></div>\n\t\t\t\t\t\t</div>\n  \t\t\t\t\t</div>\n\t\t\t\t\t${(0,a.getModalTwoFactor)()}\n\t\t\t\t\t${(0,r.getModalInput)()}\n\t\t\t\t\t${(0,o.getModalWindowSuccess)()}\n\t\t\t\t</div>`};const r=t(7002),o=t(1237),a=t(1095),i=t(2135),s=t(145),l=t(807)},7539:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.registrationPage=function(){return document.body.classList.add("w-full","h-screen","flex","flex-col","bg-gradient-to-t","from-black","via-black","to-gray-800","overflow-hidden"),`\n            ${(0,o.navigation)()}\n            <div class="w-full h-full flex shadow-lg  bg-white">\n                <div class=" select-none w-full p-10 flex flex-col justify-center bg-gradient-to-r from-purple-900 to-blue-900 text-white">\n                    <h1 class="text-4xl font-bold cursor-default">Transcendence</h1>\n                    <p class=" cursor-default mt-4 text-lg">Join us today and start your journey with our amazing platform.</p>\n                </div>\n                <div class="w-full p-10 flex flex-col justify-center rounded-r-lg">\n                    <h2 class="select-none text-2xl font-bold text-center mb-4 cursor-default">Registration</h2>\n                    <form id="registerForm" class="space-y-4">\n                        <input id="usernameRegistration" type="text" placeholder="Username" class="w-full p-2 border rounded">\n                        <input id="emailRegistration" type="email" placeholder="Your email" class="w-full p-2 border rounded">\n                        <input id="passwordRegistration" type="password" placeholder="Your password" class="w-full p-2 border rounded">\n                        <button id="submitRegistration" class="w-full bg-green-500 text-white p-2 rounded hover:bg-blue-600 cursor-pointer">Sign Up</button>\n                    </form>\n                    <p class="text-center select-none mt-4 cursor-default ">Already registered? <a class="text-blue-500 cursor-pointer" id="questionAlreadyRegistr">Sign In</a></p>\n                </div>\n            </div>\n            ${(0,r.getModalWindowError)()}\n    `};const r=t(7624),o=t(2135)},7624:function(n,e,t){var r=this&&this.__createBinding||(Object.create?function(n,e,t,r){void 0===r&&(r=t);var o=Object.getOwnPropertyDescriptor(e,t);o&&!("get"in o?!e.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(n,r,o)}:function(n,e,t,r){void 0===r&&(r=t),n[r]=e[t]}),o=this&&this.__exportStar||function(n,e){for(var t in n)"default"===t||Object.prototype.hasOwnProperty.call(e,t)||r(e,n,t)};Object.defineProperty(e,"__esModule",{value:!0}),o(t(5859),e),o(t(9548),e)},7659:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},7825:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},7851:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.hideWarning=e.activateWarning=void 0,e.loginPage=function(n){return document.body.classList.add("h-screen","flex","items-center","justify-center","bg-gradient-to-t","from-black","via-black","to-gray-800","overflow-hidden"),`\n        ${(0,a.navigation)()}\n            <div class="w-1/3 min-h-1/3 mx-auto mt-24 p-6 bg-white shadow-md rounded-lg flex flex-col justify-center items-center">\n                <h2 class="text-xl select-none font-semibold text-gray-700 text-center mb-4">Login</h2>\n                <input type="email" placeholder="your email" class="w-full m-2 px-3 py-2 border rounded focus:ring-2 focus:ring-blue-400" id="loginInput">\n                <p id="warningMessage" class="invisible text-red-500 text-sm">!</p>\n                <input type="password" placeholder="your password" class="w-full m-2 px-3 py-2 border rounded focus:ring-2 focus:ring-blue-400" id="loginPass">\n                <p id="warningMessage" class="invisible text-red-500 text-sm">!</p>\n                <button class="w-full select-none bg-green-500 m-1 text-white py-2 rounded hover:bg-green-600" id="loginBtn">Login</button>\n            </div>\n            ${(0,r.getModalWindowError)()}\n            ${(0,o.getModalInput)()}\n        `};const r=t(7624),o=t(7002),a=t(2135);e.activateWarning=(n,e)=>{const t=document.querySelectorAll(n);console.log(t),t.forEach((n=>{n.classList.remove("invisible"),e&&(n.textContent=e)}))},e.hideWarning=n=>{document.querySelectorAll(n).forEach((n=>{n.classList.add("invisible")}))}},8156:function(n,e,t){var r=this&&this.__awaiter||function(n,e,t,r){return new(t||(t=Promise))((function(o,a){function i(n){try{l(r.next(n))}catch(n){a(n)}}function s(n){try{l(r.throw(n))}catch(n){a(n)}}function l(n){var e;n.done?o(n.value):(e=n.value,e instanceof t?e:new t((function(n){n(e)}))).then(i,s)}l((r=r.apply(n,e||[])).next())}))},o=this&&this.__importDefault||function(n){return n&&n.__esModule?n:{default:n}};Object.defineProperty(e,"__esModule",{value:!0});const a=o(t(2468)),i=t(807);t(644),window.addEventListener("DOMContentLoaded",(()=>r(void 0,void 0,void 0,(function*(){yield i.store.checkAuth(),(0,a.default)()}))))},8504:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.getModalTwoFactor=void 0,e.getModalTwoFactor=()=>'<div id="modalWindowTwoFactor" class="fixed inset-0 hidden flex justify-center z-[9999] backdrop-brightness-25 transition-all duration-500">\n                <div class="flex flex-col mt-10 justify-center items-center bg-white w-1/3 h-1/2 text-white rounded-lg shadow-lg opacity-0 transform -translate-y-full transition-all duration-500">\n                        <p class="text-black">Your QR-Code</p>\n                        <img id="modalQrCode" class="w-48 h-48 m-2"></img>\n                        <p id="secretPhrase" class="text-black"></p>\n                        <input id="codeForTwoFactor" placeholder="enter your code" class="p-1 m-2 border text-black"></input>\n                        <p id="warningMessage" class="invisible text-red-500 text-sm">test</p>\n                        <button id="modalTwoFactorActivateBtn" class="w-12 h-8 p-1 m-2 bg-green-500 border rounded text-white "> Send </button>\n                </div>\n            </div>'},8563:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.getModalInput=void 0,e.getModalInput=()=>'<div id="modalWindowInput" class="fixed inset-0 hidden flex justify-center transition-all duration-500">\n              <div class="flex flex-col mt-10 justify-center items-center bg-white w-1/4 h-1/5 text-white rounded-lg transform -translate-y-full transition-all duration-500">\n                  <p class="text-black text-center text-xs font-semibold" id="modalInputHeader" ></p>\n\t\t\t\t          <input placeholder="Your code" class="p-1 m-2 border text-black" id="modalInput"></input>\n                  <p id="warningMessageModalInput" class="invisible text-red-500 text-sm"></p>\n\t\t\t\t          <button id="modalInputBtn" class="p-1 m-2 w-12 h-8 bg-green-500 border rounded text-white">Send<button/>\n              </div>\n          </div>'},8721:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.gamePage=function(){return document.body.style.margin="0",document.body.style.padding="0",document.body.classList.add("bg-gradient-to-t","from-black","via-black","to-gray-800"),`\n        ${(0,r.navigation)()}\n        <canvas id="game-board" width="800" height="500" class="bg-gray-500 border"></canvas>\n        <p id="score-info" class="text-4xl text-white" class="bg-gray-500" > Score </p>\n        <button id="restart-btn" class="px-3 py-1 border-2 border-crimson rounded-[10px] bg-gray-500 text-white text-[25px]"> Restart </button>`};const r=t(2135)},8819:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.dropMenuRoutes=e.naviRoutes=void 0,e.naviRoutes={Home:"/",Game:"/game"},e.dropMenuRoutes={Profile:"/profile",Game:"/game",Leaderboard:"/leaderboard",Settings:"/settings",Friends:"/friends"}},8863:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.getUserLayout=e.getEmptyBlock=e.getFriendsLayout=void 0;const r=t(145),o=t(807);e.getFriendsLayout=(n,e)=>{const t=(0,r.getColorFromUsername)(n),a=n.charAt(0).toUpperCase();return`<div class="bg-gray-800 flex items-center justify-between rounded-lg p-3 mb-2 w-full mx-auto hover:bg-gray-700 transition-colors duration-300 select-none">\n\t\t\t  <div class="flex space-x-4">\n\t\t\t\t  <div class="w-12 h-12 rounded-full bg-green-700 flex items-center justify-center text-white font-bold text-lg hover:scale-105 transition-transform duration-200 flex-shrink-0">\n\t\t\t\t  ${e?`<img src=${o.API_URL+e} class="w-full h-full object-cover rounded-full"/>`:`<div alt="Profile" class="flex text-white font-bold text-s justify-center items-center content-center w-12 h-12 ${t} rounded-full cursor-pointer">${a}</div>`}\n\t\t\t\t  </div>\n\t\t\t\t<div>\n\t\t\t\t\t<span class="text-white text-xl font-semibold">${n}</span>\n\t\t\t\t  <p class="text-gray-400 text-sm">Online</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class="flex">\n\t\t\t\t<button id="btnDeleteFriend" type="button" class=" flex justify-center w-18 h-10 text-white bg-red-700 hover:bg-red-800 focus:outline-none focus:ring-4 focus:ring-red-300 font-medium rounded-full text-sm px-5 py-2.5 text-center me-2 mb-2 dark:bg-red-600 dark:hover:bg-red-700 dark:focus:ring-red-900">Delete</button>\n\t\t\t  </div>\n\t\t  </div>`},e.getEmptyBlock=()=>'<div class="bg-gray-800 flex items-center justify-between rounded-lg p-4 mb-2 w-3/4 mx-auto hover:bg-gray-700 transition-colors duration-300 select-none">\n\t\t\t  <div class="flex items-center space-x-4">\n\t\t\t\t\t<span class="text-white text-xl font-semibold">No one is here yet!</span>\n\t\t\t</div>\n\t\t  </div>',e.getUserLayout=(n,e)=>{const t=(0,r.getColorFromUsername)(n),a=n.charAt(0).toUpperCase();return`\n  <div class="bg-gray-800 flex items-center justify-between rounded-lg p-3 mb-2 w-full mx-auto hover:bg-gray-700 transition-colors duration-300 select-none">\n\t<div class="flex items-center space-x-4 min-w-0">\n\t  <div class="w-12 h-12 rounded-full bg-green-700 flex items-center justify-center text-white font-bold text-lg hover:scale-105 transition-transform duration-200 flex-shrink-0">\n\t\t${e?`<img src=${o.API_URL+e} class="w-full h-full object-cover rounded-full"/>`:`<div alt="Profile" class="flex text-white font-bold text-s justify-center items-center content-center w-12 h-12 ${t} rounded-full cursor-pointer">${a}</div>`}\n\t\t\n\t  </div>\n\t  <div class="flex flex-col min-w-0">\n\t\t<span class="text-white text-base font-semibold truncate">${n}</span>\n\t\t<p class="text-gray-400 text-xs">Online</p>\n\t  </div>\n\t</div>\n\t<div class="flex items-center ml-2">\n\t\t  <button id="btnCancelFriendRequest" type="button" class=" hidden text-center w-18 h-10 text-white bg-red-700 hover:bg-red-800 focus:outline-none focus:ring-4 focus:ring-red-300 font-medium rounded-full text-sm   dark:bg-red-600 dark:hover:bg-red-700 dark:focus:ring-red-900">Cancel</button>\n\t\t  <button id="btnAddFriend" type="button" class="hidden w-18 h-10 text-white bg-blue-700 hover:bg-blue-800 focus:outline-none focus:ring-4 focus:ring-blue-300 font-medium rounded-full text-sm  text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">Add</button>\n\t\t  <button id="btnAcceptFriend" type="button" class="hidden w-18 h-10 text-white bg-sky-500 hover:bg-sky-700 focus:outline-none focus:ring-4 focus:ring-sky-300 font-medium rounded-full text-sm text-center dark:bg-blue-200 dark:hover:bg-blue-700 dark:focus:ring-blue-800">Accept</button>\n\t\t  <button type="button" class="text-white w-18 h-10 bg-yellow-200 hover:bg-yellow-200 focus:outline-none focus:ring-4 font-medium rounded-full text-sm text-center dark:bg-amber-200 dark:hover:bg-amber-400">Reject</button>\n\t</div>\n  </div>\n  `}},8913:function(n,e,t){var r=this&&this.__awaiter||function(n,e,t,r){return new(t||(t=Promise))((function(o,a){function i(n){try{l(r.next(n))}catch(n){a(n)}}function s(n){try{l(r.throw(n))}catch(n){a(n)}}function l(n){var e;n.done?o(n.value):(e=n.value,e instanceof t?e:new t((function(n){n(e)}))).then(i,s)}l((r=r.apply(n,e||[])).next())}))};Object.defineProperty(e,"__esModule",{value:!0}),e.handleModalInput=void 0;const o=t(7851),a=t(807),i=t(1218),s=t(1237);e.handleModalInput=(n,e,t,l)=>{const c=document.querySelector("#modalWindowInput"),d=null==c?void 0:c.querySelector("div"),A=null==c?void 0:c.querySelector("#modalInput"),u=null==c?void 0:c.querySelector("#modalInputBtn"),g=null==c?void 0:c.querySelector("#modalInputHeader");null==c||c.classList.remove("hidden"),setTimeout((()=>{null==d||d.classList.remove("-translate-y-full","opacity-0"),null==d||d.classList.add("translate-y-0","opacity-100")}),50),null==A||A.addEventListener("click",(()=>(0,o.hideWarning)("#warningMessageModalInput"))),g.textContent=e,null==c||c.addEventListener("click",(n=>{n.target===c&&((0,o.hideWarning)("#warningMessageModalInput"),null==d||d.classList.remove("translate-y-0","opacity-100"),null==d||d.classList.add("-translate-y-full","opacity-0"),setTimeout((()=>{null==c||c.classList.add("hidden")}),400))})),null==u||u.addEventListener("click",(()=>r(void 0,void 0,void 0,(function*(){if((0,o.hideWarning)("#warningMessageModalInput"),u.innerHTML=(0,i.getLoader)(),"2fa/disable"===n){let n=yield a.store.disableTwoFactor((null==A?void 0:A.value)?A.value:"");return 200===(null==n?void 0:n.status)?((0,s.handleModalSuccess)("2FA is successfull deleted"),u.innerHTML="Send",(0,o.hideWarning)("#warningMessageModalInput"),null==d||d.classList.remove("translate-y-0","opacity-100"),null==d||d.classList.add("-translate-y-full","opacity-0"),l&&l(!1),setTimeout((()=>{null==c||c.classList.add("hidden")}),400)):(u.innerHTML="Send",(0,o.activateWarning)("#warningMessageModalInput","Incorrect code")),n}if("2fa/login"===n){let n=yield a.store.loginWithTwoFactor((null==A?void 0:A.value)?A.value:"",t||"");return console.log(n),400!==n.status&&401!==n.status||((0,o.activateWarning)("#warningMessageModalInput",n.message),u.innerHTML="Send"),n}}))))}},9032:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.handleProfilePage=function(n,e){let t;t=(null==e?void 0:e.id)?e.id:o.store.getState().auth.user.id,(0,a.getUserData)(t),(0,r.navigationHandle)()};const r=t(2135),o=t(807),a=t(2674)},9547:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.profilePage=function(n){return document.body.classList.add("bg-gradient-to-t","from-black","via-black","to-gray-800","h-full"),n.className="h-screen w-full flex items-center",`\n        ${(0,r.navigation)()}\n\n            <div class="flex items-center justify-center w-full h-full  rounded-2xl text-center">\n                <div class="grid grid-cols-8 grid-rows-4 w-2/3 h-2/3  mt-12 bg-white rounded-3xl">\n                    <div class="my-5 col-start-4 col-span-2" id="photoContainer">\n                        <img id="profileImg" alt="Profile Photo" class="mx-auto hidden w-36 h-36 rounded-full border-4 border-white object-cover" draggable="false" >\n                        <div id="profileImgEmpty" class="text-5xl hidden text-white font-bold mx-auto flex justify-center items-center content-center w-36 h-36 rounded-full cursor-pointer"></div>\n                    </div>\n\n                    <div class="flex justify-center items-center col-start-4 col-span-2 ">\n                        <h2 class="text-4xl font-bold text-gray-800" id="userNameProfile"></h2>\n                    </div>\n\n                    <div class=" flex justify-center items-center col-start-2 col-span-6   flex justify-between text-gray-600 text-lg">\n                        <div class="w-1/3 ">\n                            <p class="text-2xl">0</p>\n                            <p class="text-sm">Level</p>\n                        </div>\n                        <div class="w-1/3 ">\n                            <p class="text-2xl ">0</p>\n                            <p class="text-sm">Friends</p>\n                        </div>\n                        <div class="w-1/3 ">\n                            <p class="text-2xl">0</p>\n                            <p class="text-sm">Matches played</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        \n    `};const r=t(2135)},9548:function(n,e,t){var r=this&&this.__createBinding||(Object.create?function(n,e,t,r){void 0===r&&(r=t);var o=Object.getOwnPropertyDescriptor(e,t);o&&!("get"in o?!e.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(n,r,o)}:function(n,e,t,r){void 0===r&&(r=t),n[r]=e[t]}),o=this&&this.__exportStar||function(n,e){for(var t in n)"default"===t||Object.prototype.hasOwnProperty.call(e,t)||r(e,n,t)};Object.defineProperty(e,"__esModule",{value:!0}),o(t(1829),e),o(t(3595),e)},9615:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.friendsPage=function(){return document.body.classList.add("bg-gradient-to-t","from-black","via-black","to-gray-800"),`\n\t\t\t${(0,o.navigation)()}\n\t\t\t<div class="flex items-center justify-center min-h-screen w-full px-4 py-8 select-none">\n  \t\t\t\t<div class="flex flex-col md:flex-row w-full md:w-3/4 lg:w-2/3 gap-6">\n    \n    \t\t\t\t<div id="allUsersContainer" class="flex flex-col  rounded-2xl shadow-lg p-6 flex-1">\n      \t\t\t\t\t<h1 class="text-2xl text-white font-black text-center mb-4">All Users</h1>\n   \t\t\t\t\t</div>\n    \n    \t\t\t\t<div id="friendsContainer" class="flex flex-col rounded-2xl shadow-lg p-6 flex-1">\n      \t\t\t\t\t<h1 class="text-2xl text-white font-black text-center mb-4">Your Friends</h1>\n    \t\t\t\t</div>\n    \n  \t\t\t\t</div>\n\t\t\t</div>\n\t\t\t${(0,r.getModalWindowSuccess)()}`};const r=t(1237),o=t(2135)},9710:(n,e,t)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.activateAccountPage=function(){return document.body.style.margin="0",document.body.style.padding="0",document.body.classList.add("bg-gradient-to-t","from-black","via-black","to-gray-800"),`\n        <div class="flex flex-col items-center justify-center min-h-screen ">\n                    <div class=" p-10 text-black bg-white rounded-lg text-xl focus:outline-none text-center">\n                        <h1 class="font-bold p-3">We've sent a confirmation email</h1> \n                        <h3 >Please check your inbox and verify your account</h3>\n                    </div>\n                </div>\n                ${(0,r.getModalWindowSuccess)()}\n\t\t`};const r=t(1237)},9737:function(n,e,t){var r=this&&this.__createBinding||(Object.create?function(n,e,t,r){void 0===r&&(r=t);var o=Object.getOwnPropertyDescriptor(e,t);o&&!("get"in o?!e.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(n,r,o)}:function(n,e,t,r){void 0===r&&(r=t),n[r]=e[t]}),o=this&&this.__exportStar||function(n,e){for(var t in n)"default"===t||Object.prototype.hasOwnProperty.call(e,t)||r(e,n,t)};Object.defineProperty(e,"__esModule",{value:!0}),o(t(9757),e)},9757:function(n,e,t){var r=this&&this.__awaiter||function(n,e,t,r){return new(t||(t=Promise))((function(o,a){function i(n){try{l(r.next(n))}catch(n){a(n)}}function s(n){try{l(r.throw(n))}catch(n){a(n)}}function l(n){var e;n.done?o(n.value):(e=n.value,e instanceof t?e:new t((function(n){n(e)}))).then(i,s)}l((r=r.apply(n,e||[])).next())}))};Object.defineProperty(e,"__esModule",{value:!0}),e.handleFriendsPage=void 0;const o=t(2135),a=t(807),i=t(7152);e.handleFriendsPage=()=>r(void 0,void 0,void 0,(function*(){const n=document.querySelector("#allUsersContainer"),e=document.querySelector("#friendsContainer");(0,o.navigationHandle)();const t=a.store.getAllUsers(),r=yield a.store.getAllFriends(),s=yield a.store.getPendingFriendsRequests(),l=yield a.store.getIncomingFriendRequest(),c=t,d=r.data;(0,i.getUsersBlock)(c,d,n,s,l),(0,i.getFriendsBlock)(d.friends,e)}))},9825:function(n,e,t){var r=this&&this.__createBinding||(Object.create?function(n,e,t,r){void 0===r&&(r=t);var o=Object.getOwnPropertyDescriptor(e,t);o&&!("get"in o?!e.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(n,r,o)}:function(n,e,t,r){void 0===r&&(r=t),n[r]=e[t]}),o=this&&this.__exportStar||function(n,e){for(var t in n)"default"===t||Object.prototype.hasOwnProperty.call(e,t)||r(e,n,t)};Object.defineProperty(e,"__esModule",{value:!0}),o(t(3438),e)}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var a=e[r]={id:r,exports:{}};return n[r].call(a.exports,a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.r=n=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},t.nc=void 0,t(8156)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,